"use strict";(self.webpackJsonpCheckout=self.webpackJsonpCheckout||[]).push([[8964],{44713:(e,t,s)=>{s.r(t),s.d(t,{default:()=>L});var i=s(31635),a=s(70355),n=s(49655),o=s(39981),d=s(69022),l=s(17986),r=s(39886),c=s(95108),u=s(43586),g=s(69462),m=s(94202),A=s(68512),h=s(38989),p=s(68801),v=s(87650),E=s(49102),f=s(62562),y=s(12319),b=s(22011),C=s(33515),k=s(79001),S=s(84559),F=s(10685),w=s(69070),B=s(74027),_=s(46487),N=s(4899),U=s(60833),V=s(74302);const I=(0,A.A)((0,g.bk)({handleSubmit:(e,{props:{onSubmit:t}})=>{t(e)},mapPropsToValues:({getFields:e,customerMessage:t,billingAddress:s})=>Object.assign(Object.assign({},(0,b.A)(e(s&&s.countryCode),s)),{orderComment:t}),isInitialValid:({billingAddress:e,getFields:t,language:s})=>!!e&&(0,C.A)({language:s,formFields:t(e.countryCode)}).isValidSync(e),validationSchema:({language:e,getFields:t,methodId:s})=>"amazonpay"===s?(0,m.RZ)((s=>(0,F.A)({translate:(0,C.X)(e),formFields:t(s&&s.countryCode)}))):(0,m.RZ)((s=>(0,C.A)({language:e,formFields:t(s&&s.countryCode)}))),enableReinitialize:!0})((({methodId:e,getFields:t,billingAddress:s,setFieldValue:r,values:c,onUnhandledError:u})=>{const[g,m]=(0,a.useState)(!1),A=(0,a.useRef)(null),{isPayPalFastlaneEnabled:b,paypalFastlaneAddresses:C}=(0,h.A)(),{themeV2:F}=(0,d.w)(),{checkoutService:I,checkoutState:M}=(0,o.Q)(),{data:{getCustomer:L,getConfig:P,getBillingCountries:R,getCart:z},statuses:{isUpdatingBillingAddress:O,isUpdatingCheckout:Z}}=M,j=L(),x=P(),G=z();if(!x||!j||!G)throw new Error("checkout data is not available");const J=j.isGuest,K=j.addresses,Q="amazonpay"===e,T=t(c.countryCode),W=T.filter((({custom:e})=>e)),X=W.length>0,q=Q&&X?W:T,D=J&&b?C:K,H=(null==D?void 0:D.length)>0,Y=s&&(0,v.A)(s,D,t(s.countryCode)),$=O()||Z(),{enableOrderComments:ee}=x.checkoutSettings,te=ee&&(0,B.A)(G)<1,se=e=>(0,i.__awaiter)(void 0,void 0,void 0,(function*(){m(!0);try{yield I.updateBillingAddress(e)}catch(e){e instanceof Error&&u(e)}finally{m(!1)}})),ie=R()||k.M,{googleMapsApiKey:ae}=x.checkoutSettings,ne=(0,S.A)(x.checkoutSettings);return a.createElement(N.A,{autoComplete:"on"},Q&&s&&a.createElement("div",{className:"form-fieldset"},a.createElement(V.A,{address:s})),a.createElement(U.A,{id:"checkoutBillingAddress",ref:A},H&&!Q&&a.createElement(U.A,{id:"billingAddresses"},a.createElement(p.A,{isLoading:g},a.createElement(E.A,{addresses:D,onSelectAddress:se,onUseNewAddress:()=>{se({})},selectedAddress:Y?s:void 0,type:f.A.Billing}))),!Y&&a.createElement(l.A,{isLoading:g},a.createElement(y.A,{countries:ie,countriesWithAutocomplete:["US","CA","AU","NZ","GB"],countryCode:c.countryCode,formFields:q,googleMapsApiKey:ae,isFloatingLabelEnabled:ne,setFieldValue:r,shouldShowSaveAddress:!J}))),te&&a.createElement(w.A,null),a.createElement("div",{className:"form-actions"},a.createElement(_.Ay,{className:F?"body-bold":"",disabled:$||g,id:"checkout-billing-continue",isLoading:$||g,type:"submit",variant:_.Ak.Primary},a.createElement(n.A,{id:"common.continue_action"}))))})));var M=s(21106);const L=({navigateNextStep:e,onReady:t,onUnhandledError:s})=>{const{checkoutService:g,checkoutState:m}=(0,o.Q)(),{themeV2:A}=(0,d.w)(),{data:{getCheckout:h,getConfig:p,getCart:v,getCustomer:E,getBillingAddress:f,getBillingAddressFields:y},statuses:{isLoadingBillingCountries:b}}=m,C=p(),k=E(),S=h(),F=v();if(!(C&&k&&S&&F))throw new Error("Unable to access checkout data");const w=b(),B=S.customerMessage,_=function(e){const t=(0,M.A)(e);return t&&["amazonpay"].includes(t.providerId)?t.providerId:void 0}(S),N=f(),U=y;return(0,a.useEffect)((()=>{(0,i.__awaiter)(void 0,void 0,void 0,(function*(){try{yield g.loadBillingAddressFields(),t()}catch(e){e instanceof Error&&s(e)}}))}),[]),a.createElement(l.A,{isLoading:w},a.createElement("div",{className:"checkout-form"},a.createElement("div",{className:"form-legend-container"},a.createElement(u.A,{testId:"billing-address-heading",themeV2:A},a.createElement(n.A,{id:"billing.billing_address_heading"}))),a.createElement(I,{billingAddress:N,customerMessage:B,getFields:U,methodId:_,navigateNextStep:e,onSubmit:t=>(0,i.__awaiter)(void 0,void 0,void 0,(function*(){var{orderComment:a}=t,n=(0,i.__rest)(t,["orderComment"]);const o=g.updateBillingAddress,d=g.updateCheckout,l=f(),u=[],m=(0,r.A)(n);m&&!(0,c.A)(m,l)&&u.push(o(m)),B!==a&&u.push(d({customerMessage:a}));try{yield Promise.all(u),e()}catch(e){e instanceof Error&&s(e)}})),onUnhandledError:s})))}}}]);
//# sourceMappingURL=billing-d1ac85a0.js.map