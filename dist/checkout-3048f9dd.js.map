{"version":3,"file":"checkout-3048f9dd.js","mappings":"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","sources":["webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/utility/src/navigateToOrderConfirmation.ts","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/core/src/app/payment/getProviderWithCustomCheckout.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/utility/src/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/payment-integration-api/src/toResolvableComponent.tsx","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CheckoutPageSkeleton.tsx","webpack://checkout/./packages/ui/src/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/common/utility/should-filter-apple-pay.ts","webpack://checkout/./packages/core/src/app/common/utility/is-apple-pay-window.ts","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/ApplePayButton.tsx","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/AmazonPayV2Button.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-fastlane-window.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/PayPalFastlaneWatermark.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/SubscribeSessionStorage.ts","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticMultiConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/ShippingSummary.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/getOrderShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/StyleContext.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/CustomError.ts","webpack://checkout/./packages/core/src/app/shipping/getShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/checkout-button-integration/src/CheckoutButton.tsx","webpack://checkout/./packages/amazon-pay-v2-integration/src/AmazonPayV2Button.tsx","webpack://checkout/./packages/instrument-utils/src/guards/isHTMLElement/isHTMLElement.ts","webpack://checkout/./packages/bigcommerce-payments-integration/src/BigCommercePayments/BigCommercePaymentsButton.tsx","webpack://checkout/./packages/bigcommerce-payments-integration/src/BigCommercePaymentsPayLater/BigcommercePaymentsPayLaterButton.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/payment-integration-api/src/setPrototypeOf.ts","webpack://checkout/./packages/google-pay-integration/src/GooglePayButton.tsx","webpack://checkout/./packages/payment-integration-api/src/isEmbedded.ts","webpack://checkout/./packages/paypal-commerce-integration/src/PayPalCommerceCredit/PayPalCommerceCreditButton.tsx","webpack://checkout/./packages/paypal-commerce-integration/src/PayPalCommerce/PayPalCommerceButton.tsx","webpack://checkout/./packages/stripe-integration/src/stripe-ocs/StripeLinkV2Button.tsx","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalFastlane.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/PoweredByPayPalFastlaneLabel.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/usePayPalFastlaneAddress.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/payment-integration-api/src/isResolvableComponent.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveComponent.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionRegionContainer.ts","webpack://checkout/./packages/checkout-extension/src/Extension.tsx","webpack://checkout/./packages/checkout-extension/src/useExtensions.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-address.ts","webpack://checkout/./packages/core/src/app/common/utility/getNestedValue.ts","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingFormHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingStepHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/queryHandlers/createGetConsignmentHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-customer.ts","webpack://checkout/./packages/ui/src/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-bigcommerce-payments-fastlane-method.ts","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/OrderConfirmationPageSkeleton.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextArea.tsx","webpack://checkout/./packages/locale/src/localizeAddress.ts","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/ui/src/loading/LoadingOverlay.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/StyleProvider.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/shipping/ConsignmentLineItemDetail.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-commerce-fastlane-method.ts","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/ui/src/loading/LoadingSpinner.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-braintree-fastlane-method.ts","webpack://checkout/./packages/core/src/app/common/utility/isExperimentEnabled.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/ui/form/RadioInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/MultiCheckboxControl.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxGroupFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormField.tsx","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CartSummarySkeleton.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","import { Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            (consignment.selectedShippingOption && consignment.selectedShippingOption.id) ||\n            consignment.selectedShippingOption?.type === 'custom',\n    );\n}\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","import { noop } from 'lodash';\n\nimport isBuyNowCart from './isBuyNowCart';\n\nexport default function navigateToOrderConfirmation(orderId?: number): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","import { forIn, isDate, padStart } from 'lodash';\n\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\n    [id: string]: any;\n}): Array<{ fieldId: string; fieldValue: string }> {\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\n\n    forIn(customFieldsObject, (value, key) => {\n        let fieldValue: string;\n\n        if (isDate(value)) {\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\n            const padDay = padStart(value.getDate().toString(), 2, '0');\n\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\n        } else {\n            fieldValue = value;\n        }\n\n        customFields.push({\n            fieldId: key,\n            fieldValue,\n        });\n    });\n\n    return customFields;\n}\n","import { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import { Component, ReactNode } from 'react';\n\nimport ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children?: ReactNode;\n    fallback?: ReactNode;\n    logger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, logger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        if (logger) {\n            logger.log(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { isFunction, noop } from 'lodash';\nimport React, { createContext, FunctionComponent, memo, ReactNode, useMemo, useState } from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    ArraySchema,\n    date,\n    number,\n    NumberSchema,\n    object,\n    ObjectSchema,\n    Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.checkbox) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.checkbox\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                    // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode, useId } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n    children?: ReactNode;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => {\n    const describedBy = useId();\n\n    return (\n        <div\n            aria-describedby={describedBy}\n            className={classNames(\n                'alertBox',\n                additionalClassName,\n                { 'alertBox--info': type === AlertType.Info || !type },\n                { 'alertBox--error': type === AlertType.Error },\n                { 'alertBox--success': type === AlertType.Success },\n                { 'alertBox--warning': type === AlertType.Warning },\n            )}\n            data-test={testId}\n        >\n            <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n            <div\n                aria-live={type === AlertType.Error ? 'assertive' : 'polite'}\n                className=\"alertBox-column alertBox-message\"\n                id={describedBy}\n                role={type === AlertType.Error ? 'alert' : 'status'}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default Alert;\n","import { PaymentMethodId } from './paymentMethod';\n\nexport default function getProviderWithCustomCheckout(methodId?: string | null): string | undefined {\n    if (!methodId) {\n        return undefined;\n    }\n\n    if (methodId === PaymentMethodId.PaypalCommerce || methodId === PaymentMethodId.PaypalCommerceCreditCards) {\n        return PaymentMethodId.PayPalCommerceAcceleratedCheckout;\n    }\n\n    if (methodId === PaymentMethodId.Braintree) {\n        return PaymentMethodId.BraintreeAcceleratedCheckout;\n    }\n\n    return methodId;\n}\n","import React, { memo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Toggle } from '../../ui/toggle';\n\ninterface ShippingOptionAdditionalDescriptionProps {\n    description: string;\n}\n\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\n    ShippingOptionAdditionalDescriptionProps\n> = ({ description }) => {\n    const CHRACTER_LIMIT = 45;\n\n    return (\n        <div className=\"shippingOption-additionalDescription--container\">\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\n                {({ isOpen, toggle }) => (\n                    <>\n                        <span\n                            className={`shippingOption-additionalDescription ${\n                                isOpen\n                                    ? 'shippingOption-additionalDescription--expanded'\n                                    : 'shippingOption-additionalDescription--collapsed'\n                            }`}\n                        >\n                            {description}\n                        </span>\n                        {!isOpen && (\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\n                                <TranslatedString id=\"common.show_more\" />\n                            </a>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        </div>\n    );\n};\n\nexport default memo(ShippingOptionAdditionalDescription);\n","import { ShippingOption } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { ShopperCurrency } from '../../currency';\n\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\nimport './StaticShippingOption.scss';\n\ninterface StaticShippingOptionProps {\n    displayAdditionalInformation?: boolean;\n    method: ShippingOption;\n    shippingCostAfterDiscount?: number;\n}\n\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\n    displayAdditionalInformation = true,\n    method,\n    shippingCostAfterDiscount,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    const renderShippingPrice = () => {\n        if (shippingCostAfterDiscount !== undefined && shippingCostAfterDiscount !== method.cost) {\n            return (\n                <>\n                    <span className=\"shippingOption-price-before-discount\">\n                        <ShopperCurrency amount={method.cost} />\n                    </span>\n                    <ShopperCurrency amount={shippingCostAfterDiscount} />\n                </>\n            );\n        }\n\n        return (\n            <ShopperCurrency amount={method.cost} />\n        )\n    \n    }\n\n    return (\n        <div className=\"shippingOption shippingOption--alt\" data-test=\"static-shipping-option\">\n            {method.imageUrl && (\n                <span className=\"shippingOption-figure\">\n                    <img\n                        alt={method.description}\n                        className=\"shippingOption-img\"\n                        src={method.imageUrl}\n                    />\n                </span>\n            )}\n            <span className={classNames('shippingOption-desc', { 'body-medium': newFontStyle })}>\n                {method.description}\n                {method.transitTime && (\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\n                )}\n                {method.additionalDescription && displayAdditionalInformation && (\n                    <ShippingOptionAdditionalDescription\n                        description={method.additionalDescription}\n                    />\n                )}\n            </span>\n            <span className={classNames('shippingOption-price', { 'body-medium': newFontStyle })}>\n                {renderShippingPrice()}\n            </span>\n        </div>\n    );\n};\n\nexport default StaticShippingOption;\n","import { Cart } from '@bigcommerce/checkout-sdk';\n\nexport default function isBuyNowCart(cart?: Cart): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n    const params = new URLSearchParams(window.location.search);\n\n    return (\n        cart?.source === 'BUY_NOW' ||\n        params.get('action') === 'buy' ||\n        !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout')\n    );\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import React, { FunctionComponent } from 'react';\n\nimport { withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nexport interface ShopperCurrencyProps {\n    amount: number;\n}\n\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\n    amount,\n    currency,\n}) => <>{currency.toCustomerCurrency(amount)}</>;\n\nexport default withCurrency(ShopperCurrency);\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(<div key={`checklist-skeleton-item${i}`} />);\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import { Cart, Consignment, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport { compact, find, isNil, map } from 'lodash';\n\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\n    return compact(\n        map(consignment.lineItemIds, (itemId) =>\n            find(\n                cart.lineItems.physicalItems,\n                (item) => item.id === itemId && isNil(item.parentId),\n            ),\n        ),\n    );\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading,\n    renderWhileLoading,\n}) => {\n    const skeleton = (\n        <>\n            <div className=\"address-form-skeleton\">\n                <div className=\"label\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name\" />\n                <div className=\"name\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"address\" />\n            </div>\n        </>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import React, { ComponentType } from 'react';\n\nimport ResolvableComponent from './ResolvableComponent';\n\nexport default function toResolvableComponent<TProps extends Record<string, any>, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n    resolveIds: TIdentifier[],\n): ResolvableComponent<TProps, TIdentifier> {\n    return Object.assign((props: TProps) => <Component {...props} />, { resolveIds });\n}\n","import { isEmpty, pickBy } from 'lodash';\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\n\nimport InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.includes(id));\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CartSummarySkeleton } from './CartSummarySkeleton';\n\nconst CheckoutPageSkeleton: FunctionComponent = () => (\n    <>\n        <div className=\"layout-main\" data-test=\"checkout-page-skeleton\">\n            <div className=\"checkout-steps checkout-page-skeleton\">\n                <div className=\"title--first\" />\n                <div className=\"textbox\" />\n                <div className=\"subscription\">\n                    <div className=\"checkbox\" />\n                    <div className=\"description\" />\n                </div>\n                <div className=\"terms--1\" />\n                <div className=\"terms--2\" />\n                <div className=\"title\" />\n                <div className=\"title\" />\n                <div className=\"title\" />\n            </div>\n        </div>\n        <CartSummarySkeleton />\n    </>\n);\n\nexport default CheckoutPageSkeleton;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface LoadingNotificationProps {\n    isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingNotification\">\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\n                <div className=\"spinner\" />\n\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\n                    <TranslatedString id=\"common.loading_text\" />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(LoadingNotification);\n","import React, { PureComponent, ReactNode } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { LoadingOverlay } from '@bigcommerce/checkout/ui';\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\ninterface EmptyCartMessageState {\n    isWaiting: boolean;\n}\n\nexport default class EmptyCartMessage extends PureComponent<\n    EmptyCartMessageProps,\n    EmptyCartMessageState\n> {\n    state: EmptyCartMessageState = {\n        isWaiting: true,\n    };\n\n    private waitToken?: number;\n\n    componentDidMount(): void {\n        const { waitInterval } = this.props;\n\n        // @ts-ignore\n        this.waitToken = setTimeout(() => {\n            this.setState({ isWaiting: false });\n        }, waitInterval);\n    }\n\n    componentWillUnmount(): void {\n        clearInterval(this.waitToken);\n    }\n\n    render(): ReactNode {\n        const { loginUrl } = this.props;\n        const { isWaiting } = this.state;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n                <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n            </LoadingOverlay>\n        );\n    }\n}\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n}\n\nexport default CustomerViewType;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote walletbuttons-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div key={`skeleton-container-${i}`} />\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nimport { isExperimentEnabled, shouldFilterApplePay } from '../common/utility';\n\nconst APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'chasepay',\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n    'googlepaypaypalcommerce',\n    'googlepaytdonlinemart',\n    'stripeocs',\n    'googlepaystripeocs',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[], checkoutSettings?: CheckoutSettings): string[] => {\n    return methodIds.filter((methodId) => {\n        // TODO: this check have to be deleted after implementation of Apple Pay for third party browsers will be tested and released\n        if (shouldFilterApplePay(methodId, isExperimentEnabled(checkoutSettings, 'PAYPAL-4324.applepay_web_browser_support'))) {\n            return false;\n        }\n\n        return SUPPORTED_METHODS.includes(methodId);\n    });\n}\n","import { isApplePayWindow } from './';\n\nexport default function shouldFilterApplePay(methodId: string, isBrowserSupported: boolean): boolean {\n    if (methodId !== 'applepay') {\n        return false;\n    }\n\n    return !isApplePayWindow(window) && !isBrowserSupported;\n}\n","interface ApplePayWindow extends Window {\n    ApplePaySession: void;\n}\n\nexport default function isApplePayWindow(window: Window): window is ApplePayWindow {\n    return 'ApplePaySession' in window;\n}\n","import { ComponentType } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveComponent } from '../common/resolver';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId,\n): ComponentType<CheckoutButtonProps> | undefined {\n    return resolveComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        require('../generated/checkoutButtons'),\n    );\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nconst WALLET_BUTTON_HEIGHT = 36;\n\nexport interface CheckoutButtonProps {\n    containerId: string;\n    methodId: string;\n    isShowingWalletButtonsOnTop?: boolean;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nexport default class CheckoutButton extends PureComponent<CheckoutButtonProps> {\n    componentDidMount() {\n        const {\n            containerId,\n            initialize,\n            isShowingWalletButtonsOnTop,\n            methodId,\n            onError,\n            onClick = noop,\n        } = this.props;\n\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\n            : {};\n\n        initialize({\n            methodId,\n            [methodId]: {\n                ...heightOption,\n                container: containerId,\n                onError,\n                onClick: () => onClick(methodId),\n            },\n        });\n    }\n\n    componentWillUnmount() {\n        const { deinitialize, methodId } = this.props;\n\n        deinitialize({ methodId });\n    }\n\n    render() {\n        const { containerId } = this.props;\n\n        return <div id={containerId} />;\n    }\n}\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst ApplePayButton: FunctionComponent<CheckoutButtonProps> = ({\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                applepay: {\n                    container: rest.containerId,\n                    shippingLabel: localeContext?.language.translate('cart.shipping_text'),\n                    subtotalLabel: localeContext?.language.translate('cart.subtotal_text'),\n                    onError,\n                    onClick: () => onClick(rest.methodId),\n                    onPaymentAuthorize: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} {...rest} />;\n};\n\nexport default ApplePayButton;\n","import { CustomerInitializeOptions, CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\nimport React, { FunctionComponent } from \"react\";\n\nimport CheckoutButton from \"./CheckoutButton\";\nimport { ApplePayButton } from \"./customWalletButton\";\n\ninterface CheckoutButtonV1ResolverProps {\n    methodId: string;\n    deinitialize(options: CustomerRequestOptions): void;\n    isShowingWalletButtonsOnTop?: boolean;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodName: string): void;\n}\n\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\n    isShowingWalletButtonsOnTop= false,\n    onError,\n    methodId,\n    ...rest\n}) => {\n    switch (methodId) {\n        case 'applepay':\n            return (\n                <ApplePayButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n    }\n\n    return <CheckoutButton\n            containerId={`${methodId}CheckoutButton`}\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n            key={methodId}\n            methodId={methodId}\n            onError={onError}\n            {...rest}\n        />;\n};\n\nexport default CheckoutButtonV1Resolver;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps , useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\nimport { WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\ninterface CheckoutButtonContainerProps {\n    isPaymentStepActive: boolean;\n    checkEmbeddedSupport(methodIds: string[]): void;\n    onUnhandledError(error: Error): void;\n    onWalletButtonClick(methodId: string): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n    availableMethodIds: string[];\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n    isLoading: boolean;\n}\n\nconst paypalCommerceIds = [\n    'paypalcommerce',\n    'paypalcommercecredit',\n    'paypalcommercevenmo',\n];\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\n    {\n        availableMethodIds,\n        checkoutService,\n        checkoutState,\n        checkEmbeddedSupport,\n        isLoading,\n        isPaymentStepActive,\n        onUnhandledError,\n        onWalletButtonClick,\n    }) => {\n    const { language } = useLocale();\n    const { newFontStyle } = useStyleContext();\n\n    try {\n        checkEmbeddedSupport(availableMethodIds);\n    } catch (error) {\n        return null;\n    }\n\n    const renderButtons = () => availableMethodIds.map((methodId) => {\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n            return null;\n        }\n\n        const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\n\n        if (!ResolvedCheckoutButton) {\n            return <CheckoutButtonV1Resolver\n                deinitialize={checkoutService.deinitializeCustomer}\n                initialize={checkoutService.initializeCustomer}\n                isShowingWalletButtonsOnTop={true}\n                key={methodId}\n                methodId={methodId}\n                onClick={onWalletButtonClick}\n                onError={onUnhandledError}\n            />\n        }\n\n        return <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onUnhandledError}\n                    onWalletButtonClick={onWalletButtonClick}\n                />;\n    });\n\n    return (\n        <div className='checkout-button-container'\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\n        >\n            <p className={classNames({\n                'sub-header': newFontStyle,\n            })}>\n                <TranslatedString id=\"remote.start_with_text\" />\n            </p>\n            <div className='checkout-buttons-auto-layout'>\n                <WalletButtonsContainerSkeleton buttonsCount={availableMethodIds.length} isLoading={isLoading}>\n                    <div className=\"checkoutRemote\">\n                        {renderButtons()}\n                    </div>\n                </WalletButtonsContainerSkeleton>\n            </div>\n            <div className='checkout-separator'>\n                <span className={classNames({'sub-header': newFontStyle})}>\n                    <TranslatedString id='remote.or_text' />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n    checkoutState,\n    checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n    const {\n        data: {\n            getConfig,\n            getCustomer,\n            isPaymentDataRequired,\n        },\n        statuses: {\n            isInitializedCustomer,\n        },\n        errors: {\n            getInitializeCustomerError,\n        }\n     } = checkoutState;\n    const config = getConfig();\n    const checkoutSettings = config?.checkoutSettings;\n    const providers = config?.checkoutSettings.remoteCheckoutProviders ?? [];\n\n    const availableMethodIds = getSupportedMethodIds(providers, checkoutSettings);\n    const customer = getCustomer();\n\n    if (!isPaymentDataRequired()) {\n        return null;\n    }\n\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n        return null;\n    }\n\n    const isLoading = availableMethodIds.filter(\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\n    ).length !== availableMethodIds.length;\n\n    return {\n        checkoutService,\n        checkoutState,\n        availableMethodIds,\n        isLoading,\n    }\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({hasBoltAccount});\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { Checkout, Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './getSupportedMethods';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.includes(methodId);\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => !SUPPORTED_METHODS.includes(payment.providerId),\n    );\n}\n","import { CheckoutSelectors, CustomerRequestOptions, CustomError } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps, useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\nimport { isErrorWithType } from '../common/error';\nimport { isExperimentEnabled } from '../common/utility';\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\n\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\n\nexport interface CustomerInfoProps {\n    onSignOut?(event: CustomerSignOutEvent): void;\n    onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n    isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n    checkoutLink: string;\n    email: string;\n    methodId: string;\n    isRedirectExperimentEnabled: boolean;\n    isSignedIn: boolean;\n    isSigningOut: boolean;\n    logoutLink: string;\n    shouldRedirectToStorefrontForAuth: boolean;\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n    checkoutLink,\n    email,\n    methodId,\n    isSignedIn,\n    isSigningOut,\n    isRedirectExperimentEnabled,\n    logoutLink,\n    shouldRedirectToStorefrontForAuth,\n    onSignOut = noop,\n    onSignOutError = noop,\n    signOut,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    const handleSignOut: () => Promise<void> = async () => {\n        try {\n            if (isRedirectExperimentEnabled && shouldRedirectToStorefrontForAuth) {\n                window.location.assign(`${logoutLink}?redirectTo=${checkoutLink}`);\n\n                return;\n            }\n\n            if (isSupportedSignoutMethod(methodId)) {\n                await signOut({ methodId });\n                onSignOut({ isCartEmpty: false });\n                window.location.reload();\n            } else {\n                await signOut();\n                onSignOut({ isCartEmpty: false });\n            }\n        } catch (error) {\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\n                onSignOut({ isCartEmpty: true });\n            } else {\n                onSignOutError(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\n            <div\n                className={classNames('customerView-body',\n                    { 'body-regular': newFontStyle },\n                )}\n                data-test=\"customer-info\"\n            >\n                {email}\n            </div>\n\n            <div className=\"customerView-actions\">\n                {isSignedIn && (\n                    <Button\n                        className={newFontStyle ? 'body-regular' : ''}\n                        isLoading={isSigningOut}\n                        onClick={handleSignOut}\n                        size={ButtonSize.Tiny}\n                        testId=\"sign-out-link\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"customer.sign_out_action\" />\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer, getConfig },\n        statuses: { isSigningOut },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const config = getConfig();\n\n    if (!billingAddress || !checkout || !customer || !config) {\n        return null;\n    }\n\n    const { checkoutSettings, links: { checkoutLink, logoutLink } } = config;\n\n    const isRedirectExperimentEnabled = isExperimentEnabled(checkoutSettings, 'CHECKOUT-9138.redirect_to_storefront_for_auth');\n\n    const methodId =\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n    return {\n        email: billingAddress.email || customer.email,\n        methodId,\n        isRedirectExperimentEnabled,\n        isSignedIn: canSignOut(customer, checkout, methodId),\n        isSigningOut: isSigningOut(),\n        logoutLink,\n        checkoutLink,\n        shouldRedirectToStorefrontForAuth: checkoutSettings.shouldRedirectToStorefrontForAuth,\n        signOut: checkoutService.signOutCustomer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n}\n\nexport default AmazonPayV2Button;\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div') as unknown as HTMLElement;\n    const amazonButton = container?.shadowRoot?.querySelector('.amazonpay-button-view1') as unknown as HTMLElement;\n\n    if (container && amazonButton) {\n        amazonButton.style.height = '36px';\n\n        return;\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n}\n","import {\n    CheckoutSelectors,\n    CheckoutService,\n    CheckoutSettings,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\nimport { isExperimentEnabled } from '../common/utility';\n\nimport CheckoutButton from './CheckoutButton';\nimport { AmazonPayV2Button, ApplePayButton } from './customWalletButton';\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\nexport interface CheckoutButtonListProps {\n    checkoutSettings: CheckoutSettings;\n    hideText?: boolean;\n    isInitializing?: boolean;\n    isShowingWalletButtonsOnTop?: boolean;\n    methodIds?: string[];\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onClick?(methodId: string): void;\n    onError?(error: Error): void;\n}\n\ninterface WithCheckoutCheckoutButtonListProps {\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n}\n\nconst CheckoutButtonList: FunctionComponent<WithCheckoutCheckoutButtonListProps & CheckoutButtonListProps> = ({\n    checkoutService,\n    checkoutSettings,\n    checkoutState,\n    hideText = false,\n    isInitializing = false,\n    isShowingWalletButtonsOnTop = false,\n    methodIds = [],\n    checkEmbeddedSupport,\n    deinitialize,\n    initialize,\n    onClick = noop,\n    onError,\n}) => {\n    const { language } = useLocale();\n\n    const shouldUseResolverButtonComponentsApproach = isExperimentEnabled(checkoutSettings, 'PAYPAL-5502.update_wallet_buttons_implementation_in_customer_step');\n\n    const supportedMethodIds = getSupportedMethodIds(methodIds, checkoutSettings);\n\n    if (supportedMethodIds.length === 0) {\n        return null;\n    }\n\n    if (checkEmbeddedSupport) {\n        try {\n            checkEmbeddedSupport(supportedMethodIds);\n        } catch (error) {\n            if (error instanceof Error && onError) {\n                onError(error);\n            } else {\n                throw error;\n            }\n\n            return null;\n        }\n    }\n\n    const renderButtons = () => {\n        if (shouldUseResolverButtonComponentsApproach) {\n            return supportedMethodIds.map((methodId) => {\n                const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\n\n                if (!ResolvedCheckoutButton) {\n                    return <CheckoutButtonV1Resolver\n                        deinitialize={deinitialize}\n                        initialize={initialize}\n                        isShowingWalletButtonsOnTop={false}\n                        key={methodId}\n                        methodId={methodId}\n                        onClick={onClick}\n                        onError={onClick}\n                    />\n                }\n\n                return <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onClick}\n                    onWalletButtonClick={onClick}\n                />;\n            });\n        }\n\n        return methodIds.map((methodId) => {\n            if (methodId === 'applepay') {\n                return (\n                    <ApplePayButton\n                        containerId={`${methodId}CheckoutButton`}\n                        deinitialize={deinitialize}\n                        initialize={initialize}\n                        isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                        key={methodId}\n                        methodId={methodId}\n                        onClick={onClick}\n                        onError={onError}\n                    />\n                );\n            }\n\n            if (methodId === 'amazonpay') {\n                return (\n                    <AmazonPayV2Button\n                        containerId={`${methodId}CheckoutButton`}\n                        deinitialize={deinitialize}\n                        initialize={initialize}\n                        isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                        key={methodId}\n                        methodId={methodId}\n                        onClick={onClick}\n                        onError={onError}\n                    />\n                );\n            }\n\n            return (\n                <CheckoutButton\n                    containerId={`${methodId}CheckoutButton`}\n                    deinitialize={deinitialize}\n                    initialize={initialize}\n                    isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                    key={methodId}\n                    methodId={methodId}\n                    onClick={onClick}\n                    onError={onError}\n                />\n            );\n        });\n    };\n\n    return (\n        <>\n            {!isInitializing && !hideText && (\n                <p>\n                    <TranslatedString id=\"remote.continue_with_text\" />\n                </p>\n            )}\n\n            <div className=\"checkoutRemote\">\n                {renderButtons()}\n            </div>\n        </>\n    );\n};\n\nfunction mapToCheckoutButtonListProps({\n  checkoutState,\n  checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonListProps | null {\n    return {\n        checkoutService,\n        checkoutState,\n    };\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonListProps)(CheckoutButtonList));\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\n// we need to keep this regex for login validation as accounts might have been created using this regex\nexport const EMAIL_REGEXP =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport { EMAIL_REGEXP } from './validationPatterns';\n\nexport interface EmailValidationSchemaOptions {\n    language: LanguageService;\n}\n\nexport default function getEmailValidationSchema({\n    language,\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\n    return object({\n        email: string()\n            .max(256)\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\n            .required(language.translate('customer.email_required_error')),\n    });\n}\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport {\n    CustomFormFieldValues,\n    getCustomFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport { PasswordRequirements } from './getPasswordRequirements';\n\nexport type CreateAccountFormValues = {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    acceptsMarketingEmails?: string[];\n    token?: string;\n} & CustomFormFieldValues;\n\nexport interface CreateCustomerValidationSchema {\n    formFields: FormField[];\n    language: LanguageService;\n    passwordRequirements: PasswordRequirements;\n}\n\n/* istanbul ignore next */ // Currently no limitation on new customer's name\nfunction getTranslateCreateCustomerError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    return (type, { label, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            return language.translate('customer.required_error', { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate('customer.max_error', { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate('customer.min_error', { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate('customer.invalid_characters_error', { label });\n        }\n    };\n}\n\nexport default memoize(function getCreateCustomerValidationSchema({\n    formFields,\n    language,\n    passwordRequirements: { description, numeric, alpha, minLength },\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\n    return object({\n        firstName: string().required(language.translate('address.first_name_required_error')),\n        lastName: string().required(language.translate('address.last_name_required_error')),\n        password: string()\n            .required(language.translate('customer.password_required_error') || description)\n            .matches(\n                numeric,\n                language.translate('customer.password_number_required_error') || description,\n            )\n            .matches(\n                alpha,\n                language.translate('customer.password_letter_required_error') || description,\n            )\n            .min(\n                minLength,\n                language.translate('customer.password_under_minimum_length_error') || description,\n            )\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\n    })\n        .concat(getEmailValidationSchema({ language }))\n        .concat(\n            getCustomFormFieldsValidationSchema({\n                formFields,\n                translate: getTranslateCreateCustomerError(language),\n            }),\n        );\n});\n","/* istanbul ignore file */\n\n// TODO: CHECKOUT-9010 Cover 'Customer registration failure due to using an existing email' in functional tests repo\nimport { FormField } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useMemo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { isRequestError } from '../common/error';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { DynamicFormField, Fieldset, Form } from '../ui/form';\n\nimport getCreateCustomerValidationSchema, {\n    CreateAccountFormValues,\n} from './getCreateCustomerValidationSchema';\nimport getPasswordRequirements from './getPasswordRequirements';\n\nimport './CreateAccountForm.scss';\n\nexport interface CreateAccountFormProps {\n    formFields: FormField[];\n    createAccountError?: Error;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    isCreatingAccount?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onSubmit(values: CreateAccountFormValues): void;\n}\n\nfunction getAcceptsMarketingEmailsDefault(defaultShouldSubscribe: boolean, requiresMarketingConsent: boolean): string[] {\n    if (defaultShouldSubscribe) {\n        return ['1'];\n    }\n\n    return requiresMarketingConsent ? [] : ['0'];\n}\n\nfunction transformFormFieldsData(formFields: FormField[], defaultShouldSubscribe: boolean): FormField[] {\n    return formFields.map(field => {\n        if (field.name === 'acceptsMarketingEmails') {\n            const { options } = field;\n            const items = options?.items || [];\n\n            const updatedItems = items.map(item => {\n                return {\n                    value: defaultShouldSubscribe ? '1' : item.value,\n                    label: item.label,\n                }\n            });\n\n            return {\n                ...field,\n                options: {\n                    items: updatedItems,\n                }\n            }\n        }\n\n        return field;\n    });\n}\n\nconst CreateAccountForm: FunctionComponent<\n    CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\n> = ({ fixNewsletterCheckboxExperimentEnabled, formFields, createAccountError, isCreatingAccount, isExecutingPaymentMethodCheckout, onCancel, isFloatingLabelEnabled, defaultShouldSubscribe }) => {\n    const { newFontStyle } = useStyleContext();\n    const createAccountErrorMessage = useMemo(() => {\n        if (!createAccountError) {\n            return;\n        }\n\n        if (isRequestError(createAccountError) && createAccountError.status === 409) {\n            const splitMessage = createAccountError.message.split(':');\n\n            if (splitMessage.length > 1) {\n                return (\n                    <TranslatedString\n                        data={{ email: splitMessage[1].trim() }}\n                        id=\"customer.email_in_use_text\"\n                    />\n                );\n            }\n\n            return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\n        }\n\n        return createAccountError.message;\n    }, [createAccountError]);\n\n    const fields = fixNewsletterCheckboxExperimentEnabled ?\n        transformFormFieldsData(formFields, defaultShouldSubscribe): formFields;\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset>\n                {createAccountErrorMessage && (\n                    <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\n                )}\n                <div className=\"create-account-form\">\n                    {fields.map((field) => (\n                        <DynamicFormField\n                            autocomplete={field.name}\n                            extraClass={`dynamic-form-field--${field.name}`}\n                            field={field}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            key={field.id}\n                            newFontStyle={newFontStyle}\n                            parentFieldName={field.custom ? 'customFields' : undefined}\n                        />\n                    ))}\n                </div>\n            </Fieldset>\n\n            <div className=\"form-actions\">\n                <Button\n                    className={newFontStyle ? 'body-bold' : ''}\n                    disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    id=\"checkout-customer-create\"\n                    isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    testId=\"customer-continue-create\"\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString id=\"customer.create_account_action\" />\n                </Button>\n\n                <a\n                    className={classNames('button optimizedCheckout-buttonSecondary',\n                        { 'body-bold': newFontStyle })}\n                    data-test=\"customer-cancel-button\"\n                    href=\"#\"\n                    id=\"checkout-customer-cancel\"\n                    onClick={preventDefault(onCancel)}\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </a>\n            </div>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\n        handleSubmit: (values, { props: { onSubmit = noop } }) => {\n            onSubmit(values);\n        },\n        mapPropsToValues: ({ defaultShouldSubscribe, requiresMarketingConsent }) => ({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            customFields: {},\n            acceptsMarketingEmails: getAcceptsMarketingEmailsDefault(defaultShouldSubscribe, requiresMarketingConsent),\n        }),\n        validationSchema: ({\n            language,\n            formFields,\n        }: CreateAccountFormProps & WithLanguageProps) => {\n            const passwordRequirements = formFields.find(\n                ({ requirements }) => requirements,\n            )?.requirements;\n\n            if (!passwordRequirements) {\n                throw new Error('Password requirements missing');\n            }\n\n            const schema = getCreateCustomerValidationSchema({\n                language,\n                formFields,\n                passwordRequirements: getPasswordRequirements(passwordRequirements),\n            });\n\n            return schema;\n        },\n    })(CreateAccountForm),\n);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface EmailFieldProps {\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string): void;\n}\n\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\n    const { newFontStyle } = useStyleContext();\n\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <TextInput\n                {...props.field}\n                autoComplete={props.field.name}\n                id={props.field.name}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                newFontStyle={newFontStyle}\n                type=\"email\"\n            />\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\n\n    return (\n        <FormField\n            input={renderInput}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            labelContent={labelContent}\n            name=\"email\"\n            newFontStyle={newFontStyle}\n            onChange={onChange}\n        />\n    );\n};\n\nexport default memo(EmailField);\n","import { SignInEmail } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useMemo } from 'react';\n\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { LoadingSpinner } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Form } from '../ui/form';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\n\nexport interface EmailLoginFormProps {\n    email?: string;\n    isOpen: boolean;\n    isSendingEmail?: boolean;\n    emailHasBeenRequested?: boolean;\n    sentEmail?: SignInEmail;\n    sentEmailError?: any;\n    isFloatingLabelEnabled?: boolean;\n    onRequestClose?(): void;\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\n}\n\nexport interface EmailLoginFormValues {\n    email: string;\n}\n\nconst EmailLoginForm: FunctionComponent<\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\n> = ({\n    email,\n    isOpen,\n    isSendingEmail = false,\n    emailHasBeenRequested,\n    onRequestClose = noop,\n    sentEmailError,\n    sentEmail,\n    submitForm,\n    isFloatingLabelEnabled,\n    values: { email: formEmail },\n}) => {\n    const modalHeaderStringId = useMemo(() => {\n        if (emailHasBeenRequested) {\n            if (sentEmailError) {\n                return 'common.error_heading';\n            }\n\n            return 'login_email.sent_header';\n        }\n\n        if (email) {\n            return 'login_email.header_with_email';\n        }\n\n        return 'login_email.header';\n    }, [emailHasBeenRequested, sentEmailError, email]);\n\n    const okButton = useMemo(\n        () => (\n            <div className=\"modal-footer\">\n                <Button onClick={onRequestClose}>\n                    <TranslatedString id=\"common.ok_action\" />\n                </Button>\n            </div>\n        ),\n        [onRequestClose],\n    );\n\n    const footer = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return okButton;\n        }\n\n        if (emailHasBeenRequested && !sentEmailError) {\n            if (isSendingEmail) {\n                return <LoadingSpinner isLoading />;\n            }\n\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\n                return okButton;\n            }\n\n            return (\n                <p>\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\n                </p>\n            );\n        }\n\n        return (\n            <div className=\"modal-footer\">\n                <Button\n                    className=\"optimizedCheckout-buttonSecondary\"\n                    onClick={onRequestClose}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </Button>\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\n                    <TranslatedString id=\"login_email.send\" />\n                </Button>\n            </div>\n        );\n    }, [\n        sentEmailError,\n        emailHasBeenRequested,\n        okButton,\n        submitForm,\n        isSendingEmail,\n        onRequestClose,\n        sentEmail,\n    ]);\n\n    const error = useMemo(() => {\n        if (!sentEmailError) {\n            return null;\n        }\n\n        const { status } = sentEmailError;\n\n        return (\n            <Alert type={AlertType.Error}>\n                {status === 429 ? (\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\n                ) : (\n                    <TranslatedString\n                        id={\n                            status === 404\n                                ? 'login_email.error_not_found'\n                                : 'login_email.error_server'\n                        }\n                    />\n                )}\n            </Alert>\n        );\n    }, [sentEmailError]);\n\n    const form = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return null;\n        }\n\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\n            const { expiry, sent_email } = sentEmail;\n\n            return (\n                <p>\n                    <TranslatedHtml\n                        data={{\n                            minutes: Math.round(expiry / 60),\n                        }}\n                        id={\n                            sent_email === 'sign_in'\n                                ? 'login_email.sent_text'\n                                : 'customer.reset_password_before_login_error'\n                        }\n                    />\n                </p>\n            );\n        }\n\n        if (emailHasBeenRequested && !sentEmail) {\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\n        }\n\n        return (\n            <>\n                <p>\n                    <TranslatedString id=\"login_email.text\" />\n                </p>\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n            </>\n        );\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\n\n    return (\n        <Modal\n            additionalBodyClassName=\"modal--withText\"\n            additionalModalClassName=\"modal--medium\"\n            header={\n                <ModalHeader>\n                    <TranslatedString id={modalHeaderStringId} />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={true}\n        >\n            <Form>\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\n                {error}\n                {form}\n                {footer}\n            </Form>\n        </Modal>\n    );\n};\n\nexport default withLanguage(\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n        }),\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\n            onSendLoginEmail(values);\n        },\n        validationSchema: ({ language }: WithLanguageProps) =>\n            getEmailValidationSchema({ language }),\n    })(memo(EmailLoginForm)),\n);\n","import { FastlaneHostWindow } from './types';\n\nexport default function isFastlaneHostWindow(window: Window): window is FastlaneHostWindow {\n    /* eslint-disable no-prototype-builtins */\n    return window.hasOwnProperty('paypalFastlane') || window.hasOwnProperty('braintreeFastlane');\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isFastlaneHostWindow from './is-fastlane-window';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\nimport { FastlanePrivacySettings } from './types';\n\nimport './PayPalFastlaneWatermark.scss';\n\nconst PayPalFastlaneWatermark: FunctionComponent = () => {\n    const { checkoutState } = useCheckout();\n    const { getPaymentMethod, getConfig } = checkoutState.data;\n    const providerWithCustomCheckout =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const paymentMethod =\n        !!providerWithCustomCheckout &&\n        isPayPalFastlaneMethod(providerWithCustomCheckout) &&\n        getPaymentMethod(providerWithCustomCheckout);\n\n    const shouldRenderFastlaneWatermark =\n        isFastlaneHostWindow(window) &&\n        !!paymentMethod &&\n        !!paymentMethod.initializationData?.isFastlanePrivacySettingEnabled;\n\n    useEffect(() => {\n        if (shouldRenderFastlaneWatermark && isFastlaneHostWindow(window)) {\n            const fastlane = isBraintreeFastlaneMethod(providerWithCustomCheckout)\n                ? window.braintreeFastlane\n                : window.paypalFastlane;\n\n            void fastlane\n                .FastlaneWatermarkComponent({\n                    includeAdditionalInfo: true,\n                })\n                .then((result: FastlanePrivacySettings) => {\n                    result.render('#paypalFastlaneWatermark');\n                });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (shouldRenderFastlaneWatermark) {\n        return (\n            <div className=\"paypalFastlaneWatermark-container\">\n                <div data-test=\"paypalFastlaneWatermark\" id=\"paypalFastlaneWatermark\" />\n            </div>\n        );\n    }\n\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <></>;\n};\n\nexport default PayPalFastlaneWatermark;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { CheckboxFormField, Fieldset } from '../ui/form';\n\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string, newFontStyle?: boolean }> = ({ url, newFontStyle }) => (\n    <CheckboxFormField\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\n        name=\"privacyPolicy\"\n        newFontStyle={newFontStyle}\n        testId=\"privacy-policy-checkbox\"\n    />\n);\n\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string, newFontStyle?: boolean }> = ({ url, newFontStyle }) => (\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\n        <PrivacyPolicyCheckboxFieldLink newFontStyle={newFontStyle} url={url} />\n    </Fieldset>\n);\n\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string, newFontStyle?: boolean }> = ({ url, newFontStyle }) => (\n    <p className={newFontStyle ? 'body-regular' : ''}>\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\n    </p>\n);\n\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\n    url,\n    isExpressPrivacyPolicy,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    if (isExpressPrivacyPolicy) {\n        return <PrivacyPolicyAutoConsent newFontStyle={newFontStyle} url={url} />;\n    }\n\n    return <PrivacyPolicyFieldset newFontStyle={newFontStyle} url={url} />;\n};\n\nexport default memo(PrivacyPolicyField);\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { boolean, BooleanSchema, object, ObjectSchema } from 'yup';\n\nexport interface PrivacyPolicyValidatonSchemaProps {\n    isRequired: boolean;\n    language: LanguageService;\n}\n\nexport default function getPrivacyPolicyValidationSchema({\n    isRequired,\n    language,\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\n    const schemaFields: {\n        privacyPolicy?: BooleanSchema;\n    } = {};\n\n    if (isRequired) {\n        schemaFields.privacyPolicy = boolean().oneOf(\n            [true],\n            language.translate('privacy_policy.required_error'),\n        );\n    }\n\n    return object(schemaFields);\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { Input, Label } from '../ui/form';\n\nexport type SubscribeFieldProps = FieldProps<boolean> & {\n    requiresMarketingConsent: boolean;\n};\n\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\n    field,\n    requiresMarketingConsent,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    return (\n        <>\n            <Input\n                {...field}\n                checked={field.value}\n                className=\"form-checkbox\"\n                id={field.name}\n                testId=\"should-subscribe-checkbox\"\n                type=\"checkbox\"\n                value={String(field.value)}\n            />\n\n            <Label\n                additionalClassName={newFontStyle ? 'body-regular' : ''}\n                htmlFor={field.name}\n            >\n                <TranslatedHtml\n                    id={\n                        requiresMarketingConsent\n                            ? 'customer.guest_marketing_consent'\n                            : 'customer.guest_subscribe_to_newsletter_text'\n                    }\n                />\n            </Label>\n        </>\n    );\n}\n\nexport default memo(SubscribeField);\n","export class SubscribeSessionStorage {\n    static key = 'shouldSubscribe';\n\n    static setSubscribeStatus(shouldSubscribe: boolean) {\n        sessionStorage.setItem(this.key, `${shouldSubscribe}`)\n    }\n\n    static getSubscribeStatus(): boolean {\n        const value = sessionStorage.getItem(this.key);\n\n        return value === 'true';\n    }\n\n    static removeSubscribeStatus() {\n        sessionStorage.removeItem(this.key);\n    }\n}\n","import classNames from 'classnames';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect } from 'react';\nimport { object, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useCheckout, useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\nimport { PayPalFastlaneWatermark } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { isExperimentEnabled } from '../common/utility';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport EmailField from './EmailField';\nimport SubscribeField from './SubscribeField';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nfunction getShouldSubscribeValue(requiresMarketingConsent: boolean, defaultShouldSubscribe: boolean) {\n    if (SubscribeSessionStorage.getSubscribeStatus()) {\n        return true;\n    }\n\n    return requiresMarketingConsent ? false : defaultShouldSubscribe\n}\n\nexport interface GuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    continueAsGuestButtonLabelId: string;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    isLoading: boolean;\n    privacyPolicyUrl?: string;\n    isExpressPrivacyPolicy: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldShowEmailWatermark: boolean;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    onShowLogin(): void;\n}\n\nexport interface GuestFormValues {\n    email: string;\n    shouldSubscribe: boolean;\n}\n\nconst GuestForm: FunctionComponent<\n    GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\n> = ({\n    canSubscribe,\n    checkoutButtons,\n    continueAsGuestButtonLabelId,\n    defaultShouldSubscribe,\n    isLoading,\n    onChangeEmail,\n    onShowLogin,\n    privacyPolicyUrl,\n    requiresMarketingConsent,\n    isExpressPrivacyPolicy,\n    isFloatingLabelEnabled,\n    shouldShowEmailWatermark,\n    setFieldValue,\n}) => {\n    const {\n        checkoutState: {\n            data: { getConfig }\n        }\n    } = useCheckout();\n    const { newFontStyle } = useStyleContext();\n\n    const config = getConfig();\n\n    const renderField = useCallback(\n        (fieldProps: FieldProps<boolean>) => (\n            <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\n        ),\n        [requiresMarketingConsent],\n    );\n\n    useEffect(() => {\n        void setFieldValue(\n            'shouldSubscribe',\n            getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            );\n    }, [requiresMarketingConsent, defaultShouldSubscribe]);\n\n    if (!config) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            shouldRedirectToStorefrontForAuth,\n        },\n        links: {\n            checkoutLink,\n            loginLink,\n        }\n    } = config;\n\n    const isRedirectExperimentEnabled = isExperimentEnabled(config.checkoutSettings, 'CHECKOUT-9138.redirect_to_storefront_for_auth');\n\n    const handleLogin: () => void = () => {\n        if (shouldRedirectToStorefrontForAuth && isRedirectExperimentEnabled) {\n            window.location.assign(`${loginLink}?redirectTo=${checkoutLink}`);\n\n            return;\n        }\n\n        return onShowLogin();\n    }\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-guest\"\n            testId=\"checkout-customer-guest\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.guest_customer_text\" />\n                    </Legend>\n                }\n            >\n                <div className=\"customerEmail-container\">\n                    <div className=\"customerEmail-body\">\n                        <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail}/>\n\n                        {shouldShowEmailWatermark && <PayPalFastlaneWatermark />}\n\n                        {(canSubscribe || requiresMarketingConsent) && (\n                            <BasicFormField name=\"shouldSubscribe\" render={renderField} />\n                        )}\n                    </div>\n\n                    <div\n                        className={classNames('form-actions customerEmail-action', {\n                            'customerEmail-floating--enabled': isFloatingLabelEnabled,\n                        })}\n                    >\n                        <Button\n                            className={classNames('customerEmail-button', {\n                                'body-bold': newFontStyle,\n                            })}\n                            id=\"checkout-customer-continue\"\n                            isLoading={isLoading}\n                            testId=\"customer-continue-as-guest-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </Button>\n                    </div>\n                </div>\n\n                {privacyPolicyUrl && (\n                    <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                )}\n\n                {!isLoading && (\n                    <p className={classNames('customer-login-link',\n                        { 'body-regular': newFontStyle })}\n                    >\n                        <TranslatedString id=\"customer.login_text\" />{' '}\n                        <a\n                            data-test=\"customer-continue-button\"\n                            id=\"checkout-customer-login\"\n                            onClick={handleLogin}\n                            role=\"button\"\n                            tabIndex={0}\n                        >\n                            <TranslatedString id=\"customer.login_action\" />\n                        </a>\n                    </p>\n                )}\n\n                {checkoutButtons}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\n        mapPropsToValues: ({\n            email = '',\n            defaultShouldSubscribe = false,\n            requiresMarketingConsent,\n        }) => ({\n            email,\n            shouldSubscribe: getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            privacyPolicy: false,\n        }),\n        handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n            onContinueAsGuest(values);\n        },\n        validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: GuestFormProps & WithLanguageProps) => {\n            const email = string()\n                .email(language.translate('customer.email_invalid_error'))\n                .max(256)\n                .required(language.translate('customer.email_required_error'));\n\n            const baseSchema = object({ email });\n\n            if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                return baseSchema.concat(\n                    getPrivacyPolicyValidationSchema({\n                        isRequired: !!privacyPolicyUrl,\n                        language,\n                    }),\n                );\n            }\n\n            return baseSchema;\n        },\n    })(memo(GuestForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEye: FunctionComponent = () => (\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEye);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEyeSlash: FunctionComponent = () => (\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEyeSlash);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { FormField, TextInput } from '../ui/form';\nimport Label from '../ui/form/Label';\nimport { IconEye, IconEyeSlash } from '../ui/icon';\nimport { Toggle } from '../ui/toggle';\n\ninterface WithFloatingLabel {\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\n    const { newFontStyle } = useStyleContext();\n\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <Toggle openByDefault={false}>\n                {({ isOpen, toggle }) => (\n                    <div className=\"form-field-password\">\n                        <TextInput\n                            {...props.field}\n                            additionalClassName=\"form-input--withIcon\"\n                            id={props.field.name}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            newFontStyle={newFontStyle}\n                            type={isOpen ? 'text' : 'password'}\n                        />\n                        {isFloatingLabelEnabled && (\n                            <Label\n                                additionalClassName={newFontStyle ? 'floating-form-field-label' : ''}\n                                htmlFor={props.field.name}\n                                id={`${props.field.name}-label`}\n                                isFloatingLabelEnabled={true}\n                            >\n                                <TranslatedString id=\"customer.password_label\" />\n                            </Label>\n                        )}\n                        <a\n                            className=\"form-toggle-password form-input-icon\"\n                            href=\"#\"\n                            onClick={toggle}\n                        >\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\n                        </a>\n                    </div>\n                )}\n            </Toggle>\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\n\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\n};\n\nexport default memo(PasswordField);\n","import classNames from 'classnames';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport CustomerViewType from './CustomerViewType';\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport mapErrorMessage from './mapErrorMessage';\nimport PasswordField from './PasswordField';\n\nexport interface LoginFormProps {\n    canCancel?: boolean;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    forgotPasswordUrl: string;\n    isSignInEmailEnabled?: boolean;\n    isSendingSignInEmail?: boolean;\n    isSigningIn?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    signInError?: Error;\n    signInEmailError?: Error;\n    viewType?: Omit<CustomerViewType, 'guest'>;\n    passwordlessLogin?: boolean;\n    shouldShowCreateAccountLink?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onCreateAccount?(): void;\n    onChangeEmail?(email: string): void;\n    onSignIn(data: LoginFormValues): void;\n    onSendLoginEmail?(): void;\n    onContinueAsGuest?(): void;\n}\n\nexport interface LoginFormValues {\n    email: string;\n    password: string;\n}\n\nconst LoginForm: FunctionComponent<\n    LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\n> = ({\n    canCancel,\n    continueAsGuestButtonLabelId,\n    forgotPasswordUrl,\n    email,\n    isSignInEmailEnabled,\n    isSigningIn,\n    isExecutingPaymentMethodCheckout,\n    language,\n    onCancel = noop,\n    onChangeEmail,\n    onContinueAsGuest,\n    onCreateAccount = noop,\n    onSendLoginEmail = noop,\n    signInError,\n    shouldShowCreateAccountLink,\n    isFloatingLabelEnabled,\n    viewType = CustomerViewType.Login,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    const changeEmailLink = useCallback(() => {\n        if (!email) {\n            return null;\n        }\n\n        return (\n            <p className=\"optimizedCheckout-contentSecondary\">\n                <TranslatedLink\n                    data={{ email }}\n                    id=\"customer.guest_could_login_change_email\"\n                    onClick={onCancel}\n                    testId=\"change-email\"\n                />\n            </p>\n        );\n    }, [email, onCancel]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.returning_customer_text\" />\n                    </Legend>\n                }\n            >\n                {signInError && (\n                    <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\n                        {mapErrorMessage(signInError, (key) => language.translate(key))}\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.SuggestedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.CancellableEnforcedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.EnforcedLogin && (\n                    <Alert type={AlertType.Error}>\n                        <TranslatedLink\n                            id=\"customer.guest_temporary_disabled\"\n                            onClick={onCreateAccount}\n                        />\n                    </Alert>\n                )}\n\n                {(viewType === CustomerViewType.Login ||\n                    viewType === CustomerViewType.EnforcedLogin) && (\n                    <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n                )}\n\n                <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n\n                <p className={classNames('form-legend-container', { 'body-cta': newFontStyle })}>\n                    <span>\n                        { isSignInEmailEnabled &&\n                            <TranslatedLink\n                                id=\"login_email.link\"\n                                onClick={ onSendLoginEmail }\n                                testId=\"customer-signin-link\"\n                            />\n                        }\n                        { !isSignInEmailEnabled &&\n                            <a\n                                data-test=\"forgot-password-link\"\n                                href={ forgotPasswordUrl }\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <TranslatedString id=\"customer.forgot_password_action\" />\n                            </a>\n                        }\n                    </span>\n                    { viewType === CustomerViewType.Login && shouldShowCreateAccountLink &&\n                        <span>\n                            <TranslatedLink\n                                id=\"customer.create_account_to_continue_text\"\n                                onClick={onCreateAccount}\n                            />\n                        </span>\n                    }\n                </p>\n\n                <div className=\"form-actions\">\n                    <Button\n                        className={newFontStyle ? 'body-bold' : ''}\n                        disabled={isSigningIn || isExecutingPaymentMethodCheckout}\n                        id=\"checkout-customer-continue\"\n                        isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\n                        testId=\"customer-continue-button\"\n                        type=\"submit\"\n                        variant={ButtonVariant.Primary}\n                    >\n                        <TranslatedString id=\"customer.sign_in_action\" />\n                    </Button>\n\n                    {viewType === CustomerViewType.SuggestedLogin && (\n                        <a\n                            className={classNames('button optimizedCheckout-buttonSecondary',\n                                { 'body-bold': newFontStyle })}\n                            data-test=\"customer-guest-continue\"\n                            href=\"#\"\n                            id=\"checkout-guest-continue\"\n                            onClick={preventDefault(onContinueAsGuest)}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </a>\n                    )}\n\n                    {canCancel &&\n                        viewType !== CustomerViewType.EnforcedLogin &&\n                        viewType !== CustomerViewType.SuggestedLogin && (\n                            <a\n                            className={classNames('button optimizedCheckout-buttonSecondary',\n                                { 'body-bold': newFontStyle })}\n                                data-test=\"customer-cancel-button\"\n                                href=\"#\"\n                                id=\"checkout-customer-cancel\"\n                                onClick={preventDefault(onCancel)}\n                            >\n                                <TranslatedString\n                                    id={\n                                        viewType === CustomerViewType.CancellableEnforcedLogin\n                                            ? 'login_email.use_another_email'\n                                            : 'common.cancel_action'\n                                    }\n                                />\n                            </a>\n                        )}\n                </div>\n\n                {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n            password: '',\n        }),\n        handleSubmit: (values, { props: { onSignIn } }) => {\n            onSignIn(values);\n        },\n        validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\n            getEmailValidationSchema({ language }).concat(\n                object({\n                    password: string().required(\n                        language.translate('customer.password_required_error'),\n                    ),\n                }),\n            ),\n    })(memo(LoginForm)),\n);\n","export default function mapErrorMessage(\n    error: any, // TODO: Export `RequestError`\n    translate: (key: string) => string,\n): string {\n    const type = error.body && error.body.type;\n\n    switch (type) {\n        case 'throttled_login':\n            return translate('customer.sign_in_throttled_error');\n\n        case 'reset_password_before_login':\n            return translate('customer.reset_password_before_login_error');\n\n        default:\n            return translate('customer.sign_in_error');\n    }\n}\n","import { CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\n\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\n\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\n\nexport default function mapCreateAccountFromFormValues({\n    acceptsMarketingEmails,\n    customFields,\n    ...values\n}: CreateAccountFormValues): CustomerAccountRequestBody {\n    return {\n        ...values,\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\n    };\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect, useState } from 'react';\nimport { object } from 'yup';\n\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport { GuestFormValues } from './GuestForm';\nimport SubscribeField from './SubscribeField';\n\nexport interface StripeGuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    step: CheckoutStepStatus;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    isLoading: boolean;\n    isExpressPrivacyPolicy: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onShowLogin(): void;\n}\n\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\n    continueAsGuestButtonLabelId,\n    isLoading,\n    initialize,\n    isExpressPrivacyPolicy,\n    deinitialize,\n    onChangeEmail,\n    onShowLogin,\n    onContinueAsGuest,\n    canSubscribe,\n    checkoutButtons,\n    defaultShouldSubscribe,\n    requiresMarketingConsent,\n    privacyPolicyUrl,\n    step,\n    status,\n    setFieldValue,\n}) => {\n\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\n    const [emailValue, setEmailValue] = useState('');\n    const [authentication, setAuthentication] = useState(false);\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\n    const [isNewAuth, setIsNewAuth] = useState(false);\n    const handleOnClickSubmitButton = () => {\n        onContinueAsGuest({\n            email: emailValue,\n            shouldSubscribe: !!status?.shouldSubscribe,\n        });\n    };\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\n        setFieldValue('email', email);\n        onChangeEmail(email);\n        setEmailValue(email);\n        setContinueAsAGuestButton(!email);\n        setAuthentication(authenticated);\n\n        if(!authenticated){\n            setIsNewAuth(true);\n        }\n    }, [setContinueAsAGuestButton, onChangeEmail]);\n\n    useEffect(() => {\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\n            handleOnClickSubmitButton();\n        }\n    }, [emailValue, authentication, isNewAuth]);\n\n    useEffect(() => {\n        if (status?.valSuccess) {\n            handleOnClickSubmitButton();\n        }\n    }, [status?.valSuccess]);\n\n    const handleLoading = useCallback((mounted: boolean) => {\n        setIsStripeLoading(mounted);\n    }, []);\n\n    const stripeDeinitialize = () => {\n        deinitialize({\n            methodId: 'stripeupe',\n        });\n    };\n\n    const stripeInitialize = () => {\n        initialize( {\n            methodId: 'stripeupe',\n            stripeupe: {\n                container: 'stripeupeLink',\n                onEmailChange: setEmailCallback,\n                isLoading: handleLoading,\n                getStyles: getStripeStyles,\n                gatewayId: 'stripeupe',\n                methodId: 'card',\n            },\n        })};\n\n    useEffect(() => {\n        stripeInitialize();\n\n        return () => stripeDeinitialize();\n    }, []);\n\n    useEffect(() => {\n        void setFieldValue(\n            'shouldSubscribe',\n            requiresMarketingConsent ? false : defaultShouldSubscribe,\n        );\n    }, [requiresMarketingConsent, defaultShouldSubscribe]);\n\n    const getStylesFromElement = (\n        id: string,\n        properties: string[]) => {\n        const parentContainer = document.getElementById(id);\n\n        if (parentContainer) {\n            return getAppliedStyles(parentContainer, properties);\n        }\n\n            return undefined;\n\n    };\n\n    const containerId = 'stripe-card-component-field';\n\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\n\n        return formLabel && formInput && formError ? {\n            labelText: formLabel.color,\n            fieldText: formInput.color,\n            fieldPlaceholderText: formInput.color,\n            fieldErrorText: formError.color,\n            fieldBackground: formInput['background-color'],\n            fieldInnerShadow: formInput['box-shadow'],\n            fieldBorder: formInput['border-color'],\n        } : undefined;\n    }, [])\n\n    const renderCheckoutThemeStylesForStripeUPE = () => {\n        return (\n            <div\n                className=\"optimizedCheckout-form-input\"\n                id={ `${containerId}--input` }\n            >\n                <div\n                    className=\"form-field--error\"\n                >\n                    <div\n                        className=\"optimizedCheckout-form-label\"\n                        id={ `${containerId}--error` }\n                    />\n                </div>\n                <div\n                    className=\"optimizedCheckout-form-label\"\n                    id={ `${containerId}--label` }\n                />\n            </div>\n        );\n    };\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\n\n    return (\n        <>\n            <Form\n                className=\"checkout-form\"\n                id=\"checkout-customer-guest\"\n                testId=\"checkout-customer-guest\"\n            >\n                <div className=\"checkout-form\" style={ {display: isStripeLoading ? 'none' : undefined} }>\n                    <Fieldset\n                        legend={ !authentication &&\n                            <Legend hidden>\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\n                            </Legend>\n                        }\n                    >\n                        <div className=\"customerEmail-container\">\n                            <div className=\"customerEmail-body\">\n                                <div id=\"stripeupeLink\"/>\n                                <br/>\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\n                                    name=\"shouldSubscribe\"\n                                    render={ renderField }\n                                /> }\n                            </div>\n\n                            <div className=\"form-actions customerEmail-action\">\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\n                                    className=\"stripeCustomerEmail-button\"\n                                    disabled={ continueAsAGuestButton }\n                                    id=\"stripe-checkout-customer-continue\"\n                                    isLoading={ isLoading }\n                                    testId=\"stripe-customer-continue-as-guest-button\"\n                                    type=\"submit\"\n                                    variant={ ButtonVariant.Primary }\n                                >\n                                    <TranslatedString id={ buttonText }/>\n                                </Button> }\n                            </div>\n                        </div>\n\n                        {privacyPolicyUrl && (\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                        )}\n\n                        {\n                            !isLoading && <p>\n                                <TranslatedString id=\"customer.login_text\"/>\n                                { ' ' }\n                                <a\n                                    data-test=\"customer-continue-button\"\n                                    id=\"checkout-customer-login\"\n                                    onClick={ onShowLogin }\n                                    role=\"button\"\n                                    tabIndex={0}\n                                >\n                                    <TranslatedString id=\"customer.login_action\"/>\n                                </a>\n                            </p>\n                        }\n                        { !authentication && checkoutButtons }\n                    </Fieldset>\n                </div>\n                { renderCheckoutThemeStylesForStripeUPE() }\n            </Form>\n        </>\n    );\n};\n\nexport default withLanguage(\n    withFormik<StripeGuestFormProps, GuestFormValues>({\n            mapPropsToValues: ({\n                email = '',\n                defaultShouldSubscribe = false,\n                requiresMarketingConsent,\n            }) => ({\n                email,\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n                privacyPolicy: false,\n            }),\n            handleSubmit: ( values, { setStatus }) => {\n                setStatus({\n                    valSuccess: true,\n                    shouldSubscribe: values.shouldSubscribe,\n                  });\n            },\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                    return getPrivacyPolicyValidationSchema({\n                            isRequired: !!privacyPolicyUrl,\n                            language,\n                        })\n                }\n\n                return object({});\n            },\n        })(memo(StripeGuestForm))\n)\n\n","import {\n    CheckoutPaymentMethodExecutedOptions,\n    CheckoutSelectors, CheckoutSettings,\n    CustomerAccountRequestBody,\n    CustomerCredentials,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n    FormField,\n    GuestCredentials,\n    SignInEmail,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { Component, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneMethod } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { isErrorWithType } from '../common/error';\nimport { isFloatingLabelEnabled } from '../common/utility';\nimport getProviderWithCustomCheckout from '../payment/getProviderWithCustomCheckout';\nimport { PaymentMethodId } from '../payment/paymentMethod';\n\nimport CheckoutButtonList from './CheckoutButtonList';\nimport CreateAccountForm from './CreateAccountForm';\nimport CustomerViewType from './CustomerViewType';\nimport EmailLoginForm, { EmailLoginFormValues } from './EmailLoginForm';\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\nimport GuestForm, { GuestFormValues } from './GuestForm';\nimport LoginForm from './LoginForm';\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\nimport StripeGuestForm from './StripeGuestForm';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nexport interface CustomerProps {\n    viewType: CustomerViewType;\n    step: CheckoutStepStatus;\n    isEmbedded?: boolean;\n    isSubscribed: boolean;\n    isWalletButtonsOnTop: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    onChangeViewType?(viewType: CustomerViewType): void;\n    onAccountCreated?(): void;\n    onContinueAsGuest?(): void;\n    onContinueAsGuestError?(error: Error): void;\n    onReady?(): void;\n    onSubscribeToNewsletter(subscribe: boolean): void;\n    onSignIn?(): void;\n    onSignInError?(error: Error): void;\n    onUnhandledError?(error: Error): void;\n    onWalletButtonClick?(methodName: string): void;\n}\n\nexport interface WithCheckoutCustomerProps {\n    canSubscribe: boolean;\n    customerAccountFields: FormField[];\n    checkoutButtonIds: string[];\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    firstName?: string;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    checkoutSettings: CheckoutSettings;\n    forgotPasswordUrl: string;\n    isContinuingAsGuest: boolean;\n    isCreatingAccount: boolean;\n    isExecutingPaymentMethodCheckout: boolean;\n    isGuestEnabled: boolean;\n    hasBillingId: boolean;\n    isInitializing: boolean;\n    isSendingSignInEmail: boolean;\n    isSignInEmailEnabled: boolean;\n    isSigningIn: boolean;\n    privacyPolicyUrl?: string;\n    providerWithCustomCheckout?: string;\n    requiresMarketingConsent: boolean;\n    signInEmail?: SignInEmail;\n    signInEmailError?: Error;\n    isAccountCreationEnabled: boolean;\n    isPaymentDataRequired: boolean;\n    createAccountError?: Error;\n    signInError?: Error;\n    isFloatingLabelEnabled?: boolean;\n    isExpressPrivacyPolicy: boolean;\n    clearError(error: Error): Promise<CheckoutSelectors>;\n    continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\n    signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\n    createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n    shouldRenderStripeForm: boolean;\n}\n\nexport interface CustomerState {\n    isEmailLoginFormOpen: boolean;\n    isReady: boolean;\n    hasRequestedLoginEmail: boolean;\n}\n\nclass Customer extends Component<CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps, CustomerState> {\n    state: CustomerState = {\n        isEmailLoginFormOpen: false,\n        isReady: false,\n        hasRequestedLoginEmail: false,\n    };\n\n    private draftEmail?: string;\n\n    async componentDidMount(): Promise<void> {\n        const {\n            initializeCustomer,\n            email,\n            onReady = noop,\n            onUnhandledError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        this.draftEmail = email;\n\n        try {\n            if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n                await initializeCustomer({methodId: providerWithCustomCheckout});\n            }\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        this.setState({ isReady: true });\n\n        onReady();\n    }\n\n    async componentWillUnmount(): Promise<void> {\n        const {\n            deinitializeCustomer = noop,\n            providerWithCustomCheckout,\n            onUnhandledError = noop,\n        } = this.props;\n\n        try {\n            await deinitializeCustomer({ methodId: providerWithCustomCheckout });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { viewType } = this.props;\n        const { isEmailLoginFormOpen, isReady } = this.state;\n        const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\n        const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\n        const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\n        \n        if (!isReady) {\n            return null;\n        }\n\n        return (\n            <>\n                {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\n                {shouldRenderLoginForm && this.renderLoginForm()}\n                {shouldRenderGuestForm && this.renderGuestForm()}\n                {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\n            </>\n        );\n    }\n\n    private renderGuestForm(): ReactNode {\n        const {\n            canSubscribe,\n            checkEmbeddedSupport,\n            checkoutButtonIds,\n            deinitializeCustomer,\n            email,\n            initializeCustomer,\n            isContinuingAsGuest = false,\n            isExecutingPaymentMethodCheckout = false,\n            isInitializing = false,\n            isSubscribed,\n            isWalletButtonsOnTop,\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            onUnhandledError = noop,\n            onWalletButtonClick = noop,\n            step,\n            isFloatingLabelEnabled,\n            isExpressPrivacyPolicy,\n            isPaymentDataRequired,\n            shouldRenderStripeForm,\n            providerWithCustomCheckout,\n            checkoutSettings,\n        } = this.props;\n\n        const checkoutButtons = isWalletButtonsOnTop || !isPaymentDataRequired\n          ? null\n          : <CheckoutButtonList\n            checkEmbeddedSupport={checkEmbeddedSupport}\n            checkoutSettings={checkoutSettings}\n            deinitialize={deinitializeCustomer}\n            initialize={initializeCustomer}\n            isInitializing={isInitializing}\n            methodIds={checkoutButtonIds}\n            onClick={onWalletButtonClick}\n            onError={onUnhandledError}\n          />;\n\n        const isLoadingGuestForm = isContinuingAsGuest || isExecutingPaymentMethodCheckout;\n\n        return (\n            shouldRenderStripeForm ?\n                <StripeGuestForm\n                    canSubscribe={canSubscribe}\n                    checkoutButtons={checkoutButtons}\n                    continueAsGuestButtonLabelId=\"customer.continue\"\n                    defaultShouldSubscribe={isSubscribed}\n                    deinitialize={deinitializeCustomer}\n                    email={this.draftEmail || email}\n                    initialize={initializeCustomer}\n                    isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                    isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\n                    onChangeEmail={this.handleChangeEmail}\n                    onContinueAsGuest={this.handleContinueAsGuest}\n                    onShowLogin={this.handleShowLogin}\n                    privacyPolicyUrl={privacyPolicyUrl}\n                    requiresMarketingConsent={requiresMarketingConsent}\n                    step={step}\n                />\n                :\n            <GuestForm\n                canSubscribe={canSubscribe}\n                checkoutButtons={checkoutButtons}\n                continueAsGuestButtonLabelId=\"customer.continue\"\n                defaultShouldSubscribe={isSubscribed}\n                email={this.draftEmail || email}\n                isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isLoading={isLoadingGuestForm}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.handleContinueAsGuest}\n                onShowLogin={this.handleShowLogin}\n                privacyPolicyUrl={privacyPolicyUrl}\n                requiresMarketingConsent={requiresMarketingConsent}\n                shouldShowEmailWatermark={isPayPalFastlaneMethod(providerWithCustomCheckout)}\n            />\n        );\n    }\n\n    private renderEmailLoginLinkForm(): ReactNode {\n        const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\n\n        const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\n            this.props;\n\n        return (\n            <EmailLoginForm\n                email={this.draftEmail}\n                emailHasBeenRequested={hasRequestedLoginEmail}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isOpen={isEmailLoginFormOpen}\n                isSendingEmail={isSendingSignInEmail}\n                onRequestClose={this.closeEmailLoginFormForm}\n                onSendLoginEmail={this.handleSendLoginEmail}\n                sentEmail={signInEmail}\n                sentEmailError={signInEmailError}\n            />\n        );\n    }\n\n    private closeEmailLoginFormForm: () => void = () => {\n        this.setState({\n            isEmailLoginFormOpen: false,\n            hasRequestedLoginEmail: false,\n        });\n    };\n\n    private renderCreateAccountForm(): ReactNode {\n        const {\n            customerAccountFields,\n            isExecutingPaymentMethodCheckout,\n            isCreatingAccount,\n            createAccountError,\n            requiresMarketingConsent,\n            isFloatingLabelEnabled,\n            defaultShouldSubscribe,\n            fixNewsletterCheckboxExperimentEnabled,\n        } = this.props;\n\n        return (\n            <CreateAccountForm\n                createAccountError={createAccountError}\n                defaultShouldSubscribe={defaultShouldSubscribe}\n                fixNewsletterCheckboxExperimentEnabled={fixNewsletterCheckboxExperimentEnabled}\n                formFields={customerAccountFields}\n                isCreatingAccount={isCreatingAccount}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                onCancel={this.handleCancelCreateAccount}\n                onSubmit={this.handleCreateAccount}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderLoginForm(): ReactNode {\n        const {\n            isEmbedded,\n            email,\n            forgotPasswordUrl,\n            isSignInEmailEnabled,\n            isGuestEnabled,\n            isSendingSignInEmail,\n            isSigningIn,\n            isExecutingPaymentMethodCheckout,\n            isAccountCreationEnabled,\n            signInError,\n            isFloatingLabelEnabled,\n            viewType,\n        } = this.props;\n\n        return (\n            <LoginForm\n                canCancel={isGuestEnabled}\n                continueAsGuestButtonLabelId=\"customer.continue_as_guest_action\"\n                email={this.draftEmail || email}\n                forgotPasswordUrl={forgotPasswordUrl}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isSendingSignInEmail={isSendingSignInEmail}\n                isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\n                isSigningIn={isSigningIn}\n                onCancel={this.handleCancelSignIn}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\n                onCreateAccount={this.showCreateAccount}\n                onSendLoginEmail={this.handleEmailLoginClicked}\n                onSignIn={this.handleSignIn}\n                shouldShowCreateAccountLink={isAccountCreationEnabled}\n                signInError={signInError}\n                viewType={viewType}\n            />\n        );\n    }\n\n    private handleEmailLoginClicked: () => void = async () => {\n        const { viewType } = this.props;\n\n        try {\n            if (viewType !== CustomerViewType.Login && this.draftEmail) {\n                await this.handleSendLoginEmail({ email: this.draftEmail });\n            }\n        } finally {\n            this.setState({\n                isEmailLoginFormOpen: true,\n            });\n        }\n    };\n\n    private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\n        values,\n    ) => {\n        const { sendLoginEmail } = this.props;\n\n        try {\n            await sendLoginEmail(values);\n        } catch (error) {\n        // Need to write catch block since one test covers the case when `sendLoginEmail` fails\n        } finally {\n            this.setState({\n                hasRequestedLoginEmail: true,\n            });\n        }\n    };\n\n    private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\n        formValues,\n    ) => {\n        const {\n            canSubscribe,\n            continueAsGuest,\n            hasBillingId,\n            defaultShouldSubscribe,\n            onChangeViewType = noop,\n            onContinueAsGuest = noop,\n            onContinueAsGuestError = noop,\n            onSubscribeToNewsletter,\n        } = this.props;\n\n        const email = formValues.email.trim();\n        const updateSubscriptionWhenUnchecked =\n            hasBillingId || defaultShouldSubscribe ? false : undefined;\n\n        try {\n            const { data } = await continueAsGuest({\n                email,\n                acceptsMarketingNewsletter:\n                    canSubscribe && formValues.shouldSubscribe\n                        ? true\n                        : updateSubscriptionWhenUnchecked,\n                acceptsAbandonedCartEmails: formValues.shouldSubscribe\n                    ? true\n                    : updateSubscriptionWhenUnchecked,\n            });\n\n            onSubscribeToNewsletter(formValues.shouldSubscribe);\n\n            SubscribeSessionStorage.setSubscribeStatus(formValues.shouldSubscribe);\n\n            const customer = data.getCustomer();\n\n            const paymentProviderCustomer = data.getPaymentProviderCustomer();\n\n            if (customer && customer.shouldEncourageSignIn && customer.isGuest && !paymentProviderCustomer?.stripeLinkAuthenticationState) {\n                return onChangeViewType(CustomerViewType.SuggestedLogin);\n            }\n\n            await this.executePaymentMethodCheckoutOrContinue();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            if (\n                isErrorWithType(error) &&\n                (error.type === 'update_subscriptions' ||\n                    error.type === 'payment_method_client_invalid')\n            ) {\n                this.draftEmail = undefined;\n\n                onContinueAsGuest();\n            }\n\n            if (isErrorWithType(error) && error.status === 429) {\n                return onChangeViewType(CustomerViewType.EnforcedLogin);\n            }\n\n            if (isErrorWithType(error) && error.status === 403) {\n                return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\n            }\n\n            onContinueAsGuestError(error);\n        }\n    };\n\n    private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\n        credentials,\n    ) => {\n        const {\n            signIn,\n            onSignIn = noop,\n            onSignInError = noop,\n        } = this.props;\n\n        try {\n            await signIn(credentials);\n\n            onSignIn();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            onSignInError(error);\n        }\n    };\n\n    private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\n        const {\n            createAccount = noop,\n            onAccountCreated = noop,\n        } = this.props;\n\n        await createAccount(mapCreateAccountFromFormValues(values));\n\n        onAccountCreated();\n    };\n\n    private showCreateAccount: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.CreateAccount);\n    };\n\n    private handleCancelCreateAccount: () => void = () => {\n        const { clearError, onChangeViewType = noop, createAccountError } = this.props;\n\n        if (createAccountError) {\n            clearError(createAccountError);\n        }\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private handleCancelSignIn: () => void = () => {\n        const { clearError, onChangeViewType = noop, signInError } = this.props;\n\n        if (signInError) {\n            clearError(signInError);\n        }\n\n        onChangeViewType(CustomerViewType.Guest);\n    };\n\n    private handleChangeEmail: (email: string) => void = (email) => {\n        const { analyticsTracker } = this.props;\n\n        this.draftEmail = email;\n        analyticsTracker.customerEmailEntry(email);\n    };\n\n    private handleShowLogin: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private executePaymentMethodCheckoutOrContinue: () => void = async () => {\n        const {\n            executePaymentMethodCheckout,\n            onContinueAsGuest = noop,\n            providerWithCustomCheckout\n        } = this.props;\n\n        if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onContinueAsGuest,\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n            });\n        } else {\n            onContinueAsGuest();\n        }\n    };\n\n    private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.customerPaymentMethodExecuted(payload);\n    }\n}\n\nexport function mapToWithCheckoutCustomerProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\n    const {\n        data: {\n            getBillingAddress,\n            getCustomerAccountFields,\n            getCheckout,\n            getCustomer,\n            getCart,\n            getSignInEmail,\n            getConfig,\n            isPaymentDataRequired,\n        },\n        errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\n        statuses: {\n            isContinuingAsGuest,\n            isExecutingPaymentMethodCheckout,\n            isInitializingCustomer,\n            isSigningIn,\n            isSendingSignInEmail,\n            isCreatingCustomerAccount,\n        },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const cart = getCart();\n    const signInEmail = getSignInEmail();\n    const config = getConfig();\n\n    if (!checkout || !config || !cart) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            isSignInEmailEnabled,\n            isAccountCreationEnabled,\n            isExpressPrivacyPolicy,\n            features,\n        },\n    } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\n\n    const providerWithCustomCheckout = getProviderWithCustomCheckout(\n        config.checkoutSettings.providerWithCustomCheckout,\n    );\n\n    const fixNewsletterCheckboxExperimentEnabled = features['CHECKOUT-8033.fix_newletter_checkbox'];\n\n    return {\n        customerAccountFields: getCustomerAccountFields(),\n        canSubscribe: config.shopperConfig.showNewsletterSignup,\n        checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\n        clearError: checkoutService.clearError,\n        createAccount: checkoutService.createCustomerAccount,\n        continueAsGuest: checkoutService.continueAsGuest,\n        sendLoginEmail: checkoutService.sendSignInEmail,\n        defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        email: billingAddress?.email || customer?.email,\n        firstName: customer?.firstName,\n        fixNewsletterCheckboxExperimentEnabled,\n        forgotPasswordUrl: config.links.forgotPasswordLink,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isCreatingAccount: isCreatingCustomerAccount(),\n        createAccountError: getCreateCustomerAccountError(),\n        hasBillingId: !!billingAddress?.id,\n        isContinuingAsGuest: isContinuingAsGuest(),\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        isInitializing: isInitializingCustomer(),\n        isSignInEmailEnabled,\n        isAccountCreationEnabled,\n        isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\n        isSigningIn: isSigningIn(),\n        isSendingSignInEmail: isSendingSignInEmail(),\n        signInEmail,\n        signInEmailError: getSignInEmailError(),\n        privacyPolicyUrl,\n        providerWithCustomCheckout,\n        requiresMarketingConsent,\n        signIn: checkoutService.signInCustomer,\n        signInError: getSignInError(),\n        isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\n        isExpressPrivacyPolicy,\n        isPaymentDataRequired: isPaymentDataRequired(),\n        shouldRenderStripeForm: providerWithCustomCheckout === PaymentMethodId.StripeUPE && shouldUseStripeLinkByMinimumAmount(cart),\n        checkoutSettings: config.checkoutSettings,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { Banner, Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\n\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\nimport './StaticConsignment.scss';\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\n\ninterface StaticConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    compactView?: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\n    consignment,\n    cart,\n    compactView,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const { shippingAddress: address, selectedShippingOption } = consignment;\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    return (\n        <div className=\"staticConsignment\">\n            <StaticAddress address={address} type={AddressType.Shipping} />\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticConsignment);\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { localizeAddress, TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout , useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport ConsignmentLineItemDetail from './ConsignmentLineItemDetail';\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\n\nimport './StaticMultiConsignment.scss';\n\ninterface StaticMultiConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    consignmentNumber: number;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticMultiConsignment: FunctionComponent<StaticMultiConsignmentProps> = ({\n    consignment,\n    cart,\n    consignmentNumber,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const {\n        checkoutState: {\n            data: { getShippingCountries },\n        },\n    } = useCheckout();\n    const { newFontStyle } = useStyleContext();\n\n    const { shippingAddress: addressWithoutLocalization, selectedShippingOption } = consignment;\n    const address = localizeAddress(addressWithoutLocalization, getShippingCountries());\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticMultiConsignment\">\n            <h3 className={classNames('staticMultiConsignment-header',\n                { 'body-bold': newFontStyle })}>\n                <TranslatedString data={{ consignmentNumber }} id=\"shipping.multishipping_consignment_index_heading\" />\n            </h3>\n\n            <div className=\"checkout-address--static\">\n                <p className={classNames('address-entry',\n                    { 'sub-text': newFontStyle })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n                <div className=\"address-details\">\n                    <p className={classNames('street-address address-entry',\n                        { 'sub-text': newFontStyle })}>\n                        <span className=\"address-line-1\">{address.address1}</span>\n                        {address.address2 && (\n                            <span className=\"address-line-2\">{`, ${address.address2}`}</span>\n                        )}\n                    </p>\n\n                    <p className={classNames('address-entry',\n                        { 'sub-text': newFontStyle })}>\n                        {address.city && <span className=\"locality\">{address.city}</span>}\n                        {address.localizedProvince && (\n                            <span className=\"region\">{`, ${address.localizedProvince}`}</span>\n                        )}\n                        {address.localizedCountry && (\n                            <span className=\"country-name\">{`, ${address.localizedCountry}`}</span>\n                        )}\n                        {address.postalCode && (\n                            <span className=\"postal-code\">{` ${address.postalCode}`}</span>\n                        )}\n                    </p>\n                </div>\n            </div>\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            <div className=\"staticConsignment-items\">\n                <span className={newFontStyle ? 'body-bold' : ''}>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n                </span>\n            \n                <ConsignmentLineItemDetail isMultiShippingSummary lineItems={lineItems} />\n        </div>\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticMultiConsignment);\n","\nimport { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport StaticConsignment from './StaticConsignment';\nimport StaticMultiConsignment from './StaticMultiConsignment';\n\ninterface ShippingSummaryProps {\n    isShippingDiscountDisplayEnabled: boolean;\n    isMultiShippingMode: boolean;\n    consignments: Consignment[];\n    cart: Cart;\n}\n\nconst ShippingSummary: FunctionComponent<ShippingSummaryProps> = ({\n    isShippingDiscountDisplayEnabled,\n    isMultiShippingMode,\n    consignments,\n    cart\n}) => {\n    if (isMultiShippingMode) {\n        return (\n            <>\n                {consignments.map((consignment, index) => (\n                    <div className=\"staticMultiConsignmentContainer\" key={consignment.id}>\n                        <StaticMultiConsignment\n                            cart={cart}\n                            consignment={consignment}\n                            consignmentNumber={index + 1}\n                            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                        />\n                    </div>\n                ))}\n            </>\n        );\n    }\n\n    return (\n        <>\n            {consignments.map((consignment) => (\n                <div className=\"staticConsignmentContainer\" key={consignment.id}>\n                    <StaticConsignment\n                        cart={cart}\n                        compactView={consignments.length < 2}\n                        consignment={consignment}\n                        isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                    />\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default memo(ShippingSummary);\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepHeaderProps {\n    heading: ReactNode;\n    isActive?: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n    heading,\n    isActive,\n    isComplete,\n    isEditable,\n    onEdit,\n    summary,\n    type,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    return (\n        <div\n            className={classNames('stepHeader', {\n                'is-readonly': !isEditable,\n                'is-clickable': isEditable && !isActive,\n            })}\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n        >\n            <div className=\"stepHeader-figure stepHeader-column\">\n                <IconCheck\n                    additionalClassName={classNames(\n                        'stepHeader-counter',\n                        'optimizedCheckout-step',\n                        { 'stepHeader-counter--complete': isComplete },\n                    )}\n                />\n\n                <h2\n                    className={classNames('stepHeader-title optimizedCheckout-headingPrimary',\n                        { 'header': newFontStyle && (isActive || isComplete) },\n                        { 'header-secondary': newFontStyle && !isActive && !isComplete })}\n                >{heading}</h2>\n            </div>\n\n            <div\n                className={classNames('stepHeader-body stepHeader-column optimizedCheckout-contentPrimary',\n                    { 'body-regular': newFontStyle })}\n                data-test=\"step-info\"\n            >\n                {!isActive && isComplete && summary}\n            </div>\n\n            {isEditable && !isActive && (\n                <div className=\"stepHeader-actions stepHeader-column\">\n                    <Button\n                        aria-expanded={isActive}\n                        className={classNames({ 'body-regular': newFontStyle })}\n                        size={ButtonSize.Tiny}\n                        testId=\"step-edit-button\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"common.edit_action\" />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { Component, createRef, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n    children?: ReactNode;\n    heading?: ReactNode;\n    isActive?: boolean;\n    isBusy: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    suggestion?: ReactNode;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onExpanded?(step: CheckoutStepType): void;\n    onEdit?(step: CheckoutStepType): void;\n}\n\nexport interface CheckoutStepState {\n    isClosed: boolean;\n}\n\nexport default class CheckoutStep extends Component<CheckoutStepProps, CheckoutStepState> {\n    state = {\n        isClosed: true,\n    };\n\n    private containerRef = createRef<HTMLLIElement>();\n    private contentRef = createRef<HTMLDivElement>();\n    private timeoutRef?: number;\n    private timeoutDelay?: number;\n\n    componentDidMount(): void {\n        const { isActive } = this.props;\n\n        if (isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<CheckoutStepProps>): void {\n        const { isActive } = this.props;\n\n        if (isActive && isActive !== prevProps.isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentWillUnmount(): void {\n        if (this.timeoutRef) {\n            window.clearTimeout(this.timeoutRef);\n\n            this.timeoutRef = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { heading, isActive, isComplete, isEditable, onEdit, suggestion, summary, type } =\n            this.props;\n\n        const { isClosed } = this.state;\n\n        return (\n            <li\n                className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n                    [`checkout-step--${type}`]: !!type,\n                })}\n                ref={this.containerRef}\n            >\n                <div className=\"checkout-view-header\">\n                    <CheckoutStepHeader\n                        heading={heading}\n                        isActive={isActive}\n                        isComplete={isComplete}\n                        isEditable={isEditable}\n                        onEdit={onEdit}\n                        summary={summary}\n                        type={type}\n                    />\n                </div>\n\n                {suggestion && isClosed && !isActive && (\n                    <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n                        {suggestion}\n                    </div>\n                )}\n\n                {this.renderContent()}\n            </li>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { children, isActive, isBusy } = this.props;\n\n        return (\n            <MobileView>\n                {(matched) => (\n                    <CSSTransition\n                        addEndListener={this.handleTransitionEnd}\n                        classNames=\"checkout-view-content\"\n                        enter={!matched}\n                        exit={!matched}\n                        in={isActive}\n                        mountOnEnter\n                        onExited={ this.onAnimationEnd }\n                        timeout={ {} }\n                        unmountOnExit\n                    >\n                        <div\n                            aria-busy={isBusy}\n                            className=\"checkout-view-content\"\n                            ref={this.contentRef}\n                        >\n                            {isActive ? children : null}\n                        </div>\n                    </CSSTransition>\n                )}\n            </MobileView>\n        );\n    }\n\n    private focusStep(): void {\n        const delay = isMobileView() ? 0 : this.getTransitionDelay();\n\n        this.setState({ isClosed: false });\n\n        this.timeoutRef = window.setTimeout(() => {\n            const input = this.getChildInput();\n            const position = this.getScrollPosition();\n            const { type, onExpanded = noop } = this.props;\n\n            if (input) {\n                input.focus();\n            }\n\n            if (position !== undefined && !isNaN(position)) {\n                window.scrollTo(0, position);\n            }\n\n            onExpanded(type);\n\n            this.timeoutRef = undefined;\n        }, delay);\n    }\n\n    private getChildInput(): HTMLElement | undefined {\n        const container = this.containerRef.current;\n\n        if (!container) {\n            return;\n        }\n\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n        return input || undefined;\n    }\n\n    private getScrollPosition(): number | undefined {\n        const container = this.getParentContainer();\n        const { isComplete } = this.props;\n\n        if (!container || window !== window.top) {\n            return;\n        }\n\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\n        const containerOffset =\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n        return containerOffset - topOffset;\n    }\n\n    // For now, we need to find the parent container because `CheckoutStep`\n    // isn't the outer container yet. Once both the header and body are\n    // moved inside this component, we can remove the lookup.\n    private getParentContainer(): HTMLElement | undefined {\n        let container: HTMLElement | null = this.containerRef.current;\n\n        while (container && container.parentElement) {\n            if (container.parentElement.classList.contains('checkout-step')) {\n                return container.parentElement;\n            }\n\n            container = container.parentElement;\n        }\n\n        return this.containerRef.current ? this.containerRef.current : undefined;\n    }\n\n    private getTransitionDelay(): number {\n        if (this.timeoutDelay !== undefined) {\n            return this.timeoutDelay;\n        }\n\n        // Cache the result to avoid unnecessary reflow\n        this.timeoutDelay =\n            parseFloat(\n                this.contentRef.current\n                    ? getComputedStyle(this.contentRef.current).transitionDuration\n                    : '0s',\n            ) * 1000;\n\n        return this.timeoutDelay;\n    }\n\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\n        node.addEventListener('transitionend', ({ target }) => {\n            if (target === node) {\n                done();\n            }\n        });\n    };\n\n    private onAnimationEnd = (): void => {\n        const { isActive } = this.props;\n\n        if (!isActive) {\n            this.setState({ isClosed: true });\n        }\n    }\n}\n","enum CheckoutStepType {\n    Billing = 'billing',\n    Customer = 'customer',\n    Payment = 'payment',\n    Shipping = 'shipping',\n}\n\nexport default CheckoutStepType;\n","import { Cart, StoreConfig } from '@bigcommerce/checkout-sdk';\n\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\n    if (!cart) {\n        return false;\n    }\n\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\n        return true;\n    }\n\n    if (config && cart.lineItems.customItems\n    ) {\n        return cart.lineItems.customItems.length > 0;\n    }\n\n    return false;\n};\n\nexport default itemsRequireShipping;\n","import { CheckoutPayment, CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n    hasSelectedShippingOptions,\n    hasUnassignedLineItems,\n    itemsRequireShipping,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n// In this step, we require that the customer strategy be reloaded the first time.\nconst getStripeLinkAndCheckoutPageIsReloaded = (\n    isUsingWallet: boolean,\n    hasEmail: boolean,\n    isGuest: boolean,\n    shouldUseStripeLinkByMinimumAmount: boolean,\n    providerWithCustomCheckout?: string | null,\n) => {\n    return !isUsingWallet && providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount;\n}\n\nconst getCustomerStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => data.getPaymentProviderCustomer(),\n    (checkout, customer, billingAddress, config, cart, paymentProviderCustomer) => {\n        const hasEmail = !!(\n            (customer && customer.email) ||\n            (billingAddress && billingAddress.email)\n        );\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment: CheckoutPayment) => SUPPORTED_METHODS.includes(payment.providerId),\n                  )\n                : false;\n        const isGuest = !!(customer && customer.isGuest);\n        const isComplete = hasEmail || isUsingWallet;\n        const isEditable = isComplete && !isUsingWallet && isGuest;\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\n            isUsingWallet,\n            hasEmail,\n            isGuest,\n            cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\n            config?.checkoutSettings.providerWithCustomCheckout,\n        );\n\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n            return {\n                type: CheckoutStepType.Customer,\n                isActive: false,\n                isComplete: paymentProviderCustomer?.stripeLinkAuthenticationState !== undefined,\n                isEditable,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Customer,\n            isActive: false,\n            isComplete,\n            isEditable,\n            isRequired: true,\n        };\n    },\n);\n\nconst getBillingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => {\n        const billingAddress = data.getBillingAddress();\n\n        return billingAddress\n            ? data.getBillingAddressFields(billingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (checkout, billingAddress, billingAddressFields, config) => {\n        const hasAddress = billingAddress\n            ? isValidAddress(billingAddress, billingAddressFields)\n            : false;\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.includes(payment.providerId),\n                  )\n                : false;\n        const isComplete = hasAddress || isUsingWallet;\n        const isUsingAmazonPay =\n            checkout && checkout.payments\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n                : false;\n\n        if (isUsingAmazonPay) {\n            const billingAddressCustomFields = billingAddressFields.filter(\n                ({ custom }: { custom: boolean }) => custom,\n            );\n            const hasCustomFields = billingAddressCustomFields.length > 0;\n            const isAmazonPayBillingStepComplete =\n                billingAddress && hasCustomFields\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\n                    : true;\n\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: isAmazonPayBillingStepComplete,\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n                isRequired: true,\n            };\n        }\n\n        const isGooglePayBillingAddressEditingEnabled = isExperimentEnabled(\n            config?.checkoutSettings,\n            'STRIPE-546.allow_billing_address_editing_for_all_Google_Pay_providers',\n        );\n        const isUsingGooglePay =\n            isGooglePayBillingAddressEditingEnabled && (checkout && checkout.payments\n                ? checkout.payments.some((payment) => (payment?.providerId || '').startsWith('googlepay'))\n                : false);\n\n        if (isUsingGooglePay) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        const isUsingPaypal =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment) =>\n                        [\n                            'braintreepaypal',\n                            'braintreepaypalcredit',\n                            'braintreevenmo',\n                            'paypalcommerce',\n                            'paypalcommercecredit',\n                            'paypalcommercevenmo'\n                        ]\n                            .includes(payment.providerId))\n                : false;\n\n        if (isUsingPaypal) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Billing,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && !isUsingWallet,\n            isRequired: true,\n        };\n    },\n);\n\nconst getShippingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => {\n        const shippingAddress = data.getShippingAddress();\n\n        return shippingAddress\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n        const hasAddress = shippingAddress\n            ? isValidAddress(shippingAddress, shippingAddressFields)\n            : false;\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n        const hasUnassignedItems =\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n        const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n        const isRequired = itemsRequireShipping(cart, config);\n        const isCustomShippingSelected =\n            isExperimentEnabled(\n                config?.checkoutSettings,\n                'PROJECT-5015.manual_order.display_custom_shipping',\n            ) &&\n            hasOptions &&\n            consignments?.some(\n                ({ selectedShippingOption }) => selectedShippingOption?.type === 'custom',\n            );\n\n        return {\n            type: CheckoutStepType.Shipping,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && isRequired && !isCustomShippingSelected,\n            isRequired,\n        };\n    },\n);\n\nconst getPaymentStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getOrder(),\n    (order) => {\n        const isComplete = order ? order.isComplete : false;\n\n        return {\n            type: CheckoutStepType.Payment,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getOrderSubmitStatus = createSelector(\n    ({ statuses }: CheckoutSelectors) => statuses.isSubmittingOrder(),\n    (status) => status,\n);\n\nconst getCheckoutStepStatuses = createSelector(\n    getCustomerStepStatus,\n    getShippingStepStatus,\n    getBillingStepStatus,\n    getPaymentStepStatus,\n    getOrderSubmitStatus,\n    (customerStep, shippingStep, billingStep, paymentStep, orderStatus) => {\n        const isSubmittingOrder = orderStatus;\n\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\n\n        const defaultActiveStep =\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n        return steps.map((step, index) => {\n            const isPrevStepComplete = steps\n                .slice(0, index)\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n            return {\n                ...step,\n                isActive: defaultActiveStep.type === step.type,\n                isBusy: false,\n                // A step is only editable if its previous step is complete or not required\n                isEditable: isPrevStepComplete && step.isEditable && !isSubmittingOrder,\n            };\n        });\n    },\n);\n\nexport default getCheckoutStepStatuses;\n","import {\n    Address,\n    Cart,\n    CartChangedError,\n    CheckoutParams,\n    CheckoutSelectors,\n    Consignment,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    ExtensionRegion,\n    FlashMessage,\n    PaymentMethod,\n    Promotion,\n RequestOptions } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { Extension, ExtensionContextProps, withExtension } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport {\n    AddressFormSkeleton,\n    ChecklistSkeleton,\n    CheckoutPageSkeleton,\n    LazyContainer,\n    LoadingNotification,\n    LoadingOverlay,\n    OrderConfirmationPageSkeleton\n} from '@bigcommerce/checkout/ui';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n    CheckoutButtonContainer,\n    CheckoutSuggestion,\n    Customer,\n    CustomerInfo,\n    CustomerSignOutEvent,\n    CustomerViewType,\n} from '../customer';\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\nimport { SubscribeSessionStorage } from '../customer/SubscribeSessionStorage';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping, ShippingSummary } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport CheckoutSupport from './CheckoutSupport';\nimport mapToCheckoutProps from './mapToCheckoutProps';\n\nconst Billing = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"billing\" */\n                '../billing/Billing'\n            ),\n    ),\n);\n\nconst CartSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary\" */\n                '../cart/CartSummary'\n            ),\n    ),\n);\n\nconst CartSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary-drawer\" */\n                '../cart/CartSummaryDrawer'\n            ),\n    ),\n);\n\nconst Payment = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"payment\" */\n                '../payment/Payment'\n            ),\n    ),\n);\n\nconst Shipping = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"shipping\" */\n                '../shipping/Shipping'\n            ),\n    ),\n);\n\nexport interface CheckoutProps {\n    checkoutId: string;\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n    activeStepType?: CheckoutStepType;\n    isBillingSameAsShipping: boolean;\n    customerViewType?: CustomerViewType;\n    defaultStepType?: CheckoutStepType;\n    error?: Error;\n    flashMessages?: FlashMessage[];\n    isMultiShippingMode: boolean;\n    isCartEmpty: boolean;\n    isRedirecting: boolean;\n    isInitialLoad: boolean;\n    hasSelectedShippingOptions: boolean;\n    isSubscribed: boolean;\n    buttonConfigs: PaymentMethod[];\n}\n\nexport interface WithCheckoutProps {\n    billingAddress?: Address;\n    cart?: Cart;\n    consignments?: Consignment[];\n    error?: Error;\n    hasCartChanged: boolean;\n    flashMessages?: FlashMessage[];\n    isGuestEnabled: boolean;\n    isLoadingCheckout: boolean;\n    isPending: boolean;\n    isPriceHiddenFromGuests: boolean;\n    isShowingWalletButtonsOnTop: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n    loginUrl: string;\n    cartUrl: string;\n    createAccountUrl: string;\n    promotions?: Promotion[];\n    steps: CheckoutStepStatus[];\n    clearError(error?: Error): void;\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n    loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n}\n\nclass Checkout extends Component<\n    CheckoutProps &\n        WithCheckoutProps &\n        WithLanguageProps &\n        AnalyticsContextProps &\n        ExtensionContextProps,\n    CheckoutState\n> {\n    state: CheckoutState = {\n        isInitialLoad: true,\n        isBillingSameAsShipping: true,\n        isCartEmpty: false,\n        isRedirecting: false,\n        isMultiShippingMode: false,\n        hasSelectedShippingOptions: false,\n        isSubscribed: false,\n        buttonConfigs: [],\n    };\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n    private unsubscribeFromConsignments?: () => void;\n\n    componentWillUnmount(): void {\n        if (this.unsubscribeFromConsignments) {\n            this.unsubscribeFromConsignments();\n            this.unsubscribeFromConsignments = undefined;\n        }\n\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\n        this.handleBeforeExit();\n    }\n\n    componentDidUpdate(prevProps: WithCheckoutProps): void {\n        if (prevProps.steps.length === 0 && this.props.steps && this.props.steps.length > 0) {\n            this.handleReady();\n        }\n    }\n\n    async componentDidMount(): Promise<void> {\n        const {\n            analyticsTracker,\n            checkoutId,\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            extensionService,\n            loadCheckout,\n            loadPaymentMethodByIds,\n            subscribeToConsignments,\n        } = this.props;\n\n        try {\n            const [{ data }] = await Promise.all([loadCheckout(checkoutId, {\n                params: {\n                    include: [\n                        'cart.lineItems.physicalItems.categoryNames',\n                        'cart.lineItems.digitalItems.categoryNames',\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n                },\n            }), extensionService.loadExtensions()]);\n\n            const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\n            const checkoutSettings = data.getConfig()?.checkoutSettings;\n\n            const supportedProviders = getSupportedMethodIds(providers, checkoutSettings);\n\n            if (providers.length > 0) {\n                const configs = await loadPaymentMethodByIds(supportedProviders);\n\n                this.setState({\n                    buttonConfigs: configs.data.getPaymentMethods() || [],\n                });\n            }\n\n            extensionService.preloadExtensions();\n\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n            const errorFlashMessages = data.getFlashMessages('error') || [];\n\n            if (errorFlashMessages.length) {\n                const { language } = this.props;\n\n                this.setState({\n                    error: new CustomError({\n                        title:\n                            errorFlashMessages[0].title ||\n                            language.translate('common.error_heading'),\n                        message: errorFlashMessages[0].message,\n                        data: {},\n                        name: 'default',\n                    }),\n                });\n            }\n\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n            this.unsubscribeFromConsignments = subscribeToConsignments(\n                this.handleConsignmentsUpdated,\n            );\n            this.embeddedMessenger = messenger;\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n            messenger.postFrameLoaded({ contentId: containerId });\n            messenger.postLoaded();\n\n            analyticsTracker.checkoutBegin();\n\n            const consignments = data.getConsignments();\n            const cart = data.getCart();\n\n            const hasMultiShippingEnabled =\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n            const checkoutBillingSameAsShippingEnabled =\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n            const defaultNewsletterSignupOption =\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\n                false;\n            const isMultiShippingMode =\n                !!cart &&\n                !!consignments &&\n                hasMultiShippingEnabled &&\n                isUsingMultiShipping(consignments, cart.lineItems);\n\n            this.setState({\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n                isSubscribed: defaultNewsletterSignupOption,\n            });\n\n            if (isMultiShippingMode) {\n                this.setState({ isMultiShippingMode });\n            }\n\n            if (this.state.isInitialLoad) {\n                this.setState({ isInitialLoad: false });\n            }\n\n            window.addEventListener('beforeunload', this.handleBeforeExit);\n\n        } catch (error) {\n            if (error instanceof Error) {\n                this.handleUnhandledError(error);\n            }\n        }\n    }\n\n    render(): ReactNode {\n        const { error } = this.state;\n        let errorModal = null;\n\n        if (error) {\n            if (isCustomError(error)) {\n                errorModal = (\n                    <ErrorModal\n                        error={error}\n                        onClose={this.handleCloseErrorModal}\n                        title={error.title}\n                    />\n                );\n            } else {\n                errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\n            }\n        }\n\n        return (\n            <div className={classNames('remove-checkout-step-numbers', { 'is-embedded': isEmbedded() })} data-test=\"checkout-page-container\" id=\"checkout-page-container\">\n                <div className=\"layout optimizedCheckout-contentPrimary\">\n                    {this.renderContent()}\n                </div>\n                {errorModal}\n            </div>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop, extensionState } = this.props;\n\n        const { activeStepType, defaultStepType, isCartEmpty, isRedirecting, isInitialLoad } = this.state;\n\n        if (isCartEmpty) {\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n        }\n\n        const isPaymentStepActive = activeStepType\n            ? activeStepType === CheckoutStepType.Payment\n            : defaultStepType === CheckoutStepType.Payment;\n        \n        const pageLoadingSkeleton = isRedirecting ? <OrderConfirmationPageSkeleton /> : <CheckoutPageSkeleton />;\n        const loadingSkeleton = isMobileView() ? null : pageLoadingSkeleton;\n\n        return (\n            <LoadingOverlay isLoading={isInitialLoad || isRedirecting} loadingSkeleton={loadingSkeleton} unmountContentWhenLoading>\n                <div className=\"layout-main\">\n                    <LoadingNotification isLoading={extensionState.isShowingLoadingIndicator} />\n\n                    {/* <Extension region={ExtensionRegion.GlobalWebWorker} /> */}\n                    <PromotionBannerList promotions={promotions} />\n\n                    {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\n                        <CheckoutButtonContainer\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\n                            isPaymentStepActive={isPaymentStepActive}\n                            onUnhandledError={this.handleUnhandledError}\n                            onWalletButtonClick={this.handleWalletButtonClick}\n                        />\n                    )}\n\n                    <ol className=\"checkout-steps\">\n                        {steps\n                            .filter((step) => step.isRequired)\n                            .map((step) =>\n                                this.renderStep({\n                                    ...step,\n                                    isActive: activeStepType\n                                        ? activeStepType === step.type\n                                        : defaultStepType === step.type,\n                                    isBusy: isPending,\n                                }),\n                            )}\n                    </ol>\n                </div>\n\n                {this.renderCartSummary()}\n            </LoadingOverlay>\n        );\n    }\n\n    private renderStep(step: CheckoutStepStatus): ReactNode {\n        switch (step.type) {\n            case CheckoutStepType.Customer:\n                return this.renderCustomerStep(step);\n\n            case CheckoutStepType.Shipping:\n                return this.renderShippingStep(step);\n\n            case CheckoutStepType.Billing:\n                return this.renderBillingStep(step);\n\n            case CheckoutStepType.Payment:\n                return this.renderPaymentStep(step);\n\n            default:\n                return null;\n        }\n    }\n\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n        const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\n        const {\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n            isSubscribed,\n        } = this.state;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                suggestion={<CheckoutSuggestion />}\n                summary={\n                    <CustomerInfo\n                        onSignOut={this.handleSignOut}\n                        onSignOutError={this.handleError}\n                    />\n                }\n            >\n                <Customer\n                    checkEmbeddedSupport={this.checkEmbeddedSupport}\n                    isEmbedded={isEmbedded()}\n                    isSubscribed={isSubscribed}\n                    isWalletButtonsOnTop = {isShowingWalletButtonsOnTop }\n                    onAccountCreated={this.navigateToNextIncompleteStep}\n                    onChangeViewType={this.setCustomerViewType}\n                    onContinueAsGuest={this.navigateToNextIncompleteStep}\n                    onContinueAsGuestError={this.handleError}\n                    onReady={this.handleReady}\n                    onSignIn={this.navigateToNextIncompleteStep}\n                    onSignInError={this.handleError}\n                    onSubscribeToNewsletter={this.handleNewsletterSubscription}\n                    onUnhandledError={this.handleUnhandledError}\n                    onWalletButtonClick={this.handleWalletButtonClick}\n                    step={step}\n                    viewType={customerViewType}\n                />\n            </CheckoutStep>\n        );\n    }\n\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\n        const { hasCartChanged, cart, consignments = [], isShippingDiscountDisplayEnabled } = this.props;\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\n\n        if (!cart) {\n            return;\n        }\n\n        const setIsMultishippingMode = (value: boolean) => {\n            this.setState({ isMultiShippingMode: value });\n        }\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={<ShippingSummary cart={cart} consignments={consignments} isMultiShippingMode={isMultiShippingMode} isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}/>}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Shipping\n                        cartHasChanged={hasCartChanged}\n                        isBillingSameAsShipping={isBillingSameAsShipping}\n                        isMultiShippingMode={isMultiShippingMode}\n                        navigateNextStep={this.handleShippingNextStep}\n                        onCreateAccount={this.handleShippingCreateAccount}\n                        onReady={this.handleReady}\n                        onSignIn={this.handleShippingSignIn}\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\n                        onUnhandledError={this.handleUnhandledError}\n                        setIsMultishippingMode={setIsMultishippingMode}\n                        step={step}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n        const { billingAddress } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Billing\n                        navigateNextStep={this.navigateToNextIncompleteStep}\n                        onReady={this.handleReady}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n        const { consignments, cart, errorLogger } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n            >\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n                    <Payment\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\n                        errorLogger={errorLogger}\n                        isEmbedded={isEmbedded()}\n                        isUsingMultiShipping={\n                            cart && consignments\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\n                                : false\n                        }\n                        onCartChangedError={this.handleCartChangedError}\n                        onFinalize={this.navigateToOrderConfirmation}\n                        onReady={this.handleReady}\n                        onSubmit={this.navigateToOrderConfirmation}\n                        onSubmitError={this.handleError}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderCartSummary(): ReactNode {\n        const { isMultiShippingMode } = this.state;\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer>\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                                <CartSummaryDrawer isMultiShippingMode={isMultiShippingMode} />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <CartSummary isMultiShippingMode={isMultiShippingMode} />\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                            </LazyContainer>\n                        </aside>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n        const { clearError, error, steps } = this.props;\n        const { activeStepType } = this.state;\n        const step = find(steps, { type });\n\n        if (!step) {\n            return;\n        }\n\n        if (activeStepType === step.type) {\n            return;\n        }\n\n        if (options && options.isDefault) {\n            this.setState({ defaultStepType: step.type });\n        } else {\n            this.setState({ activeStepType: step.type });\n        }\n\n        if (error) {\n            clearError(error);\n        }\n    }\n\n    private handleToggleMultiShipping: () => void = () => {\n        const { isMultiShippingMode } = this.state;\n\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\n    };\n\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\n        options,\n    ) => {\n        const { steps, analyticsTracker } = this.props;\n        const activeStepIndex = findIndex(steps, { isActive: true });\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n        if (!activeStep) {\n            return;\n        }\n\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n        if (previousStep) {\n            analyticsTracker.trackStepCompleted(previousStep.type);\n        }\n\n        this.navigateToStep(activeStep.type, options);\n    };\n\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n        const { steps, analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postComplete();\n        }\n\n        SubscribeSessionStorage.removeSubscribeStatus();\n\n        this.setState({ isRedirecting: true }, () => {\n            navigateToOrderConfirmation(orderId);\n        });\n    };\n\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n        const { embeddedSupport } = this.props;\n\n        return embeddedSupport.isSupported(...methodIds);\n    };\n\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\n        this.navigateToStep(CheckoutStepType.Shipping);\n    };\n\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType, defaultStepType } =\n            this.state;\n\n        const { steps } = this.props;\n\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\n            data.getConsignments() || [],\n        );\n\n        const isDefaultStepPaymentOrBilling =\n            !activeStepType &&\n            (defaultStepType === CheckoutStepType.Payment ||\n                defaultStepType === CheckoutStepType.Billing);\n\n        const isShippingStepFinished =\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\n                findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n        if (\n            prevHasSelectedShippingOptions &&\n            !newHasSelectedShippingOptions &&\n            isShippingStepFinished\n        ) {\n            this.navigateToStep(CheckoutStepType.Shipping);\n            this.setState({ error: new ShippingOptionExpiredError() });\n        }\n\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n    };\n\n    private handleCloseErrorModal: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepViewed(type);\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        this.handleError(error);\n\n        // For errors that are not caught and handled by child components, we\n        // handle them here by displaying a generic error modal to the shopper.\n        this.setState({ error });\n    };\n\n    private handleError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n        this.navigateToStep(type);\n    };\n\n    private handleReady: () => void = () => {\n        this.navigateToNextIncompleteStep({ isDefault: true });\n    };\n\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n        this.setState({ isSubscribed: subscribed });\n    }\n\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\n\n        if (isPriceHiddenFromGuests) {\n            if (window.top) {\n                return (window.top.location.href = cartUrl);\n            }\n        }\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postSignedOut();\n        }\n\n        if (isGuestEnabled) {\n            this.setCustomerViewType(CustomerViewType.Guest);\n        }\n\n        if (isCartEmpty) {\n            this.setState({ isCartEmpty: true });\n\n            if (!isEmbedded()) {\n                if (window.top) {\n                    return window.top.location.assign(loginUrl);\n                }\n            }\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n    };\n\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\n        isBillingSameAsShipping,\n    ) => {\n        this.setState({ isBillingSameAsShipping });\n\n        if (isBillingSameAsShipping) {\n            this.navigateToNextIncompleteStep();\n        } else {\n            this.navigateToStep(CheckoutStepType.Billing);\n        }\n    };\n\n    private handleShippingSignIn: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.Login);\n    };\n\n    private handleShippingCreateAccount: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\n    };\n\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n        const { createAccountUrl } = this.props;\n\n        if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n            if (window.top) {\n                window.top.location.replace(createAccountUrl);\n            }\n\n            return;\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n        this.setState({ customerViewType });\n    };\n\n    private handleBeforeExit: () => void = () => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.exitCheckout();\n    }\n\n    private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.walletButtonClick(methodName);\n    }\n}\n\nexport default withExtension(\n    withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\n);\n","import { CheckoutSelectors, CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\n\nimport { WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n    const { data, errors, statuses } = checkoutState;\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\n    const {\n        checkoutSettings: {\n            guestCheckoutEnabled: isGuestEnabled = false,\n            checkoutUserExperienceSettings = {\n                walletButtonsOnTop: false,\n                floatingLabelEnabled: false,\n            },\n        } = {},\n        links: {\n            loginLink: loginUrl = '',\n            createAccountLink: createAccountUrl = '',\n            cartLink: cartUrl = '',\n        } = {},\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n    } = data.getConfig() || {};\n\n    const subscribeToConsignmentsSelector = createSelector(\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n        },\n    );\n\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop); \n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        data.getConfig()?.checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return {\n        billingAddress: data.getBillingAddress(),\n        cart: data.getCart(),\n        clearError: checkoutService.clearError,\n        consignments: data.getConsignments(),\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n        isGuestEnabled,\n        isLoadingCheckout: statuses.isLoadingCheckout(),\n        isShippingDiscountDisplayEnabled,\n        isPending: statuses.isPending(),\n        isPriceHiddenFromGuests,\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n        loadCheckout: checkoutService.loadCheckout,\n        loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\n        loginUrl,\n        cartUrl,\n        createAccountUrl,\n        promotions,\n        subscribeToConsignments: subscribeToConsignmentsSelector({\n            checkoutService,\n            checkoutState,\n        }),\n        steps: data.getCheckout() ? getCheckoutStepStatuses(checkoutState) : EMPTY_ARRAY,\n    };\n}\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider, StyleProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nexport default class CheckoutApp extends Component<CheckoutAppProps> {\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private embeddedSupport = createEmbeddedCheckoutSupport(getLanguageService());\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<CheckoutAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render() {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider\n                                checkoutService={this.checkoutService}\n                                errorLogger={createErrorLogger()}\n                            >\n                                <StyleProvider>\n                                    <Checkout\n                                        {...this.props}\n                                        createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                        embeddedStylesheet={this.embeddedStylesheet}\n                                        embeddedSupport={this.embeddedSupport}\n                                        errorLogger={this.errorLogger}\n                                    />\n                                </StyleProvider>\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n}\n","import { CurrencyService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithCurrencyProps {\n    currency: CurrencyService;\n}\n\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithCurrency',\n    pickProps: (value, key) => key === 'currency' && !!value,\n});\n\nexport default withCurrency;\n","import CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { Address, AddressKey, FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    const fieldValue = address && address[name];\n\n                    addressFormValues[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    )?.toString() || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.date && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.date) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.checkbox) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n    newFontStyle?: boolean;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n    newFontStyle = false,\n}) => {\n    const renderField = useCallback(\n        (props: FieldProps<string>) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label && (typeof label === 'function' ? label(name) : label)}\n                {labelContent && !label && (\n                    <Label\n                        additionalClassName={newFontStyle ? 'floating-form-field-label' : ''}\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import {\n  ErrorLevelType,\n  ErrorLogger,\n  ErrorMeta,\n  ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import {\n    BrowserOptions,\n    captureException,\n    Event,\n    init,\n    Integrations,\n    SeverityLevel,\n    StackFrame,\n    withScope,\n} from '@sentry/browser';\nimport { RewriteFrames } from '@sentry/integrations';\nimport { EventHint, Exception } from '@sentry/types';\n\nimport {\n    ErrorLevelType,\n    ErrorLogger,\n    ErrorMeta,\n    ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n\n        init({\n            sampleRate,\n            beforeSend: this.handleBeforeSend,\n            denyUrls: [\n                ...(config.denyUrls || []),\n                'polyfill~checkout',\n                'sentry~checkout',\n            ],\n            integrations: [\n                new Integrations.GlobalHandlers({\n                    onerror: false,\n                    onunhandledrejection: true,\n                }),\n                new RewriteFrames({\n                    iteratee: this.handleRewriteFrame,\n                }),\n            ],\n            ...config,\n        });\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        withScope((scope) => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            if (errorCode) {\n                scope.setTags({ errorCode });\n            }\n\n            scope.setLevel(this.mapToSentryLevel(level));\n\n            if (payload) {\n                scope.setExtras(payload);\n            }\n\n            scope.setFingerprint(['{{ default }}']);\n\n            captureException(error);\n        });\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: Event, hint?: EventHint) => Event | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  ErrorLogger,\n  ErrorLoggerOptions,\n  ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","import { createRequestSender, RequestSender } from '@bigcommerce/request-sender';\n\nimport { CreatedCustomer, CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface PasswordField {\n    minLength: number;\n}\n\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\n    const renderPasswordInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const renderPasswordConfirmationInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const passwordLabelContent = useMemo(\n        () => (\n            <>\n                <TranslatedString id=\"customer.password_label\" />{' '}\n                <small>\n                    {`${minLength}-`}\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\n                </small>\n            </>\n        ),\n        [minLength],\n    );\n\n    const passwordConfirmationLabelContent = useMemo(\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\n        [],\n    );\n\n    return (\n        <>\n            <FormField\n                input={renderPasswordInput}\n                labelContent={passwordLabelContent}\n                name=\"password\"\n            />\n\n            <FormField\n                input={renderPasswordConfirmationInput}\n                labelContent={passwordConfirmationLabelContent}\n                name=\"confirmPassword\"\n            />\n        </>\n    );\n};\n\nexport default memo(SignUpPasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\nimport { object, ref, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { PasswordRequirements } from '../customer';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport SignUpPasswordField from './SignUpPasswordField';\n\nexport interface SignUpFormProps {\n    isSigningUp?: boolean;\n    customerCanBeCreated: boolean;\n    passwordRequirements: PasswordRequirements;\n    onSignUp(data: SignUpFormValues): void;\n}\n\nexport interface SignUpFormValues {\n    password: string;\n    confirmPassword: string;\n}\n\nconst GuestSignUpForm: FunctionComponent<\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\n    <Fieldset\n        legend={\n            <Legend>\n                <TranslatedString\n                    id={\n                        customerCanBeCreated\n                            ? 'customer.create_account_text'\n                            : 'customer.set_password_text'\n                    }\n                />\n            </Legend>\n        }\n    >\n        {!customerCanBeCreated && (\n            <p>\n                <TranslatedString id=\"customer.account_created_text\" />\n            </p>\n        )}\n\n        <Form className=\"guest-signup form\">\n            <SignUpPasswordField minLength={minLength} />\n\n            <div className=\"form-actions\">\n                <Button\n                    id=\"createAccountButton\"\n                    isLoading={isSigningUp}\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString\n                        id={\n                            customerCanBeCreated\n                                ? 'customer.create_account_action'\n                                : 'customer.set_password_action'\n                        }\n                    />\n                </Button>\n            </div>\n        </Form>\n    </Fieldset>\n);\n\nexport default withLanguage(\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\n        mapPropsToValues: () => ({\n            password: '',\n            confirmPassword: '',\n        }),\n        handleSubmit: (values, { props: { onSignUp } }) => {\n            onSignUp(values);\n        },\n        validationSchema: ({\n            language,\n            passwordRequirements: { description, numeric, alpha, minLength },\n        }: SignUpFormProps & WithLanguageProps) =>\n            object({\n                password: string()\n                    .required(description || language.translate('customer.password_required_error'))\n                    .matches(\n                        numeric,\n                        description ||\n                            language.translate('customer.password_number_required_error'),\n                    )\n                    .matches(\n                        alpha,\n                        description ||\n                            language.translate('customer.password_letter_required_error'),\n                    )\n                    .min(\n                        minLength,\n                        description ||\n                            language.translate('customer.password_under_minimum_length_error'),\n                    )\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\n                confirmPassword: string()\n                    .required(language.translate('customer.password_confirmation_required_error'))\n                    .oneOf(\n                        [ref('password')],\n                        language.translate('customer.password_confirmation_error'),\n                    ),\n            }),\n    })(memo(GuestSignUpForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.set_password_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default PasswordSavedSuccessAlert;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst SignedUpSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.create_account_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default SignedUpSuccessAlert;\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationRequirementsError extends CustomError {\n    constructor(data: Error, requirements: string) {\n        super({\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\n            message: requirements,\n            title: getLanguageService().translate(\n                'customer.create_account_requirements_error_heading',\n            ),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationFailedError extends CustomError {\n    constructor(data: Error) {\n        super({\n            name: 'ACCOUNT_CREATION_FAILED',\n            message: getLanguageService().translate('customer.create_account_error'),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\n    }\n}\n","import { GatewayOrderPayment, Order, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isGiftCertificatePayment } from '../giftCertificate';\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport interface PaymentInstructionsProps {\n    order: Order;\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\n}\n\nfunction getPaymentInstructions(order: Order): string {\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\n\n    return instructions || '';\n}\n\nexport default getPaymentInstructions;\n","import { GiftCertificate, OrderPayments } from '@bigcommerce/checkout-sdk';\n\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\n\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\n        code: detail.code,\n        remaining: detail.remaining,\n        used: amount,\n        balance: amount + detail.remaining,\n        purchaseDate: '',\n    }));\n}\n","import { OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\n    return (payments || [])\n        .filter(isStoreCreditPayment)\n        .reduce((total, payment) => total + payment.amount, 0);\n}\n","import { Order } from '@bigcommerce/checkout-sdk';\n\nimport { mapFromPayments } from '../giftCertificate';\n\nimport getOrderShippingCostAfterAutomaticDiscount from './getOrderShippingCostAfterAutomaticDiscount';\nimport getStoreCreditAmount from './getStoreCreditAmount';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    baseAmount,\n    discountAmount,\n    isTaxIncluded,\n    shippingCostBeforeDiscount,\n    payments,\n    handlingCostTotal,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n    consignments,\n}: Order,\nisShippingDiscountDisplayEnabled: boolean,\n): OrderSummarySubtotalsProps {\n\n    const shippingAmount = isShippingDiscountDisplayEnabled && consignments.shipping.length > 0\n    ? getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments.shipping)\n    : shippingCostBeforeDiscount;\n\n    return {\n        subtotalAmount: baseAmount,\n        shippingAmount,\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled ? shippingCostBeforeDiscount : undefined,\n        giftWrappingAmount: giftWrappingCostTotal,\n        discountAmount,\n        storeCreditAmount: getStoreCreditAmount(payments),\n        handlingAmount: handlingCostTotal,\n        coupons,\n        giftCertificates: payments && mapFromPayments(payments),\n        taxes,\n        isTaxIncluded,\n        fees,\n    };\n}\n","import { OrderShippingConsignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: OrderShippingConsignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: OrderShippingConsignment) {\n    return consignment.discounts\n    .filter(discount => !discount.code)\n    .reduce((total, discount) => total + discount.amount, 0);\n}\n","import React, { FunctionComponent } from 'react';\n\nconst OrderConfirmationSection: FunctionComponent<{ children?: React.ReactNode }> = ({ children }) => (\n    <section className=\"orderConfirmation-section\">{children}</section>\n);\n\nexport default OrderConfirmationSection;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface MandateTextComponentProps {\n    mandateText: {\n        [key: string]: string;\n    },\n    methodId: string;\n    providerId: string;\n}\n\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\n    mandateText,\n    providerId,\n    methodId,\n}) => {\n    if (!Object.keys(mandateText).length) {\n        return null;\n    }\n\n    return (\n        <ul data-test='order-confirmation-mandate-text-list'>\n            {Object.entries(mandateText).map((field, index) => {\n                return (\n                    <li data-test={`order-confirmation-mandate-text-list-item-${index}`} key={index}>\n                        <TranslatedString\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\n                        />:\n                        <b>\n                            {` ${field[1]}`}\n                        </b>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n","import { GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { MandateTextComponent } from './MandateTextComponent';\n\nexport interface PaymentsWithMandatesProps {\n    paymentsWithMandates: GatewayOrderPayment[];\n}\n\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\n    paymentsWithMandates,\n}) => <>\n    {paymentsWithMandates.map((payment) => {\n        if (payment?.mandate?.url) {\n            return (\n                <a\n                    data-test=\"order-confirmation-mandate-link-text\"\n                    href={payment.mandate.url}\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TranslatedString\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </a>\n            );\n        } else if (payment?.mandate?.id) {\n            return (\n                <p\n                    data-test=\"order-confirmation-mandate-id-text\"\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                >\n                    <TranslatedString\n                        data={{ mandate: payment.mandate.id }}\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </p>\n            );\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\n            return <MandateTextComponent\n                key='mandateTextList'\n                mandateText={payment.mandate.mandateText}\n                methodId={payment.methodId}\n                providerId={payment.providerId}\n            />\n        }\n    })}\n</>\n","import { GatewayOrderPayment, GiftCertificateOrderPayment, Order, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\n\nexport interface OrderStatusProps {\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber?: string;\n    order: Order;\n}\n\ntype PaymentWithMandate = GatewayOrderPayment &\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\n\nconst isPaymentWithMandate = (\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\n\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\n    config,\n    order,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\n\n    return (\n        <OrderConfirmationSection>\n            {order.orderId && (\n                <p data-test=\"order-confirmation-order-number-text\">\n                    <TranslatedHtml\n                        data={{ orderNumber: order.orderId }}\n                        id=\"order_confirmation.order_number_text\"\n                    />\n                </p>\n            )}\n\n            <p data-test=\"order-confirmation-order-status-text\">\n                <OrderStatusMessage\n                    config={config}\n                    orderNumber={order.orderId}\n                    orderStatus={order.status}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n            </p>\n            <PaymentsWithMandates\n                paymentsWithMandates={paymentsWithMandates}\n            />\n            {order.hasDigitalItems && (\n                <p data-test=\"order-confirmation-digital-items-text\">\n                    <TranslatedHtml\n                        id={\n                            order.isDownloadable\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\n                        }\n                    />\n                </p>\n            )}\n        </OrderConfirmationSection>\n    );\n};\n\ninterface OrderStatusMessageProps {\n    config: StoreConfig;\n    orderNumber: number;\n    orderStatus: string;\n    supportEmail?: string;\n    supportPhoneNumber?: string;\n}\n\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\n    config,\n    orderNumber,\n    orderStatus,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    switch (orderStatus) {\n        case 'MANUAL_VERIFICATION_REQUIRED':\n        case 'AWAITING_PAYMENT':\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\n\n        case 'PENDING':\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_pending_status_text\"\n                />\n            );\n\n        case 'INCOMPLETE':\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\n                return (\n                    <TranslatedHtml\n                        data={{ orderNumber, supportEmail }}\n                        id=\"order_confirmation.order_pending_status_text\"\n                    />\n                );\n            }\n\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_incomplete_status_text\"\n                />\n            );\n\n        default:\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\n                    id={\n                        supportPhoneNumber\n                            ? 'order_confirmation.order_with_support_number_text'\n                            : 'order_confirmation.order_without_support_number_text'\n                    }\n                />\n            );\n    }\n};\n\nexport default memo(OrderStatus);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPrint: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconPrint);\n","import { throttle } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconPrint } from '../ui/icon';\n\nexport interface PrintLinkProps {\n    className?: string;\n}\n\nconst PRINT_MODAL_THROTTLE = 500;\n\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\n    const handleClick = useCallback(\n        throttle(() => {\n            window.print();\n        }, PRINT_MODAL_THROTTLE),\n        [],\n    );\n\n    if (typeof window.print !== 'function') {\n        return null;\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            href=\"#\"\n            id=\"cart-print-link\"\n            onClick={preventDefault(handleClick)}\n        >\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\n        </a>\n    );\n};\n\nexport default memo(PrintLink);\n","import React, { FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    children: React.ReactNode;\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import {\n    CheckoutSelectors,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    Order,\n    ShopperConfig,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport {LazyContainer, LoadingSpinner, OrderConfirmationPageSkeleton} from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport { ErrorModal } from '../common/error';\nimport { isExperimentEnabled, retry } from '../common/utility';\nimport { getPasswordRequirementsFromConfig } from '../customer';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport {\n    CreatedCustomer,\n    GuestSignUpForm,\n    PasswordSavedSuccessAlert,\n    SignedUpSuccessAlert,\n    SignUpFormValues,\n} from '../guestSignup';\nimport {\n    AccountCreationFailedError,\n    AccountCreationRequirementsError,\n} from '../guestSignup/errors';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport getPaymentInstructions from './getPaymentInstructions';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport OrderStatus from './OrderStatus';\nimport PrintLink from './PrintLink';\nimport ThankYouHeader from './ThankYouHeader';\n\nconst OrderSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary\" */\n                './OrderSummary'\n            ),\n    ),\n);\n\nconst OrderSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary-drawer\" */\n                './OrderSummaryDrawer'\n            ),\n    ),\n);\n\nexport interface OrderConfirmationState {\n    error?: Error;\n    hasSignedUp?: boolean;\n    isSigningUp?: boolean;\n}\n\nexport interface OrderConfirmationProps {\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    errorLogger: ErrorLogger;\n    orderId: number;\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\ninterface WithCheckoutOrderConfirmationProps {\n    order?: Order;\n    config?: StoreConfig;\n    loadOrder(orderId: number): Promise<CheckoutSelectors>;\n    isLoadingOrder(): boolean;\n}\n\nclass OrderConfirmation extends Component<\n    OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\n    OrderConfirmationState\n> {\n    state: OrderConfirmationState = {};\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n\n    componentDidMount(): void {\n        const {\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            loadOrder,\n            orderId,\n            analyticsTracker\n        } = this.props;\n\n        loadOrder(orderId)\n            .then(({ data }) => {\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n                this.embeddedMessenger = messenger;\n\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n                messenger.postFrameLoaded({ contentId: containerId });\n\n                analyticsTracker.orderPurchased();\n            })\n            .catch(this.handleUnhandledError);\n    }\n\n    render(): ReactNode {\n        const { order, config, isLoadingOrder } = this.props;\n\n        if (!order || !config || isLoadingOrder()) {\n            return isMobileView() ? <LoadingSpinner isLoading={true} /> : (\n                <div\n                    className={classNames('layout optimizedCheckout-contentPrimary', {\n                        'is-embedded': isEmbedded(),\n                    })}\n                >\n                    <OrderConfirmationPageSkeleton />\n                    )\n                </div>\n            );\n        }\n\n        const paymentInstructions = getPaymentInstructions(order);\n        const {\n            storeProfile: { orderEmail, storePhoneNumber },\n            shopperConfig,\n            links: { siteLink },\n        } = config;\n\n        return (\n            <div\n                className={classNames('layout optimizedCheckout-contentPrimary', {\n                    'is-embedded': isEmbedded(),\n                })}\n            >\n                <div className=\"layout-main\">\n                    <div className=\"orderConfirmation\">\n                        <ThankYouHeader name={order.billingAddress.firstName} />\n\n                        <OrderStatus\n                            config={config}\n                            order={order}\n                            supportEmail={orderEmail}\n                            supportPhoneNumber={storePhoneNumber}\n                        />\n\n                        {paymentInstructions && (\n                            <OrderConfirmationSection>\n                                <div\n                                    dangerouslySetInnerHTML={{\n                                        __html: DOMPurify.sanitize(paymentInstructions),\n                                    }}\n                                    data-test=\"payment-instructions\"\n                                />\n                            </OrderConfirmationSection>\n                        )}\n\n                        {this.renderGuestSignUp({\n                            shouldShowPasswordForm: order.customerCanBeCreated,\n                            customerCanBeCreated: !order.customerId,\n                            shopperConfig,\n                        })}\n\n                        <div className=\"continueButtonContainer\">\n                            <form action={siteLink} method=\"get\" target=\"_top\">\n                                <Button type=\"submit\" variant={ButtonVariant.Secondary}>\n                                    <TranslatedString id=\"order_confirmation.continue_shopping\" />\n                                </Button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n\n                {this.renderOrderSummary()}\n                {this.renderErrorModal()}\n            </div>\n        );\n    }\n\n    private renderGuestSignUp({\n        customerCanBeCreated,\n        shouldShowPasswordForm,\n        shopperConfig,\n    }: {\n        customerCanBeCreated: boolean;\n        shouldShowPasswordForm: boolean;\n        shopperConfig: ShopperConfig;\n    }): ReactNode {\n        const { isSigningUp, hasSignedUp } = this.state;\n\n        const { order } = this.props;\n\n        return (\n            <>\n                {shouldShowPasswordForm && !hasSignedUp && (\n                    <GuestSignUpForm\n                        customerCanBeCreated={customerCanBeCreated}\n                        isSigningUp={isSigningUp}\n                        onSignUp={this.handleSignUp}\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\n                    />\n                )}\n\n                {hasSignedUp &&\n                    (order?.customerId ? <PasswordSavedSuccessAlert /> : <SignedUpSuccessAlert />)}\n            </>\n        );\n    }\n\n    private renderOrderSummary(): ReactNode {\n        const { order, config } = this.props;\n\n        if (!order || !config) {\n            return null;\n        }\n\n        const { currency, shopperCurrency, checkoutSettings } = config;\n\n        const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n            checkoutSettings,\n            'PROJECT-6643.enable_shipping_discounts_in_orders',\n        );\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer>\n                                <OrderSummaryDrawer\n                                    {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                                    headerLink={\n                                        <PrintLink className=\"modal-header-link cart-modal-link\" />\n                                    }\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <OrderSummary\n                                    headerLink={<PrintLink />}\n                                    {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        </aside>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private renderErrorModal(): ReactNode {\n        const { error } = this.state;\n\n        return (\n            <ErrorModal\n                error={error}\n                onClose={this.handleErrorModalClose}\n                shouldShowErrorCode={false}\n            />\n        );\n    }\n\n    private handleErrorModalClose: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleSignUp: (values: SignUpFormValues) => void = ({ password, confirmPassword }) => {\n        const { createAccount, config } = this.props;\n\n        const shopperConfig = config && config.shopperConfig;\n        const passwordRequirements =\n            (shopperConfig &&\n                shopperConfig.passwordRequirements &&\n                shopperConfig.passwordRequirements.error) ||\n            '';\n\n        this.setState({\n            isSigningUp: true,\n        });\n\n        createAccount({\n            password,\n            confirmPassword,\n        })\n            .then(() => {\n                this.setState({\n                    hasSignedUp: true,\n                    isSigningUp: false,\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error:\n                        error.status < 500\n                            ? new AccountCreationRequirementsError(error, passwordRequirements)\n                            : new AccountCreationFailedError(error),\n                    hasSignedUp: false,\n                    isSigningUp: false,\n                });\n            });\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        this.setState({ error });\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n}\n\nexport function mapToOrderConfirmationProps(\n    context: CheckoutContextProps,\n): WithCheckoutOrderConfirmationProps | null {\n    const {\n        checkoutState: {\n            data: { getOrder, getConfig },\n            statuses: { isLoadingOrder },\n        },\n        checkoutService,\n    } = context;\n\n    const config = getConfig();\n    const order = getOrder();\n\n    return {\n        config,\n        isLoadingOrder,\n        loadOrder: checkoutService.loadOrder,\n        order,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component, ReactNode } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider, StyleProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, CreatedCustomer, SignUpFormValues } from '../guestSignup';\n\nimport OrderConfirmation from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\n    private accountService = new AccountService();\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render(): ReactNode {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider checkoutService={this.checkoutService} errorLogger={createErrorLogger()}>\n                                <StyleProvider>\n                                    <OrderConfirmation\n                                        {...this.props}\n                                        createAccount={this.createAccount}\n                                        createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                        embeddedStylesheet={this.embeddedStylesheet}\n                                        errorLogger={this.errorLogger}\n                                    />\n                                </StyleProvider>\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\n        password,\n        confirmPassword,\n    }) => {\n        const { orderId } = this.props;\n\n        return this.accountService.create({\n            orderId,\n            newsletter: false,\n            password,\n            confirmPassword,\n        });\n    };\n}\n\nexport default OrderConfirmationApp;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport CheckoutContext from './CheckoutContext';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nexport interface CheckoutProviderState {\n    checkoutState: CheckoutSelectors;\n}\n\nexport default class CheckoutProvider extends Component<\n    CheckoutProviderProps,\n    CheckoutProviderState\n> {\n    state: Readonly<CheckoutProviderState>;\n\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne(\n        (checkoutService: CheckoutService, checkoutState: CheckoutSelectors) => {\n            return {\n                checkoutService,\n                checkoutState,\n            };\n        },\n    );\n\n    constructor(props: Readonly<CheckoutProviderProps>) {\n        super(props);\n\n        this.state = {\n            checkoutState: props.checkoutService.getState(),\n        };\n    }\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe((checkoutState) =>\n            this.setState({ checkoutState }),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { checkoutService, children } = this.props;\n        const { checkoutState } = this.state;\n\n        return (\n            <CheckoutContext.Provider value={this.getContextValue(checkoutService, checkoutState)}>\n                {children}\n            </CheckoutContext.Provider>\n        );\n    }\n}\n","import { CustomerPasswordRequirements, ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n    children?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '0%', top: '-300%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","import { createContext, useContext } from 'react';\n\nexport interface StyleContextProps {\n    newFontStyle: boolean;\n}\n\nconst StyleContext = createContext<StyleContextProps | undefined>(undefined);\n\nexport const useStyleContext = () => {\n    const styleContext = useContext(StyleContext);\n\n    if (!styleContext) {\n        throw new Error('useStyleContext must be used within an <StyleContextProvider>');\n    }\n\n    return styleContext;\n};\n\nexport default StyleContext;\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: any;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n}\n","import { Consignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: Consignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: Consignment) {\n    return consignment.discounts.reduce((discountTotal, discount) => {\n        return discount.type === 'AUTOMATIC' ? discountTotal + discount.amount : discountTotal;\n    }, 0);\n}\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst CheckoutButton: FunctionComponent<CheckoutButtonProps> = ({\n    checkoutService: { deinitializeCustomer, initializeCustomer },\n    checkoutButtonContainerClass,\n    containerId,\n    methodId,\n    onUnhandledError,\n    onWalletButtonClick,\n    additionalInitializationOptions,\n}) => {\n    const initializeCustomerStrategyOrThrow = async () => {\n        try {\n            await initializeCustomer({\n                methodId,\n                [methodId]: {\n                    container: containerId,\n                    onUnhandledError,\n                    onClick: () => onWalletButtonClick(methodId),\n                    ...additionalInitializationOptions,\n                },\n            });\n        } catch (error) {\n            if (typeof onUnhandledError === 'function' && error instanceof Error) {\n                onUnhandledError(error);\n            }\n        }\n    };\n\n    const deinitializeCustomerStrategyOrThrow = async () => {\n        try {\n            await deinitializeCustomer({ methodId });\n        } catch (error) {\n            if (typeof onUnhandledError === 'function' && error instanceof Error) {\n                onUnhandledError(error);\n            }\n        }\n    };\n\n    useEffect(() => {\n        void initializeCustomerStrategyOrThrow();\n\n        return () => {\n            void deinitializeCustomerStrategyOrThrow();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return <div className={checkoutButtonContainerClass} id={containerId} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    CheckoutButton,\n    [],\n);\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport { isHTMLElement } from '@bigcommerce/checkout/instrument-utils';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div');\n\n    if (container) {\n        const amazonButton = container.shadowRoot?.querySelector('.amazonpay-button-view1');\n\n        if (isHTMLElement(amazonButton)) {\n            amazonButton.style.height = '36px';\n\n            return;\n        }\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n};\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    AmazonPayV2Button,\n    [{ id: 'amazonpay' }],\n);\n","export default function isHTMLElement(element: unknown): element is HTMLElement {\n    return element instanceof HTMLElement;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst BigCommercePaymentsButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: props.onUnhandledError,\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    BigCommercePaymentsButton,\n    [{ id: 'bigcommerce_payments' }],\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst BigcommercePaymentsPayLaterButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: props.onUnhandledError,\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    BigcommercePaymentsPayLaterButton,\n    [{ id: 'bigcommerce_payments_paylater' }],\n);\n","import setPrototypeOf from '../setPrototypeOf';\n\nimport CustomError from './CustomError';\n\nexport default class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","export default function setPrototypeOf<T extends object>(object: T, prototype: object): T {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else if (hasProto(object)) {\n        // eslint-disable-next-line no-proto\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction hasProto(object: object): object is object & { __proto__: object } {\n    return '__proto__' in object;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    EmbeddedCheckoutUnsupportedError,\n    isEmbedded,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport './GooglePayButton.scss';\n\nconst GooglePayButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { language, onUnhandledError } = props;\n\n    if (isEmbedded()) {\n        onUnhandledError(\n            new EmbeddedCheckoutUnsupportedError(\n                language.translate('embedded_checkout.unsupported_error', {\n                    methods: 'googlepay',\n                }),\n            ),\n        );\n\n        return null;\n    }\n\n    return <CheckoutButton checkoutButtonContainerClass=\"google-pay-top-button\" {...props} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    GooglePayButton,\n    [\n        { id: 'googlepayadyenv2' },\n        { id: 'googlepayadyenv3' },\n        { id: 'googlepayauthorizenet' },\n        { id: 'googlepaybnz' },\n        { id: 'googlepaybraintree' },\n        { id: 'googlepaypaypalcommerce' },\n        { id: 'googlepaycheckoutcom' },\n        { id: 'googlepaycybersourcev2' },\n        { id: 'googlepayorbital' },\n        { id: 'googlepaystripe' },\n        { id: 'googlepaystripeupe' },\n        { id: 'googlepayworldpayaccess' },\n        { id: 'googlepaytdonlinemart' },\n        { id: 'googlepaystripeocs' },\n    ],\n);\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst PayPalCommerceCreditButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { onUnhandledError } = props;\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: onUnhandledError,\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    PayPalCommerceCreditButton,\n    [{ id: 'paypalcommercecredit' }],\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst PayPalCommerceButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { onUnhandledError } = props;\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: onUnhandledError,\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    PayPalCommerceButton,\n    [{ id: 'paypalcommerce' }],\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst StripeLinkV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        loadingContainerId: 'checkout-app',\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    StripeLinkV2Button,\n    [{ id: 'stripeocs' }],\n);\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    CCAvenueMars = 'ccavenuemars',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    BigCommercePaymentsPayPal = 'bigcommerce_payments_paypal',\n    BigCommercePaymentsPayLater = 'bigcommerce_payments_paylater',\n    BigCommercePaymentsCreditCards = 'bigcommerce_payments_creditcards',\n    BigCommercePaymentsAlternativeMethod = 'bigcommerce_payments_apms',\n    BigCommercePaymentsVenmo = 'bigcommerce_payments_venmo',\n    BigCommercePaymentsFastLane = 'bigcommerce_payments_fastlane',\n    BigCommercePaymentsGooglePay = 'googlepay_bigcommerce_payments',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    Ratepay = 'ratepay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeOCSGooglePay = 'googlepaystripeocs',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n    TdOnlineMartGooglePay = 'googlepaytdonlinemart',\n}\n\nexport default PaymentMethodId;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    additionalClassName?: string;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    additionalClassName,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label',\n            additionalClassName,\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import { CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName: string, methodId: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n    walletButtonClick(methodId: string): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    Component,\n    createElement,\n    FunctionComponent,\n    memo,\n    useCallback,\n    useMemo,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest}>{renderInnerField}</Field>;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId, meta }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    meta={meta}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\n    componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\n        const {\n            field: { value },\n            onChange = noop,\n        } = this.props;\n        const comparableValue = isDate(value) ? value.getTime() : value;\n        const comparablePrevValue = isDate(prevField.value)\n            ? prevField.value.getTime()\n            : prevField.value;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(value);\n        }\n    }\n\n    render() {\n        const { component = 'input', field, render } = this.props;\n\n        if (render) {\n            return (render as any)(this.props);\n        }\n\n        if (typeof component === 'string') {\n            return createElement(component as any, field);\n        }\n\n        return createElement(component as any, this.props);\n    }\n}\n\nexport default memo(BasicFormField);\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent, ReactNode, SyntheticEvent } from 'react';\n\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isHtmlError from './isHtmlError';\nimport isRequestError from './isRequestError';\n\nimport { CustomError } from './index';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError | CustomError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nexport default class ErrorModal extends PureComponent<ErrorModalProps> {\n    private aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    render(): ReactNode {\n        const { error } = this.props;\n\n        return (\n            <Modal\n                additionalModalClassName=\"modal--error\"\n                aria={this.aria}\n                footer={this.renderFooter()}\n                header={this.renderHeader()}\n                isOpen={!!error}\n                onRequestClose={this.handleOnRequestClose}\n            >\n                {this.renderBody()}\n            </Modal>\n        );\n    }\n\n    private renderHeader(): ReactNode {\n        const { error, title = error && isCustomError(error) && error.title } = this.props;\n\n        return (\n            <ModalHeader>\n                <IconError\n                    additionalClassName=\"icon--error modal-header-icon\"\n                    size={IconSize.Small}\n                />\n                <span aria-live=\"assertive\" role=\"alert\">\n                    {title || <TranslatedString id=\"common.error_heading\" />}\n                </span>\n            </ModalHeader>\n        );\n    }\n\n    private renderBody(): ReactNode {\n        const { error, message = error && error.message } = this.props;\n\n        return (\n            <>\n                {error && isHtmlError(error) &&\n                    <TranslatedHtml id={error.data.translationKey} />\n                }\n                {message && (\n                    <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                        {message}\n                    </p>\n                )}\n\n                <div className=\"optimizedCheckout-contentSecondary\">{this.renderErrorCode()}</div>\n            </>\n        );\n    }\n\n    private renderFooter(): ReactNode {\n        return (\n            <Button onClick={this.handleOnRequestClose} size={ButtonSize.Small}>\n                <TranslatedString id=\"common.ok_action\" />\n            </Button>\n        );\n    }\n\n    private renderErrorCode(): ReactNode {\n        const { error, shouldShowErrorCode = true } = this.props;\n\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    }\n\n    private handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        const { error, onClose = noop } = this.props;\n\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n}\n","import { CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\n\nexport default function isHtmlError(error: Error): error is CustomError {\n\n    return 'type' in error &&\n        error.type === 'custom' &&\n        'data' in error &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        'shouldBeTranslatedAsHtml' in error.data &&\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\n}\n","import { Address, FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(\n    address: Address,\n    formFields: FormField[],\n): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string, StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label, maxLength }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name}));\n                }\n\n                if ((name === 'address1' || name === 'address2') && maxLength) {\n                    schema[name] = schema[name]\n                        .max(maxLength, translate('max', { label, name, max: maxLength }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n                // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { ObjectSchema } from 'yup';\n\nimport {\n    FormFieldValues,\n    getFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_min_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalFastlane: FunctionComponent = () => (\n    <svg viewBox=\"0 0 101 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M.009 9.791 1.653.298C1.681.1 1.805 0 1.997 0H7.74c.22 0 .332.141.29.354l-.236 1.334c-.028.185-.152.298-.344.298H3.627l-.359 2.058h3.479c.22 0 .332.142.29.354l-.221 1.306C6.788 5.9 6.664 6 6.472 6H2.936l-.662 3.847c-.028.198-.152.298-.344.298H.298c-.22 0-.332-.142-.289-.354m6.78-1.49c0-1.844 1.905-2.468 3.906-2.71.234-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.035.269-1.23.796-.068.185-.18.27-.358.27H7.975c-.18 0-.304-.085-.304-.241 0-.044.014-.086.028-.128.441-1.334 1.67-2.186 3.507-2.186s2.843.71 2.843 2.428c0 .326-.04.739-.11 1.122l-.373 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.11.341-.318.341h-1.283c-.192 0-.304-.1-.304-.282 0-.17.04-.37.069-.554-.524.539-1.2.978-2.402.978-1.42 0-2.332-.725-2.332-1.986zm5.036-1.205.054-.256-.372.041c-.746.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.504-.78 1.725-1.773zm2.446 1.36c-.04-.17-.07-.297-.07-.438 0-.242.124-.313.318-.313h1.588c.192 0 .29.1.332.298.152.554.607.795 1.284.795.773 0 1.186-.326 1.186-.751 0-.369-.415-.54-1.104-.752l-.813-.256c-1.173-.369-2.14-.795-2.14-2.115 0-1.603 1.475-2.483 3.423-2.483 1.519 0 2.762.412 3.12 1.986.015.07.029.141.029.226 0 .142-.124.198-.318.198h-1.504c-.18 0-.276-.085-.36-.27-.165-.37-.538-.596-1.13-.596-.691 0-1.036.27-1.036.653s.332.554 1.284.852l.539.17c1.243.398 2.278.866 2.278 2.059 0 1.732-1.519 2.639-3.59 2.639-1.602 0-2.996-.468-3.313-1.902h-.005zm7.786.455c0-.269.04-.483.083-.725l.676-3.888h-.745c-.22 0-.332-.141-.29-.354l.166-.951c.029-.185.152-.298.344-.298h.8l.29-1.717c.028-.198.152-.298.344-.298h1.519c.22 0 .332.142.29.354l-.29 1.661h.966c.22 0 .332.142.29.356l-.166.951c-.029.186-.152.298-.345.298h-1.02l-.442 2.54c-.083.483-.152.851-.152 1.149 0 .468.152.624.47.624.124 0 .235-.015.318-.015.22 0 .29.17.249.383l-.152.922c-.055.356-.263.412-.76.412-1.297 0-2.443-.071-2.443-1.405m3.995.88 1.63-9.493C27.71.1 27.834 0 28.026 0h1.519c.22 0 .332.141.29.354l-1.643 9.493c-.028.198-.152.298-.344.298h-1.505c-.221 0-.332-.141-.29-.354zm3.147-1.49c0-1.844 1.905-2.468 3.906-2.71.235-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.034.269-1.229.796-.069.185-.18.27-.359.27h-1.407c-.18 0-.304-.085-.304-.241 0-.044.015-.086.028-.128.442-1.334 1.67-2.186 3.508-2.186 1.837 0 2.843.71 2.843 2.428 0 .326-.04.739-.112 1.122l-.372 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.111.341-.318.341h-1.284c-.192 0-.303-.1-.303-.282 0-.17.04-.37.068-.554-.524.539-1.2.978-2.401.978-1.422 0-2.333-.725-2.333-1.986V8.3m4.914-1.205.055-.256-.373.041c-.745.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.505-.78 1.725-1.773zm2.475 2.695 1.16-6.798c.028-.2.152-.298.344-.298h1.421c.22 0 .318.142.275.356l-.11.666c.357-.524 1.13-1.193 2.4-1.193 1.382 0 2.182.88 2.182 2.256 0 .269-.029.54-.083.866l-.731 4.2c-.028.198-.152.298-.344.298h-1.519c-.22 0-.332-.141-.29-.353l.566-3.25c.083-.482.11-.851.11-1.121 0-.766-.274-1.179-.95-1.179-.898 0-1.436.725-1.671 2.086l-.608 3.52c-.028.197-.152.297-.344.297h-1.519c-.22 0-.332-.141-.29-.353m8.063-2.824c0-2.384 1.588-4.456 4.35-4.456 2.14 0 3.45 1.22 3.45 3.42 0 .256-.014.483-.04.71-.028.2-.152.297-.344.297h-5.233c.028 1.051.496 1.689 1.56 1.689.538 0 .91-.198 1.214-.51a.47.47 0 0 1 .387-.186h1.67c.193 0 .305.057.305.2 0 .042-.015.1-.069.198-.705 1.25-1.836 2.071-3.671 2.071-2.098 0-3.576-1.178-3.576-3.434zm5.591-1.405c0-.908-.484-1.476-1.421-1.476-1.009 0-1.616.71-1.78 1.476h3.203zm34.293-.611-1.504 2.6-.764-2.579a.195.195 0 0 0-.185-.141h-1.355a.15.15 0 0 0-.14.195l1.367 4.343-1.236 2.046c-.06.099.009.227.123.227h1.462a.24.24 0 0 0 .206-.12l3.817-6.465a.148.148 0 0 0-.126-.225h-1.46a.23.23 0 0 0-.204.119zM62.935 12c-.135 0-.206-.063-.206-.168 0-.032.01-.074.03-.116l.66-1.613-1.947-5.21c-.03-.084-.052-.126-.052-.189 0-.105.083-.136.216-.136h.7c.135 0 .227.073.268.2l.937 2.816c.176.527.299.886.433 1.329h.02c.176-.517.268-.823.454-1.36l.957-2.785q.078-.202.278-.2h.629c.134 0 .227.041.227.147a.5.5 0 0 1-.052.169l-2.699 6.927c-.051.127-.134.19-.268.19h-.587zm-4.082-1.772c-.927 0-1.524-.422-1.833-.906v.537c0 .158-.083.243-.237.243h-.505c-.154 0-.237-.085-.237-.243V2.803c0-.158.083-.243.237-.243h.577c.154 0 .237.085.237.243v1.381c0 .38 0 .697-.01 1.086.308-.454.906-.875 1.761-.875 1.535 0 2.523 1.244 2.523 2.921s-1.03 2.911-2.513 2.911m-.205-.876c1.009 0 1.596-.801 1.596-2.025s-.597-2.035-1.606-2.035-1.606.855-1.606 2.035.597 2.025 1.617 2.025zm12.82-1.666c1.397 0 2.58-1.043 2.796-2.454.218-1.424-.87-2.666-2.408-2.67h-2.482a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.194zm1.1-2.52c-.082.527-.479.915-1.24.915h-.972l.294-1.916h.955c.788 0 1.044.475.962 1zm7.386-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.656 1.918 0 0-.638 1.929.803 2.988 0 0 1.336 1.019 2.842-.063l-.026.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.182.182 0 0 0-.178-.214zm-1.831 2.72c-.108.705-.675 1.225-1.4 1.225a1.3 1.3 0 0 1-.393-.058c-.537-.178-.844-.705-.757-1.28.108-.706.676-1.226 1.403-1.226q.216 0 .392.06c.54.178.843.707.755 1.28zm11.3.136c1.396 0 2.58-1.043 2.795-2.454.218-1.424-.87-2.666-2.408-2.67h-2.48a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.19v.002zm1.101-2.52c-.082.527-.478.915-1.239.915h-.972l.294-1.916h.955c.786 0 1.043.475.962 1zm7.387-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.655 1.918 0 0-.639 1.929.803 2.988 0 0 1.337 1.019 2.842-.063l-.027.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.183.183 0 0 0-.18-.214m-1.831 2.72c-.109.705-.674 1.225-1.4 1.225q-.216 0-.392-.058c-.537-.178-.845-.705-.757-1.28.108-.706.677-1.226 1.402-1.226q.216 0 .392.06c.537.178.843.707.756 1.28zm3.233-4.82L98.206 9.92a.18.18 0 0 0 .178.212h1.314a.2.2 0 0 0 .192-.169l1.107-7.19a.18.18 0 0 0-.178-.213h-1.315a.2.2 0 0 0-.191.17\"\n            fill=\"#333333\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalFastlane);\n","import React from 'react';\n\nimport { IconPayPalFastlane } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPayPalFastlaneLabel.scss';\n\nconst PoweredByPayPalFastlaneLabel = () => (\n    <div className=\"powered-by-paypal-fastlane\" data-test=\"paypal-fastlane-icon\">\n        <IconPayPalFastlane />\n    </div>\n);\n\nexport default PoweredByPayPalFastlaneLabel;\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    newFontStyle?: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, testId, newFontStyle = false, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                testId={testId}\n                type=\"checkbox\"\n            />\n            <Label additionalClassName={newFontStyle ? 'body-regular' : ''} htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport CheckboxInput from './CheckboxInput';\nimport FormFieldError from './FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n    testId?: string;\n    newFontStyle?: boolean;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n    testId,\n    newFontStyle = false,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                    newFontStyle={newFontStyle}\n                    testId={testId}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isPayPalFastlaneCustomer from './is-paypal-fastlane-customer';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\n\nconst usePayPalFastlaneAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getPaymentProviderCustomer } = checkoutState.data;\n    const paymentWithCustomCheckout: string =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const isPayPalFastlaneEnabled = isPayPalFastlaneMethod(paymentWithCustomCheckout);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const paymentProviderCustomer = getPaymentProviderCustomer() || undefined;\n    const paypalFastlaneCustomer = isPayPalFastlaneCustomer(paymentProviderCustomer)\n        ? paymentProviderCustomer\n        : {};\n\n    const customerAuthenticationState = paypalFastlaneCustomer.authenticationState;\n    const paypalFastlaneAddresses = paypalFastlaneCustomer.addresses || [];\n\n    const shouldShowPayPalFastlaneLabel =\n        paypalFastlaneAddresses.length > 0 && isPayPalFastlaneEnabled;\n\n    const shouldShowPayPalFastlaneShippingForm =\n        paypalFastlaneAddresses.length > 0 &&\n        customerAuthenticationState &&\n        customerAuthenticationState !== 'CANCELED' &&\n        customerAuthenticationState !== 'unrecognized';\n\n    return {\n        isPayPalFastlaneEnabled,\n        paypalFastlaneAddresses,\n        shouldShowPayPalFastlaneLabel,\n        shouldShowPayPalFastlaneShippingForm,\n    };\n};\n\nexport default usePayPalFastlaneAddress;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import { ComponentType } from 'react';\n\nimport { ResolvableComponent } from '.';\n\nexport default function isResolvableComponent<TProps, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n): Component is ResolvableComponent<TProps, TIdentifier> {\n    return 'resolveIds' in Component;\n}\n","import { ComponentType } from 'react';\n\nimport { isResolvableComponent } from '@bigcommerce/checkout/payment-integration-api';\n\ninterface ResolveResult<TProps> {\n    component: ComponentType<TProps>;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n): ComponentType<TProps> | undefined {\n    const results: Array<ResolveResult<TProps>> = [];\n\n    for (const [_, Component] of Object.entries(components)) {\n        if (!isResolvableComponent<TProps, TResolveId>(Component)) {\n            continue;\n        }\n\n        for (const resolverId of Component.resolveIds) {\n            const result = { component: Component, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .find((result) => result.matches > 0);\n\n    return matched?.component ?? results.find((result) => result.default)?.component;\n}\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\n\nexport enum ExtensionRegionContainer {\n    ShippingShippingAddressFormBefore = 'extension-region-shipping-shippingaddressform-before',\n    ShippingShippingAddressFormAfter = 'extension-region-shipping-shippingaddressform-after',\n    ShippingSelectedShippingMethod = 'extension-region-shipping-selectedshippingmethod',\n    PaymentPaymentMethodListBefore = 'extension-region-payment-paymentmethodlist-before',\n    SummaryAfter = 'extension-region-summary-after',\n    SummaryLastItemAfter = 'extension-region-summary-lastitem-after',\n}\n\nexport const extensionRegionToContainerMap: Record<ExtensionRegion, ExtensionRegionContainer | ''> =\n    {\n        [ExtensionRegion.ShippingShippingAddressFormBefore]:\n            ExtensionRegionContainer.ShippingShippingAddressFormBefore,\n        [ExtensionRegion.ShippingShippingAddressFormAfter]:\n            ExtensionRegionContainer.ShippingShippingAddressFormAfter,\n        [ExtensionRegion.ShippingSelectedShippingMethod]:\n            ExtensionRegionContainer.ShippingSelectedShippingMethod,\n        [ExtensionRegion.PaymentPaymentMethodListBefore]:\n            ExtensionRegionContainer.PaymentPaymentMethodListBefore,\n        [ExtensionRegion.SummaryAfter]: ExtensionRegionContainer.SummaryAfter,\n        [ExtensionRegion.SummaryLastItemAfter]: ExtensionRegionContainer.SummaryLastItemAfter,\n        [ExtensionRegion.GlobalWebWorker]: '',\n    };\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { extensionRegionToContainerMap } from './ExtensionRegionContainer';\nimport { useExtensions } from './useExtensions';\n\ninterface ExtensionProps {\n    region: ExtensionRegion;\n}\n\nexport const Extension = ({ region }: ExtensionProps): ReactNode | null => {\n    const {\n        checkoutState: {\n            data: { getExtensions, getConfig, getCheckout },\n        },\n    } = useCheckout();\n    const extensions = getExtensions();\n    const config = getConfig();\n    const checkout = getCheckout();\n    const { extensionService } = useExtensions();\n    const isRegionEnabled =\n        extensions && config && checkout && extensionService.isRegionEnabled(region);\n    const containerId = extensionRegionToContainerMap[region];\n\n    useEffect(() => {\n        if (isRegionEnabled) {\n            void extensionService.renderExtension(containerId, region);\n\n            return () => {\n                extensionService.removeListeners(region);\n            };\n        }\n    }, [containerId, isRegionEnabled, region]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (isRegionEnabled && containerId !== '') {\n        return <div id={containerId} />;\n    }\n\n    return null;\n};\n","import { useContext } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const useExtensions = () => {\n    const extensionContext = useContext(ExtensionContext);\n\n    if (!extensionContext) {\n        throw new Error('useExtensions must be used within an <ExtensionProvider>');\n    }\n\n    return extensionContext;\n};\n","import React, { FunctionComponent, memo } from 'react';\nimport Media, { MediaQueryObject, MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\ninterface QueryResults {\n    [key: string]: boolean;\n}\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: QueryResults) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n    newFontStyle?: boolean;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    newFontStyle = false,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n            { 'sub-header': newFontStyle && !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, { ComponentType, Context, FunctionComponent, memo, useContext, useMemo } from 'react';\nimport { Omit } from 'utility-types';\n\nimport { MatchedProps } from './InjectHoc';\nimport MappableInjectHoc, { MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","import { Component, ReactNode } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children: (props: { toggle: any; isOpen: boolean }) => ReactNode;\n}\n\nexport interface ToggleState {\n    isOpen: boolean;\n}\n\nexport default class Toggle extends Component<ToggleProps, ToggleState> {\n    constructor(props: ToggleProps) {\n        super(props);\n\n        this.state = { isOpen: !!props.openByDefault };\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { isOpen } = this.state;\n\n        return children({\n            isOpen,\n            toggle: this.toggle,\n        });\n    }\n\n    private toggle: (event: Event) => void = (event) => {\n        const { isOpen } = this.state;\n\n        event.preventDefault();\n\n        this.setState({ isOpen: !isOpen });\n    };\n}\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import {\n    Address,\n    AddressRequestBody,\n    BillingAddress,\n    CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalFastlaneAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalFastlaneAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalFastlaneAddress));\n\nconst isPayPalFastlaneAddress = (address: Address, addresses?: Address[]): boolean => {\n    if (!addresses || addresses.length === 0) {\n        return false;\n    }\n\n    return addresses.some((paypalFastlaneAddress) =>\n        isEqualToPayPalFastlaneAddress(address, paypalFastlaneAddress),\n    );\n};\n\nexport default isPayPalFastlaneAddress;\n","export default function getNestedValue(obj: any, path: string): any {\n  return path.split('.').reduce((acc, key) => acc && acc[key], obj);\n}\n","import { ErrorMessage, useFormikContext } from 'formik';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nimport { getNestedValue } from '../../common/utility';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const formikContext = useFormikContext<{ [key: string]: any }>();\n\n    const hasError = getNestedValue(formikContext?.errors, name) && getNestedValue(formikContext?.touched, name);\n\n    const renderMessage = useCallback(\n        (message: string) => (\n            <label\n                aria-live=\"polite\"\n                className=\"form-inlineMessage\"\n                htmlFor={name}\n                id={errorId}\n                role=\"alert\"\n            >\n                {message}\n            </label>\n        ),\n        [errorId, name],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({isSubmitted}) => (\n                <ul className=\"form-field-errors\" data-test={testId}>\n                    <li className=\"form-field-error\">\n                        {(hasError && isSubmitted) ? <ErrorMessage name={name} render={renderMessage} /> :\n                            <span\n                                aria-hidden=\"true\"\n                                className=\"is-srOnly\"\n                                id={errorId}\n                            />\n                        }\n                    </li>\n                </ul>\n            )}\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import React, { FunctionComponent, MouseEventHandler } from 'react';\n\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { useLocale } from './LocaleContext';\nimport { TranslatedStringProps } from './TranslatedString';\n\nexport type TranslatedLinkProps = TranslatedStringProps & {\n    testId?: string;\n    onClick: MouseEventHandler;\n};\n\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\n    const { language } = useLocale();\n    const translatedString = language.translate(id, data);\n    const parsedString = parseAnchor(translatedString);\n\n    return parsedString.length ? (\n        <>\n            {parsedString[0]}\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\n                {parsedString[1]}\n            </a>\n            {parsedString[2]}\n        </>\n    ) : (\n        <>{translatedString}</>\n    );\n};\n\nexport default TranslatedLink;\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\n\nexport interface StaticConsignmentItemListProps {\n    consignment: Consignment;\n    cart: Cart;\n}\n\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\n    cart,\n    consignment,\n}) => {\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticConsignment-items\">\n            <strong>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n            </strong>\n\n            <ul>\n                {lineItems.map((item) => (\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(StaticConsignmentItemList);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    BodlEventsPayload,\n    BodlService,\n    BraintreeAnalyticTrackerService,\n    CheckoutService,\n    createBodlService,\n    createBraintreeAnalyticTracker,\n    createPayPalCommerceAnalyticTracker,\n    createStepTracker,\n    PayPalCommerceAnalyticTrackerService,\n    StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n    const getBraintreeAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<BraintreeAnalyticTrackerService>(\n                createBraintreeAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n    const getPayPalCommerceAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<PayPalCommerceAnalyticTrackerService>(\n                createPayPalCommerceAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n        getBraintreeAnalyticTracker().customerPaymentMethodExecuted();\n        getPayPalCommerceAnalyticTracker().customerPaymentMethodExecuted();\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n        getBraintreeAnalyticTracker().selectedPaymentMethod(methodId);\n        getPayPalCommerceAnalyticTracker().selectedPaymentMethod(methodId);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n        getBraintreeAnalyticTracker().paymentComplete();\n        getPayPalCommerceAnalyticTracker().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const walletButtonClick = (methodId: string) => {\n        getBraintreeAnalyticTracker().walletButtonClick(methodId);\n        getPayPalCommerceAnalyticTracker().walletButtonClick(methodId);\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n        walletButtonClick,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","import { ExtensionAction, ExtensionActionType, ExtensionState } from './ExtensionProvider';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            if (typeof action.payload === 'boolean') {\n                return { ...state, isShowingLoadingIndicator: action.payload };\n            }\n\n            break;\n\n        case ExtensionActionType.RE_RENDER_SHIPPING_FORM:\n            if (typeof action.payload === 'number') {\n                return { ...state, shippingFormRenderTimestamp: action.payload };\n            }\n\n            break;\n\n        default:\n            return state;\n    }\n\n    return state;\n};\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingFormHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingForm> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingForm,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingStepHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingStep> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingStep,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionMessageType, ExtensionQueryType } from '@bigcommerce/checkout-sdk';\n\nimport { QueryHandler, QueryHandlerProps } from './QueryHandler';\n\nexport function createGetConsignmentHandler({\n    checkoutService,\n    extension,\n}: QueryHandlerProps): QueryHandler<ExtensionQueryType.GetConsignments> {\n    return {\n        queryType: ExtensionQueryType.GetConsignments,\n        handler: async (data) => {\n            if (!data.payload?.useCache) {\n                await checkoutService.loadCheckout();\n            }\n\n            const consignments = checkoutService.getState().data.getCheckout()?.consignments || [];\n\n            checkoutService.postMessageToExtension(extension.id, {\n                type: ExtensionMessageType.GetConsignments,\n                payload: {\n                    consignments,\n                },\n            });\n        },\n    };\n}\n","import {\n    CheckoutService,\n    Extension,\n    ExtensionCommandMap,\n    ExtensionQueryMap,\n    ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ErrorLevelType, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionAction } from './ExtensionProvider';\nimport { CommandHandler, QueryHandler } from './handler';\nimport * as commandHandlerFactories from './handler/commandHandlers';\nimport * as queryHandlerFactories from './handler/queryHandlers';\n\nexport class ExtensionService {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private dispatch: React.Dispatch<ExtensionAction>,\n        private errorLogger: ErrorLogger,\n    ) {}\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    preloadExtensions(): void {\n        const state = this.checkoutService.getState();\n        const extensions = state.data.getExtensions();\n        const cartId = state.data.getCart()?.id;\n        const parentOrigin = state.data.getConfig()?.links.siteLink;\n\n        if (!cartId || !parentOrigin) {\n            return;\n        }\n\n        extensions?.forEach((extension) => {\n            const url = new URL(extension.url);\n\n            url.searchParams.set('extensionId', extension.id);\n            url.searchParams.set('cartId', cartId);\n            url.searchParams.set('parentOrigin', parentOrigin);\n\n            const link = document.createElement('link');\n\n            link.rel = 'preload';\n            link.as = 'document';\n            link.href = url.toString();\n\n            const head = document.head;\n\n            head.appendChild(link);\n        });\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        try {\n            await this.checkoutService.renderExtension(container, region);\n\n            this.registerHandlers(extension);\n        } catch (error: unknown) {\n            if (error instanceof Error) {\n                this.errorLogger.log(\n                    error,\n                    { errorCode: 'checkoutExtension' },\n                    ErrorLevelType.Error,\n                    { extensionId: extension.id, region },\n                );\n            }\n        }\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        this.checkoutService.clearExtensionCache(region);\n\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(commandHandlerFactories).forEach((createCommandHandlerFactory) => {\n            const handlerFactory = createCommandHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n\n        Object.values(queryHandlerFactories).forEach((createQueryHandlerFactory) => {\n            const handlerFactory = createQueryHandlerFactory(handlerProps);\n\n            if (this.isQueryHandler(handlerFactory.queryType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionQuery(\n                        extension.id,\n                        handlerFactory.queryType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n\n    private isQueryHandler<T extends keyof ExtensionQueryMap>(\n        type: T,\n        handler: QueryHandler<any>,\n    ): handler is QueryHandler<T> {\n        return handler.queryType === type;\n    }\n}\n","import { CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useReducer } from 'react';\n\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n    shippingFormRenderTimestamp: undefined | number;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean | number;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n    RE_RENDER_SHIPPING_FORM,\n}\n\nexport interface ExtensionProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n    errorLogger: ErrorLogger;\n}\n\nexport const ExtensionProvider = ({\n    checkoutService,\n    children,\n    errorLogger,\n}: ExtensionProviderProps) => {\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n        shippingFormRenderTimestamp: undefined,\n    });\n    const extensionService = new ExtensionService(checkoutService, dispatch, errorLogger);\n\n    const extensionValues = {\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n    newFontStyle?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            newFontStyle = false,\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n                { 'floating-form-field-input': newFontStyle && isFloatingLabelEnabled },\n                { 'body-regular': newFontStyle && !isFloatingLabelEnabled },\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import {\n    CardInstrument,\n    CustomerAddress,\n    PaymentProviderCustomer,\n} from '@bigcommerce/checkout-sdk';\n\ninterface PayPalFastlaneCustomer {\n    authenticationState?: string;\n    addresses?: CustomerAddress[];\n    instruments?: CardInstrument[];\n}\n\nexport default function isPayPalFastlaneCustomer(\n    customer?: PaymentProviderCustomer,\n): customer is PayPalFastlaneCustomer {\n    if (!customer) {\n        return false;\n    }\n\n    return (\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\n    );\n}\n","import React, { FunctionComponent, ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n    <ErrorBoundary\n        fallback={\n            <div className=\"lazyContainer-error\">\n                <TranslatedString id=\"common.unstable_network_error\" />\n            </div>\n        }\n        filter={filterError}\n    >\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n    </ErrorBoundary>\n);\n\nexport default LazyContainer;\n","import {\n    CheckoutPayment,\n    GiftCertificateOrderPayment,\n    OrderPayment,\n} from '@bigcommerce/checkout-sdk';\n\nexport default function isGiftCertificatePayment(\n    payment: OrderPayment | CheckoutPayment,\n): payment is GiftCertificateOrderPayment {\n    return payment.providerId === 'giftcertificate';\n}\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\ninterface ModalHeaderProps {\n    children?: ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import { kebabCase } from 'lodash';\n\nexport default function getAppliedStyles(\n    element: HTMLElement,\n    properties: string[],\n    pseudoElementSelector?: string,\n): { [key: string]: string } {\n    const declaration = window.getComputedStyle(element, pseudoElementSelector);\n\n    return properties.reduce(\n        (result, propertyName) => ({\n            ...result,\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\n        }),\n        {},\n    );\n}\n","import { CheckoutPayment, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\n    return payment.providerId === 'storecredit';\n}\n","import classNames from 'classnames';\nimport React, { FieldsetHTMLAttributes, forwardRef, ReactNode, Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBigCommercePaymentsFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.BigCommercePaymentsCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BigCommercePaymentsFastLane\n    );\n};\n\nexport default isBigCommercePaymentsFastlaneMethod;\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","import React, { FunctionComponent } from 'react';\n\nimport { CartSummarySkeleton } from './CartSummarySkeleton';\n\nconst OrderConfirmationPageSkeleton: FunctionComponent = () => (\n    <>\n        <div className=\"layout-main\" data-test=\"order-confirmation-page-skeleton\">\n            <div className=\"order-confirmation-page-skeleton\">\n                <div className=\"thankyou\" />\n                <div className=\"line-1\" />\n                <div className=\"line-2\" />\n                <div className=\"continue\" />\n            </div>\n        </div>\n        <CartSummarySkeleton />\n    </>\n);\n\nexport default OrderConfirmationPageSkeleton;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref, TextareaHTMLAttributes } from 'react';\n\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n    additionalClassName?: string;\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextArea = forwardRef(\n    (\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\n        ref: Ref<HTMLTextAreaElement>,\n    ) => {\n        return (\n            <textarea\n                {...rest}\n                className={\n                    className ||\n                    classNames(\n                        { 'floating-textarea': isFloatingLabelEnabled },\n                        'form-input',\n                        'optimizedCheckout-form-input',\n                        additionalClassName,\n                    )\n                }\n                data-test={testId}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default TextArea;\n","import { Address, Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\ninterface LocalizedGeography {\n    localizedCountry: string;\n    localizedProvince: string;\n}\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LoadingOverlayProps {\n    isLoading: boolean;\n    hideContentWhenLoading?: boolean;\n    unmountContentWhenLoading?: boolean;\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n    children,\n    hideContentWhenLoading,\n    loadingSkeleton,\n    unmountContentWhenLoading,\n    isLoading,\n}) => {\n    const loadingUI = loadingSkeleton || <LoadingSpinner isLoading={true} />;\n\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\n        return (\n            <>\n                {isLoading ? loadingUI : null}\n                {unmountContentWhenLoading && isLoading ? null : (\n                    <div\n                        style={{\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n                        }}\n                    >\n                        {children}\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"loadingOverlay-container\">\n            {children}\n            {isLoading && (\n                <div\n                    className=\"loadingOverlay optimizedCheckout-overlay\"\n                    data-test=\"loading-overlay\"\n                />\n            )}\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import React, { ReactNode } from 'react';\n\nimport { useCheckout } from './CheckoutContext';\nimport StyleContext from './StyleContext';\n\nexport interface StyleProviderProps {\n    children?: ReactNode;\n}\n\nexport const StyleProvider = ({ children }: StyleProviderProps) => {\n    const {\n        checkoutState: {\n            data: { getConfig },\n        },\n    } = useCheckout();\n\n    const config = getConfig();\n\n    let newFontStyle = false;\n\n    if (config) {\n        newFontStyle = Boolean(\n            config.checkoutSettings.features['CHECKOUT-7962.update_font_style_on_checkout_page'] ??\n                true,\n        );\n    }\n\n    return <StyleContext.Provider value={{ newFontStyle }}>{children}</StyleContext.Provider>;\n};\n","enum DynamicFormFieldType {\n    telephone = 'tel',\n    dropdown = 'dropdown',\n    number = 'number',\n    password = 'password',\n    checkbox = 'checkbox',\n    multiline = 'multiline',\n    date = 'date',\n    radio = 'radio',\n    text = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import { Address, CheckoutPayment, FormField } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nexport interface StaticBillingAddressProps {\n    address: Address;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n    fields: FormField[];\n    payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY }) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n        return (\n            <p>\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\n            </p>\n        );\n    }\n\n    return (\n        <>\n            <StaticAddress address={address} type={AddressType.Billing} />\n\n            {showPayPalFastlaneLabel && <PoweredByPayPalFastlaneLabel />}\n        </>\n    );\n};\n\nexport function mapToStaticBillingAddressProps(\n    { checkoutState }: CheckoutContextProps,\n    { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n    const {\n        data: { getBillingAddressFields, getCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n\n    return {\n        fields: getBillingAddressFields(address.countryCode),\n        payments: checkout && checkout.payments,\n    };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import {\n    Address,\n    CheckoutSelectors,\n    Country,\n    ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { localizeAddress } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps , useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n    address: Address;\n    type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n    countries?: Country[];\n}\n\nconst StaticAddress: FunctionComponent<\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\n    > = ({\n        countries,\n        address: addressWithoutLocalization,\n    }) => {\n\n    const { newFontStyle } = useStyleContext();    \n\n    const address = localizeAddress(addressWithoutLocalization, countries);\n    const isValid = !isEmpty(address);\n\n    return !isValid ? null : (\n        <div className=\"vcard checkout-address--static\" data-test=\"static-address\">\n            {(address.firstName || address.lastName) && (\n                <p className={classNames('fn address-entry',\n                    { 'body-regular': newFontStyle })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n            )}\n\n            {(address.phone || address.company) && (\n                <p className={classNames('address-entry',\n                    { 'body-regular': newFontStyle })}>\n                    <span className=\"company-name\">{`${address.company} `}</span>\n                    <span className=\"tel\">{address.phone}</span>\n                </p>\n            )}\n\n            <div className=\"adr\">\n                <p className={classNames('street-address address-entry',\n                    { 'body-regular': newFontStyle })}>\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\n                    {address.address2 && (\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\n                    )}\n                </p>\n\n                <p className={classNames('address-entry',\n                    { 'body-regular': newFontStyle })}>\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n                    {address.localizedProvince && (\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\n                    )}\n                    {address.postalCode && (\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\n                    )}\n                    {address.localizedCountry && (\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport function mapToStaticAddressProps(\n    context: CheckoutContextProps,\n    { type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n    const {\n        checkoutState: {\n            data: { getBillingCountries, getShippingCountries },\n        },\n    } = context;\n\n    return {\n        countries: type === AddressType.Billing\n            ? getBillingCountries()\n            : getShippingCountries(),\n    };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","import { CurrencyService, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","import { Cart } from '@bigcommerce/checkout-sdk';\n\n/**\n * Minimum charge amounts due to the Stripe documentation\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\n */\nenum stripeLinkMinAmount {\n    'USD' = 0.5,\n    'AED' = 2,\n    'AUD' = 0.5,\n    'BGN' = 1,\n    'BRL' = 0.5,\n    'CAD' = 0.5,\n    'CHF' = 0.5,\n    'CZK' = 15,\n    'DKK' = 2.5,\n    'EUR' = 0.5,\n    'GBP' = 0.3,\n    'HKD' = 4,\n    'HUF' = 175,\n    'INR' = 0.5,\n    'JPY' = 50,\n    'MXN' = 10,\n    'MYR' = 2,\n    'NOK' = 3,\n    'NZD' = 0.5,\n    'PLN' = 2,\n    'RON' = 2,\n    'SEK' = 3,\n    'SGD' = 0.5,\n    'THB' = 10,\n}\n\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\n    return code in stripeLinkMinAmount;\n};\n\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\n    const {\n        currency: { code },\n        cartAmount,\n    } = cart;\n\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default shouldUseStripeLinkByMinimumAmount;\n","export default function parseAnchor(text: string): string[] {\n    const div = document.createElement('div');\n\n    div.innerHTML = text;\n\n    const anchor = div.querySelector('a');\n\n    if (!anchor) {\n        return [];\n    }\n\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\n\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\n}\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","import { LineItem } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\n}\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { MultiShippingTableItemWithType } from './MultishippingType';\n\nexport interface ConsignmentLineItemDetailProps {\n    lineItems: MultiShippingTableItemWithType[] | PhysicalItem[];\n    isMultiShippingSummary?: boolean;\n}\n\nconst renderProductOptionDetails = (item: MultiShippingTableItemWithType | PhysicalItem) => {\n    if (!item.options || !item.options.length) {\n        return null;\n    }\n\n    return (<span className=\"line-item-options\">{` - ${item.options.map(option => option.value).join(' / ')}`}</span>);\n}\n\nexport const renderItemContent = (item: MultiShippingTableItemWithType | PhysicalItem, newFontStyle = false, isMultiShippingSummary = false) => {\n    return <span\n        className={classNames(\n            { 'body-regular': newFontStyle && !isMultiShippingSummary },\n            { 'sub-text': newFontStyle && isMultiShippingSummary },)\n        }>\n        <span className={classNames(\n            { 'body-bold': newFontStyle && !isMultiShippingSummary },\n            { 'sub-text-bold': newFontStyle && isMultiShippingSummary },)\n        }>\n            {`${item.quantity} x `}\n        </span>\n        {item.name}\n        {renderProductOptionDetails(item)}\n    </span>;\n};\n\nconst ConsignmentLineItemDetail: FunctionComponent<ConsignmentLineItemDetailProps> = ({\n    lineItems,\n    isMultiShippingSummary = false,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    return (\n        <ul className=\"consignment-line-item-list\">\n        {lineItems.map((item) => (\n            <li key={item.id}>\n                {renderItemContent(item, newFontStyle, isMultiShippingSummary)}\n            </li>\n        ))}\n    </ul>\n    );\n};\n\nexport default memo(ConsignmentLineItemDetail);\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import isBigCommercePaymentsFastlaneMethod from './is-bigcommerce-payments-fastlane-method';\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\n\nconst isPaypalFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        isBraintreeFastlaneMethod(methodId) ||\n        isPayPalCommerceFastlaneMethod(methodId) ||\n        isBigCommercePaymentsFastlaneMethod(methodId)\n    );\n};\n\nexport default isPaypalFastlaneMethod;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPayPalCommerceFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.PaypalCommerceCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\n    );\n};\n\nexport default isPayPalCommerceFastlaneMethod;\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import { createLanguageService, LanguageConfig, LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import React, { FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n    isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div\n            aria-busy=\"true\"\n            className=\"loadingSpinner loadingOverlay-container\"\n            role=\"status\"\n            style={{ height: 100 }}\n        >\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n        </div>\n    );\n};\n\nexport default memo(LoadingSpinner);\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBraintreeFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isBraintreeFastlaneMethod;\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isExperimentEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n    experimentName: string,\n): boolean {\n    return Boolean(checkoutSettings?.features[experimentName] ?? true);\n}\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import { createContext } from 'react';\n\nimport { ExtensionState } from './ExtensionProvider';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionContextProps {\n    extensionService: ExtensionService;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children?: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children?: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import { CheckoutService, createCurrencyService, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nexport interface LocaleProviderState {\n    config?: StoreConfig;\n}\n\nclass LocaleProvider extends Component<LocaleProviderProps> {\n    state: Readonly<LocaleProviderState> = {};\n\n    private languageService = getLanguageService();\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne((config?: StoreConfig) => {\n        return {\n            currency: config ? createCurrencyService(config) : undefined,\n            date: config\n                ? {\n                      inputFormat: config.inputDateFormat,\n                  }\n                : undefined,\n            language: this.languageService,\n        };\n    });\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                this.setState({ config: data.getConfig() });\n            },\n            ({ data }) => data.getConfig(),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { config } = this.state;\n\n        return (\n            <LocaleContext.Provider value={this.getContextValue(config)}>\n                {children}\n            </LocaleContext.Provider>\n        );\n    }\n}\n\nexport default LocaleProvider;\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nexport default PaymentMethodId;\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface RadioInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    newFontStyle?: boolean;\n}\n\nconst RadioInput = forwardRef(\n    (\n        { additionalClassName, label, value, checked, id, newFontStyle = false, ...rest }: RadioInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                checked={checked}\n                className={classNames(\n                    'form-radio',\n                    'optimizedCheckout-form-radio',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"radio\"\n                value={value}\n            />\n            <Label additionalClassName={newFontStyle ? 'body-regular' : ''} htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default RadioInput;\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isDate, noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport ReactDatePicker from 'react-datepicker';\n\nimport { withDate, WithDateProps } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown } from '../icon';\n\nimport CheckboxInput from './CheckboxInput';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport { InputProps } from './Input';\nimport RadioInput from './RadioInput';\nimport TextArea from './TextArea';\nimport TextInput from './TextInput';\n\nexport interface DynamicInputProps extends InputProps {\n    id: string;\n    additionalClassName?: string;\n    value?: string | string[];\n    rows?: number;\n    fieldType?: DynamicFormFieldType;\n    options?: FormFieldItem[];\n    isFloatingLabelEnabled?: boolean;\n    newFontStyle?: boolean;\n}\n\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\n    additionalClassName,\n    date,\n    fieldType,\n    id,\n    name,\n    onChange = noop,\n    options,\n    placeholder,\n    isFloatingLabelEnabled,\n    newFontStyle = false,\n    value,\n    ...rest\n}) => {\n    const { inputFormat } = date;\n    const handleDateChange = useCallback(\n        (dateValue: any, event: any) =>\n            onChange({\n                ...event,\n                target: {\n                    name,\n                    value: dateValue,\n                },\n            }),\n        [onChange, name],\n    );\n\n    switch (fieldType) {\n        case DynamicFormFieldType.dropdown:\n            return (\n                <>\n                    <div\n                        className={classNames(\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\n                        )}>\n                        <IconChevronDown />\n                    </div>\n                    <select\n                        {...(rest as any)}\n                        className={classNames(\n                            { 'floating-select': isFloatingLabelEnabled },\n                            'form-select optimizedCheckout-form-select',\n                            { 'floating-form-field-input': newFontStyle },\n                        )}\n                        data-test={`${id}-select`}\n                        id={id}\n                        name={name}\n                        onChange={onChange}\n                        value={value === null ? '' : value}\n                    >\n                        {placeholder && <option value=\"\">{placeholder}</option>}\n                        {options &&\n                            options.map(({ label, value: optionValue }) => (\n                                <option key={optionValue} value={optionValue}>\n                                    {label}\n                                </option>\n                            ))}\n                    </select>\n                </>\n            );\n\n        case DynamicFormFieldType.radio:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <RadioInput\n                            {...rest}\n                            checked={optionValue === value}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            newFontStyle={newFontStyle}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-radio`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.checkbox:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <CheckboxInput\n                            {...rest}\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            newFontStyle={newFontStyle}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-checkbox`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.date:\n            return (\n                <ReactDatePicker\n                    {...(rest as any)}\n                    autoComplete=\"off\"\n                    // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\n                    // https://github.com/Hacker0x01/react-datepicker/issues/1357\n                    // onChangeRaw={ rest.onChange }\n                    calendarClassName=\"optimizedCheckout-contentPrimary\"\n                    className={classNames('form-input optimizedCheckout-form-input', {\n                        'floating-input': isFloatingLabelEnabled,\n                        'floating-form-field-input': newFontStyle,\n                    })}\n                    dateFormat={inputFormat}\n                    maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\n                    minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\n                    name={name}\n                    onChange={handleDateChange}\n                    placeholderText={inputFormat.toUpperCase()}\n                    popperClassName=\"optimizedCheckout-contentPrimary\"\n                    selected={isDate(value) ? value : undefined}\n                />\n            );\n\n        case DynamicFormFieldType.multiline:\n            return (\n                <TextArea\n                    {...(rest as any)}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    newFontStyle={newFontStyle}\n                    onChange={onChange}\n                    testId={`${id}-text`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n\n        default:\n            return (\n                <TextInput\n                    {...rest}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    newFontStyle={newFontStyle}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    testId={`${id}-${\n                        fieldType === DynamicFormFieldType.password ? 'password' : 'text'\n                    }`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n    }\n};\n\nexport default memo(withDate(DynamicInput));\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, MouseEvent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './MultiCheckboxControl.scss';\n\nexport interface MultiCheckboxControlProps {\n    testId?: string;\n    onSelectedAll(): void;\n    onSelectedNone(): void;\n    newFontStyle?: boolean;\n}\n\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\n    testId,\n    onSelectedAll,\n    onSelectedNone,\n    newFontStyle = false,\n}) => {\n    const handleSelectAllClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedAll();\n        },\n        [onSelectedAll],\n    );\n\n    const handleSelectNoneClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedNone();\n        },\n        [onSelectedNone],\n    );\n\n    return (\n        <ul className={classNames('multiCheckbox--controls',\n            { 'body-regular': newFontStyle })}>\n            <li className=\"multiCheckbox--control\">\n                <TranslatedString id=\"address.select\" />\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-all-button`}\n                    href=\"#\"\n                    onClick={handleSelectAllClick}\n                >\n                    <TranslatedString id=\"address.select_all\" />\n                </a>\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-none-button`}\n                    href=\"#\"\n                    onClick={handleSelectNoneClick}\n                >\n                    <TranslatedString id=\"address.select_none\" />\n                </a>\n            </li>\n        </ul>\n    );\n};\n\nexport default memo(MultiCheckboxControl);\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport { FieldArray, FieldArrayRenderProps, getIn } from 'formik';\nimport { difference, kebabCase, noop, pick } from 'lodash';\nimport React, { ChangeEvent, FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormFieldContainer from './FormFieldContainer';\nimport FormFieldError from './FormFieldError';\nimport MultiCheckboxControl from './MultiCheckboxControl';\n\nexport interface CheckboxGroupFormFieldProps {\n    id: string;\n    label: ReactNode;\n    name: string;\n    options: FormFieldItem[];\n    onChange?(values: string[]): void;\n    newFontStyle?: boolean;\n}\n\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\n\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\n    form: { values, errors },\n    id,\n    label,\n    name,\n    onChange = noop,\n    options,\n    push,\n    remove,\n    newFontStyle,\n}) => {\n    const handleSelectAll = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        difference(\n            options.map(({ value }) => value),\n            checkedValues,\n        ).forEach((val) => push(val));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, options, push, values]);\n\n    const handleSelectNone = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        checkedValues.forEach(() => remove(0));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, remove, values]);\n\n    const handleInputChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const checkedValues: string[] = getIn(values, name) || [];\n            const { value, checked } = event.target;\n\n            if (checked) {\n                push(value);\n            } else {\n                remove(checkedValues.indexOf(value));\n            }\n\n            onChange(getIn(values, name));\n        },\n        [name, onChange, push, remove, values],\n    );\n\n    return (\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\n            {label}\n\n            {options.length > 1 && (\n                <MultiCheckboxControl\n                    newFontStyle={newFontStyle}\n                    onSelectedAll={handleSelectAll}\n                    onSelectedNone={handleSelectNone}\n                    testId={id}\n                />\n            )}\n\n            <DynamicInput\n                fieldType={DynamicFormFieldType.checkbox}\n                id={id}\n                name={name}\n                newFontStyle={newFontStyle}\n                onChange={handleInputChange}\n                options={options}\n                value={getIn(values, name) || []}\n            />\n\n            <FormFieldError\n                errorId={`${id ?? name}-field-error-message`}\n                name={name}\n                testId={`${kebabCase(name)}-field-error-message`}\n            />\n        </FormFieldContainer>\n    );\n};\n\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\n    id,\n    label,\n    name,\n    onChange,\n    options,\n    newFontStyle,\n}) => {\n    const renderField = useCallback(\n        (renderProps: FieldArrayRenderProps) => (\n            <MultiCheckboxFormField\n                id={id}\n                label={label}\n                name={name}\n                newFontStyle={newFontStyle}\n                onChange={onChange}\n                options={options}\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\n            />\n        ),\n        [id, label, name, onChange, options],\n    );\n\n    return <FieldArray name={name} render={renderField} />;\n};\n\nexport default memo(CheckboxGroupFormField);\n","import { FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FieldProps } from 'formik';\nimport { includes } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormField from './FormField';\nimport Label from './Label';\n\nexport interface DynamicFormFieldOption {\n    code: string;\n    name: string;\n}\n\nexport interface DynamicFormFieldProps {\n    field: FormFieldType;\n    inputId?: string;\n    extraClass?: string;\n    autocomplete?: string;\n    parentFieldName?: string;\n    placeholder?: string;\n    label?: ReactNode;\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string | string[]): void;\n    newFontStyle?: boolean;\n}\n\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\n    field: {\n        fieldType,\n        type,\n        secret,\n        name,\n        label: fieldLabel,\n        required,\n        options,\n        max,\n        min,\n        maxLength,\n    },\n    parentFieldName,\n    onChange,\n    placeholder,\n    inputId,\n    autocomplete,\n    label,\n    extraClass,\n    isFloatingLabelEnabled,\n    newFontStyle = false,\n}) => {\n    const fieldInputId = inputId || name;\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\n    const isFloatingLabelSupportedFieldType = Boolean(\n        isFloatingLabelEnabled &&\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\n                !fieldType),\n    );\n    const labelComponent = useMemo(\n        () => {\n            let labelClassName = '';\n\n            if (newFontStyle) {\n                if (isFloatingLabelSupportedFieldType) {\n                    labelClassName = 'floating-form-field-label';\n                } else {\n                    labelClassName = 'body-medium';\n                }\n            }\n\n            return (\n                <Label\n                    additionalClassName={labelClassName}\n                    htmlFor={fieldInputId}\n                    id={`${fieldInputId}-label`}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                >\n                    {label || fieldLabel}\n                    {!required && (\n                        <>\n                            {' '}\n                            <small className=\"optimizedCheckout-contentSecondary\">\n                                <TranslatedString id=\"common.optional_text\" />\n                            </small>\n                        </>\n                    )}\n                </Label>\n            )\n        },\n        [fieldInputId, fieldLabel, required, isFloatingLabelSupportedFieldType, label],\n    );\n\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\n        if (fieldType === 'text') {\n            if (type === 'integer') {\n                return DynamicFormFieldType.number;\n            }\n\n            if (includes(name, 'phone') || includes(name, 'tel')) {\n                return DynamicFormFieldType.telephone;\n            }\n\n            return secret ? DynamicFormFieldType.password : DynamicFormFieldType.text;\n        }\n\n        return fieldType as DynamicFormFieldType;\n    }, [fieldType, type, secret, name]);\n\n    const renderInput = useCallback(\n        ({ field }: FieldProps<string>) => (\n            <DynamicInput\n                {...field}\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\n                autoComplete={autocomplete}\n                fieldType={dynamicFormFieldType}\n                id={fieldInputId}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                max={max}\n                maxLength={maxLength || undefined}\n                min={min}\n                newFontStyle={newFontStyle}\n                options={options && options.items}\n                placeholder={placeholder || (options && options.helperLabel)}\n                rows={options && (options as any).rows}\n            />\n        ),\n        [\n            fieldInputId,\n            max,\n            maxLength,\n            min,\n            options,\n            placeholder,\n            dynamicFormFieldType,\n            autocomplete,\n        ],\n    );\n\n    return (\n        <div\n            className={classNames(\n                'dynamic-form-field',\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\n                extraClass,\n            )}\n        >\n            {fieldType === DynamicFormFieldType.checkbox ? (\n                <CheckboxGroupFormField\n                    id={fieldInputId}\n                    label={labelComponent}\n                    name={fieldName}\n                    newFontStyle={newFontStyle}\n                    onChange={onChange}\n                    options={(options && options.items) || []}\n                />\n            ) : (\n                <FormField\n                    id={fieldInputId}\n                    input={renderInput}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default memo(DynamicFormField);\n","import { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithDateProps {\n    date: {\n        inputFormat: string;\n    };\n}\n\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'withDate',\n    pickProps: (value, key) => key === 'date' && !!value,\n});\n\nexport default withDate;\n","import React, { FunctionComponent } from 'react';\n\nexport const CartSummarySkeleton: FunctionComponent = () => (\n    <aside className=\"layout-cart\">\n        <article className=\"cart optimizedCheckout-orderSummary checkout-page-skeleton checkout-page-skeleton--cart\">\n            <div className=\"item--first\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n            </div>\n            <div className=\"item--product\">\n                <div className=\"figure\" />\n                <div className=\"name\" />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item--coupon\">\n                <div />\n            </div>\n            <div className=\"item--total\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item--tax\">\n                <div />\n            </div>\n            <div className=\"item--last\">\n                <div />\n                <div />\n            </div>\n        </article>\n    </aside>\n);\n"],"names":["IconSize","withIconContainer","OriginalComponent","memo","additionalClassName","size","testId","rest","className","Small","Large","Medium","A","displayNamePrefix","hasSelectedShippingOptions","consignments","length","every","consignment","selectedShippingOption","id","type","data","message","title","name","Error","captureStackTrace","CustomError","stack","setDefaultValues","defaultError","defaultTitle","this","ref","useRef","containerRef","createRef","focusOnError","current","erroredFormField","querySelector","join","focus","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","useCallback","memoizeOne","setSubmitted","setTimeout","renderContent","noValidate","onSubmitCapture","values","navigateToOrderConfirmation","orderId","url","toString","window","location","pathname","replace","Promise","noop","mapCustomFormFieldsFromFormValues","customFieldsObject","customFields","forIn","value","key","fieldValue","isDate","padMonth","padStart","getMonth","padDay","getDate","getFullYear","push","fieldId","ErrorLevelType","height","role","viewBox","width","xmlns","d","fill","state","getDerivedStateFromError","error","componentDidCatch","props","filter","logger","log","render","children","fallback","Component","FormContext","createContext","isSubmitted","FormProvider","initialIsSubmitted","useState","contextValue","useMemo","Provider","isFunction","hasUnassignedLineItems","lineItems","reduce","total","lineItemIds","physicalItems","item","addedByPromotion","memoize","formFields","translate","schema","maxValue","minValue","label","required","fieldType","min","max","nullable","transform","originalValue","isNaN","undefined","checkbox","requiredErrorMessage","isMobileView","matchMedia","matches","AlertType","icon","describedBy","useId","Info","Success","Warning","IconError","renderDefaultIcon","getProviderWithCustomCheckout","methodId","PaypalCommerce","PaypalCommerceCreditCards","PayPalCommerceAcceleratedCheckout","Braintree","BraintreeAcceleratedCheckout","description","Toggle","openByDefault","isOpen","toggle","onClick","preventDefault","TranslatedString","displayAdditionalInformation","method","shippingCostAfterDiscount","newFontStyle","imageUrl","alt","src","transitTime","additionalDescription","cost","ShopperCurrency","amount","isBuyNowCart","cart","lastPathName","split","pop","params","URLSearchParams","search","source","get","currency","toCustomerCurrency","isLoading","rows","content","i","skeleton","findLineItems","compact","map","itemId","find","isNil","parentId","renderWhileLoading","toResolvableComponent","resolveIds","Object","assign","createInjectHoc","ContextComponent","options","pickProps","InnerDecoratedComponent","DecoratedComponent","context","useContext","injectedProps","pickBy","isEmpty","mergedProps","displayName","isSupported","EmbeddedCheckoutUnsupportedError","prototype","unsupportedMethods","langService","ids","includes","methods","UNSUPPORTED_METHODS","CartSummarySkeleton","isWaiting","componentDidMount","waitInterval","waitToken","setState","componentWillUnmount","clearInterval","loginUrl","LoadingOverlay","hideContentWhenLoading","TranslatedHtml","PureComponent","CustomerViewType","buttonsCount","Array","_v","LoadingSkeleton","SUPPORTED_METHODS","getSupportedMethodIds","methodIds","checkoutSettings","isBrowserSupported","isApplePayWindow","shouldFilterApplePay","isExperimentEnabled","resolveCheckoutButton","resolveId","resolveComponent","containerId","initialize","isShowingWalletButtonsOnTop","onError","heightOption","buttonHeight","container","deinitialize","localeContext","LocaleContext","initializeOptions","applepay","shippingLabel","language","subtotalLabel","onPaymentAuthorize","paypalCommerceIds","withCheckout","checkoutState","checkoutService","getConfig","getCustomer","isPaymentDataRequired","isInitializedCustomer","getInitializeCustomerError","config","providers","remoteCheckoutProviders","availableMethodIds","customer","isGuest","Boolean","checkEmbeddedSupport","isPaymentStepActive","onUnhandledError","onWalletButtonClick","style","position","left","top","isPayPalCommerce","ResolvedCheckoutButton","deinitializeCustomer","initializeCustomer","analyticsContext","AnalyticsContext","analyticsTracker","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","showSuggestion","setShowSuggestion","useEffect","bolt","onInit","hasBoltAccount","email","customerSuggestionInit","fn","event","stopPropagation","provider","providerFlow","Button","IconBolt","getCheckout","checkout","providerWithCustomCheckout","PaymentMethodId","Bolt","customerSuggestionExecute","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","payments","payment","providerId","getBillingAddress","isSigningOut","billingAddress","checkoutLink","logoutLink","isRedirectExperimentEnabled","isSignedIn","shouldRedirectToStorefrontForAuth","signOut","signOutCustomer","onSignOut","onSignOutError","isCartEmpty","reload","isErrorWithType","Tiny","variant","Secondary","beautifyAmazonButton","document","amazonButton","shadowRoot","hideText","isInitializing","shouldUseResolverButtonComponentsApproach","supportedMethodIds","EMAIL_REGEXP","getEmailValidationSchema","getTranslateCreateCustomerError","passwordRequirements","numeric","alpha","minLength","firstName","lastName","password","concat","getCustomFormFieldsValidationSchema","getAcceptsMarketingEmailsDefault","defaultShouldSubscribe","requiresMarketingConsent","withLanguage","handleSubmit","onSubmit","mapPropsToValues","acceptsMarketingEmails","validationSchema","requirements","getCreateCustomerValidationSchema","getPasswordRequirements","fixNewsletterCheckboxExperimentEnabled","createAccountError","isCreatingAccount","onCancel","isFloatingLabelEnabled","createAccountErrorMessage","isRequestError","status","splitMessage","trim","fields","field","updatedItems","items","transformFormFieldsData","Form","Fieldset","Alert","DynamicFormField","autocomplete","extraClass","parentFieldName","custom","disabled","Primary","href","onChange","renderInput","TextInput","autoComplete","labelContent","FormField","input","onSendLoginEmail","isSendingEmail","emailHasBeenRequested","onRequestClose","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","footer","LoadingSpinner","sent_email","TranslatedLink","form","expiry","minutes","Math","round","Modal","additionalBodyClassName","additionalModalClassName","header","ModalHeader","shouldShowCloseButton","isFastlaneHostWindow","hasOwnProperty","getPaymentMethod","paymentMethod","shouldRenderFastlaneWatermark","initializationData","isFastlanePrivacySettingEnabled","braintreeFastlane","paypalFastlane","FastlaneWatermarkComponent","includeAdditionalInfo","then","result","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","isExpressPrivacyPolicy","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","oneOf","Input","checked","String","Label","htmlFor","setSubscribeStatus","shouldSubscribe","sessionStorage","setItem","getSubscribeStatus","getItem","removeSubscribeStatus","removeItem","getShouldSubscribeValue","SubscribeSessionStorage","onContinueAsGuest","privacyPolicyUrl","baseSchema","canSubscribe","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","shouldShowEmailWatermark","setFieldValue","renderField","fieldProps","loginLink","legend","Legend","hidden","BasicFormField","tabIndex","onSignIn","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","Login","changeEmailLink","body","mapErrorMessage","SuggestedLogin","CancellableEnforcedLogin","EnforcedLogin","rel","target","mapCreateAccountFromFormValues","setStatus","valSuccess","step","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","onEmailChange","getStyles","getStripeStyles","gatewayId","getStylesFromElement","properties","parentContainer","getElementById","getAppliedStyles","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","buttonText","display","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","paymentProviderCustomer","getPaymentProviderCustomer","shouldEncourageSignIn","stripeLinkAuthenticationState","executePaymentMethodCheckoutOrContinue","handleSignIn","credentials","signIn","onSignInError","handleCreateAccount","createAccount","onAccountCreated","showCreateAccount","CreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","Guest","handleChangeEmail","customerEmailEntry","handleShowLogin","StripeUPE","continueWithCheckoutCallback","checkoutPaymentMethodExecuted","payload","onReady","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","checkoutButtonIds","isContinuingAsGuest","isSubscribed","isWalletButtonsOnTop","shouldRenderStripeForm","isLoadingGuestForm","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isEmbedded","isGuestEnabled","isAccountCreationEnabled","customerPaymentMethodExecuted","withAnalytics","getCustomerAccountFields","getCart","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","features","shopperConfig","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","links","forgotPasswordLink","guestCheckoutEnabled","signInCustomer","shouldUseStripeLinkByMinimumAmount","Customer","dangerouslySetInnerHTML","__html","sanitize","banners","promotion","banner","index","text","compactView","isShippingDiscountDisplayEnabled","paypalFastlaneAddresses","usePayPalFastlaneAddress","address","showPayPalFastlaneAddressLabel","StaticAddress","AddressType","Shipping","PoweredByPayPalFastlaneLabel","StaticConsignmentItemList","StaticShippingOption","getShippingCostAfterAutomaticDiscount","consignmentNumber","getShippingCountries","addressWithoutLocalization","localizeAddress","address1","address2","city","localizedProvince","localizedCountry","postalCode","count","getLineItemsCount","ConsignmentLineItemDetail","isMultiShippingSummary","isMultiShippingMode","getLanguageService","ShippingOptionExpiredError","heading","isActive","isEditable","onEdit","summary","isClosed","contentRef","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","focusStep","componentDidUpdate","prevProps","timeoutRef","clearTimeout","suggestion","isBusy","MobileView","matched","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","delay","getTransitionDelay","getChildInput","getScrollPosition","onExpanded","scrollTo","getParentContainer","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","parentElement","classList","contains","timeoutDelay","parseFloat","getComputedStyle","transitionDuration","CheckoutStepType","some","lineItem","isShippingRequired","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","getStripeLinkAndCheckoutPageIsReloaded","getBillingStepStatus","getBillingAddressFields","countryCode","billingAddressFields","hasAddress","isValidAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","Billing","startsWith","getShippingStepStatus","getShippingAddress","getConsignments","shippingAddress","getShippingAddressFields","shippingAddressFields","hasOptions","hasUnassignedItems","isCustomShippingSelected","getPaymentStepStatus","getOrder","order","Payment","getOrderSubmitStatus","isSubmittingOrder","customerStep","shippingStep","billingStep","paymentStep","orderStatus","steps","defaultActiveStep","isPrevStepComplete","slice","prevStep","lazy","retry","CartSummary","CartSummaryDrawer","isInitialLoad","isBillingSameAsShipping","isRedirecting","buttonConfigs","handleToggleMultiShipping","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","trackStepCompleted","navigateToStep","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","trackStepViewed","handleUnhandledError","handleError","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","createAccountUrl","handleBeforeExit","exitCheckout","handleWalletButtonClick","methodName","walletButtonClick","unsubscribeFromConsignments","removeEventListener","checkoutId","createEmbeddedMessenger","embeddedStylesheet","extensionService","loadCheckout","loadPaymentMethodByIds","subscribeToConsignments","all","include","loadExtensions","supportedProviders","configs","getPaymentMethods","preloadExtensions","siteLink","errorFlashMessages","getFlashMessages","messenger","parentOrigin","receiveStyles","styles","append","postFrameLoaded","contentId","postLoaded","checkoutBegin","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","defaultNewsletterSignupOption","isUsingMultiShipping","errorModal","isCustomError","ErrorModal","onClose","isPending","promotions","extensionState","pageLoadingSkeleton","OrderConfirmationPageSkeleton","loadingSkeleton","unmountContentWhenLoading","isShowingLoadingIndicator","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","hasCartChanged","LazyContainer","AddressFormSkeleton","cartHasChanged","navigateNextStep","onToggleMultiShipping","setIsMultishippingMode","StaticBillingAddress","errorLogger","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","Extension","region","withExtension","errors","statuses","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscribe","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","Checkout","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createErrorLogger","sentry","sentryConfig","errorTypes","publicPath","sampleRate","sentrySampleRate","ErrorBoundary","LocaleProvider","CheckoutProvider","AnalyticsProvider","ExtensionProvider","StyleProvider","createEmbeddedCheckoutMessenger","customError","mapAddressToFormValues","addressFormValues","fieldName","defaultValue","getValue","shouldSaveAddress","stateOrProvince","stateOrProvinceCode","date","Date","getDefaultValue","year","month","day","Number","errorId","kebabCase","customConsole","console","tags","level","meta","info","warn","SeverityLevelEnum","FILENAME_PREFIX","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","RegExp","consoleLogger","beforeSend","denyUrls","integrations","GlobalHandlers","onerror","onunhandledrejection","RewriteFrames","iteratee","scope","errorCode","computeErrorCode","setTags","setLevel","mapToSentryLevel","setExtras","setFingerprint","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","serviceConfig","requestSender","createRequestSender","create","put","response","renderPasswordInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","confirmPassword","onSignUp","isSigningUp","customerCanBeCreated","AccountCreationRequirementsError","AccountCreationFailedError","isDefaultOrderPayment","isGiftCertificatePayment","isStoreCreditPayment","gatewayPayment","detail","instructions","mapFromPayments","code","remaining","used","balance","purchaseDate","getStoreCreditAmount","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","fees","shippingAmount","shipping","discounts","discount","getTotalAutomaticDiscount","getOrderShippingCostAfterAutomaticDiscount","subtotalAmount","shippingAmountBeforeDiscount","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","MandateTextComponent","mandateText","keys","entries","PaymentsWithMandates","paymentsWithMandates","mandate","isPaymentWithMandate","OrderStatusMessage","orderNumber","supportEmail","supportPhoneNumber","hasDigitalItems","isDownloadable","handleClick","throttle","print","OrderSummary","OrderSummaryDrawer","handleErrorModalClose","handleSignUp","hasSignedUp","catch","loadOrder","orderPurchased","isLoadingOrder","paymentInstructions","orderEmail","storePhoneNumber","renderGuestSignUp","shouldShowPasswordForm","customerId","action","renderOrderSummary","renderErrorModal","shopperCurrency","headerLink","storeCurrency","orderAmount","shouldShowErrorCode","OrderConfirmation","accountService","newsletter","getContextValue","getState","unsubscribe","getPasswordRequirementsFromConfig","minlength","allSlashes","shouldShowChildren","StyleContext","useStyleContext","styleContext","discountTotal","DEFAULT_OPTIONS","interval","resolve","checkoutButtonContainerClass","additionalInitializationOptions","HTMLElement","onComplete","object","setPrototypeOf","hasProto","__proto__","loadingContainerId","InnerField","component","InnerFieldInput","hasError","prevForm","prevField","nextForm","nextField","nextProps","getTime","createElement","renderInnerField","aria","labelledby","handleOnRequestClose","nativeEvent","renderFooter","renderHeader","renderBody","shouldBeTranslatedAsHtml","isHtmlError","translationKey","renderErrorCode","headers","isValidSync","WHITELIST_REGEXP","maxLength","getTranslateAddressError","requiredFieldErrorTranslationIds","company","phone","getFormFieldsValidationSchema","forwardRef","placeholder","paymentWithCustomCheckout","isPayPalFastlaneEnabled","paypalFastlaneCustomer","customerAuthenticationState","authenticationState","addresses","shouldShowPayPalFastlaneLabel","shouldShowPayPalFastlaneShippingForm","CheckoutContext","useCheckout","isResolvableComponent","query","components","results","resolverId","default","sort","a","b","ExtensionRegionContainer","extensionRegionToContainerMap","ShippingShippingAddressFormBefore","ShippingShippingAddressFormAfter","ShippingSelectedShippingMethod","PaymentPaymentMethodListBefore","SummaryAfter","SummaryLastItemAfter","getExtensions","extensions","extensionContext","ExtensionContext","useExtensions","isRegionEnabled","renderExtension","removeListeners","queries","mobile","mapToPropsOrFactory","mapToProps","isMapToPropsFactory","mappedProps","ButtonVariant","ButtonSize","getClassName","isFullWidth","Action","normalizeAddress","omit","paypalFastlaneAddress","bcAddress","isEqual","isEqualToPayPalFastlaneAddress","getNestedValue","obj","path","acc","formikContext","touched","renderMessage","Consumer","ADD_ATTR","translatedString","parsedString","toCSSRule","selector","mergedStyles","parse","rules","secondaryText","secondaryHeading","link","hover","button","active","secondaryButton","select","radio","checklist","discountBanner","loadingBanner","orderSummary","embeddedCheckoutStyleParser","_parser","head","appendChild","sheet","CSSStyleSheet","forEach","rule","insertRule","appendStylesheet","toUpperCase","quantity","createAnalyticsService","createFn","createArguments","getStepTracker","createStepTracker","getBodlService","createBodlService","getBraintreeAnalyticTracker","createBraintreeAnalyticTracker","getPayPalCommerceAnalyticTracker","createPayPalCommerceAnalyticTracker","trackCheckoutStarted","currentStep","stepCompleted","trackOrderComplete","showShippingMethods","selectedPaymentMethod","clickPayButton","paymentRejected","paymentComplete","extensionReducer","ExtensionActionType","SHOW_LOADING_INDICATOR","RE_RENDER_SHIPPING_FORM","shippingFormRenderTimestamp","createReloadCheckoutHandler","commandType","ExtensionCommandType","ReloadCheckout","handler","createSetIframeStyleHandler","extension","SetIframeStyle","extensionContainer","iframe","createShowLoadingIndicatorHandler","dispatch","ShowLoadingIndicator","show","createReRenderShippingFormHandler","ReRenderShippingForm","now","createReRenderShippingStepHandler","ReRenderShippingStep","createGetConsignmentHandler","queryType","ExtensionQueryType","GetConsignments","useCache","postMessageToExtension","handlers","cartId","URL","searchParams","set","as","getExtensionByRegion","registerHandlers","extensionId","clearExtensionCache","removers","remover","handlerProps","createCommandHandlerFactory","handlerFactory","isCommandHandler","handleExtensionCommand","createQueryHandlerFactory","isQueryHandler","handleExtensionQuery","useReducer","extensionValues","ExtensionService","appearFocused","isPayPalFastlaneCustomer","filterError","Suspense","element","pseudoElementSelector","declaration","propertyName","getPropertyValue","BigCommercePaymentsCreditCards","BigCommercePaymentsFastLane","countries","country","states","subdivisions","loadingUI","DynamicFormFieldType","showPayPalFastlaneLabel","getBillingCountries","useLocale","stripeLinkMinAmount","cartAmount","isStripeLinkMinAmount","parseAnchor","div","innerHTML","anchor","anchorSiblings","outerHTML","EMPTY_ARRAY","freeze","renderItemContent","option","renderProductOptionDetails","MOBILE_MAX_WIDTH","SMALL_SCREEN_MAX_WIDTH","currentScript","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","renderOrderConfirmation","OrderConfirmationApp","FALLBACK_LOCALE","languageService","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","experimentName","call","closeButtonLabel","additionalHeaderClassName","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","createCurrencyService","inputFormat","inputDateFormat","withDate","handleDateChange","dateValue","dropdown","IconChevronDown","optionValue","CheckboxInput","isArray","calendarClassName","dateFormat","maxDate","minDate","placeholderText","popperClassName","selected","multiline","TextArea","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","remove","handleSelectAll","checkedValues","difference","val","handleSelectNone","handleInputChange","indexOf","FormFieldContainer","FormFieldError","renderProps","pick","secret","fieldLabel","inputId","fieldInputId","isFloatingLabelSupportedFieldType","labelComponent","labelClassName","dynamicFormFieldType","number","telephone","helperLabel"],"sourceRoot":""}