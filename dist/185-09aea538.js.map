{"version":3,"file":"185-09aea538.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/order/OrderSummarySection.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isSmallScreen.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronUp.tsx","webpack://checkout/./packages/core/src/app/order/getItemsCount.ts","webpack://checkout/./packages/core/src/app/order/removeBundledItems.ts","webpack://checkout/./packages/core/src/app/order/isOrderFee.ts","webpack://checkout/./packages/core/src/app/order/OrderSummaryDiscount.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySubtotals.tsx","webpack://checkout/./packages/core/src/app/order/mapFromCustom.tsx","webpack://checkout/./packages/core/src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./packages/core/src/app/order/mapFromDigital.tsx","webpack://checkout/./packages/core/src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/order/mapFromPhysical.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItem.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItems.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryTotal.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\n\nconst OrderSummarySection: FunctionComponent<{ children?: React.ReactNode }> = ({ children }) => (\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\n        {children}\n    </section>\n);\n\nexport default OrderSummarySection;\n","import { SMALL_SCREEN_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isSmallScreen() {\n    query = window.matchMedia(`(max-width: ${SMALL_SCREEN_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronUp: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronUp);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    const totalItemsCount = [...physicalItems, ...digitalItems, ...(customItems || [])].reduce(\n        (total, item) => (total += item.quantity),\n        0,\n    );\n\n    return totalItemsCount + giftCertificates.length;\n}\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function removeBundledItems(lineItems: LineItemMap): LineItemMap {\n    return {\n        ...lineItems,\n        physicalItems: lineItems.physicalItems.filter((item) => typeof item.parentId !== 'string'),\n        digitalItems: lineItems.digitalItems.filter((item) => typeof item.parentId !== 'string'),\n    };\n}\n","import { Fee, OrderFee } from \"@bigcommerce/checkout-sdk\";\n\nexport default function isOrderFee(fee: OrderFee | Fee): fee is OrderFee {\n  return Object.hasOwn(fee, 'customerDisplayName');\n}\n\n;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { ShopperCurrency } from '../currency';\n\nimport OrderSummaryPrice, { OrderSummaryPriceProps } from './OrderSummaryPrice';\n\nexport interface OrderSummaryDiscountProps extends OrderSummaryPriceProps {\n    remaining?: number;\n    code?: string;\n    onRemoved?(code: string): void;\n}\n\nconst OrderSummaryDiscount: FunctionComponent<OrderSummaryDiscountProps> = ({\n    code,\n    remaining,\n    amount,\n    onRemoved,\n    ...rest\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    return (\n        <OrderSummaryPrice\n            {...rest}\n            {...(onRemoved && {\n                onActionTriggered: () => code && onRemoved(code),\n                actionLabel: <TranslatedString id=\"redeemable.remove_action\" />,\n            })}\n            amount={-1 * (amount || 0)}\n        >\n            {!!remaining && remaining > 0 && (\n                <span\n                    className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\n                    data-test=\"cart-price-remaining\"\n                >\n                    <TranslatedString id=\"cart.remaining_text\" />\n                    {': '}\n                    <ShopperCurrency amount={remaining} />\n                </span>\n            )}\n\n            {code && (\n                <span\n                    className={classNames('cart-priceItem-postFix optimizedCheckout-contentSecondary',\n                        { 'sub-text-medium': newFontStyle })}\n                    data-test=\"cart-price-code\"\n                >\n                    {code}\n                </span>\n            )}\n        </OrderSummaryPrice>\n    );\n}\n\nexport default memo(OrderSummaryDiscount);\n","import { Coupon, Fee, GiftCertificate, OrderFee, Tax } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport isOrderFee from \"./isOrderFee\";\nimport OrderSummaryDiscount from './OrderSummaryDiscount';\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummarySubtotalsProps {\n    coupons: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    discountAmount?: number;\n    isTaxIncluded?: boolean;\n    taxes?: Tax[];\n    fees?: Fee[] | OrderFee[];\n    giftWrappingAmount?: number;\n    shippingAmount?: number;\n    shippingAmountBeforeDiscount?: number;\n    handlingAmount?: number;\n    storeCreditAmount?: number;\n    subtotalAmount: number;\n    onRemovedGiftCertificate?(code: string): void;\n    onRemovedCoupon?(code: string): void;\n}\n\nconst OrderSummarySubtotals: FunctionComponent<OrderSummarySubtotalsProps> = ({\n    discountAmount,\n    isTaxIncluded,\n    giftCertificates,\n    taxes,\n    fees,\n    giftWrappingAmount,\n    shippingAmount,\n    shippingAmountBeforeDiscount,\n    subtotalAmount,\n    handlingAmount,\n    storeCreditAmount,\n    coupons,\n    onRemovedGiftCertificate,\n    onRemovedCoupon,\n}) => {\n    return (\n        <>\n            <OrderSummaryPrice\n                amount={subtotalAmount}\n                className=\"cart-priceItem--subtotal\"\n                label={<TranslatedString id=\"cart.subtotal_text\" />}\n                testId=\"cart-subtotal\"\n            />\n\n            {(coupons || []).map((coupon, index) => (\n                <OrderSummaryDiscount\n                    amount={coupon.discountedAmount}\n                    code={coupon.code}\n                    key={index}\n                    label={coupon.displayName}\n                    onRemoved={onRemovedCoupon}\n                    testId=\"cart-coupon\"\n                />\n            ))}\n\n            {!!discountAmount && (\n                <OrderSummaryDiscount\n                    amount={discountAmount}\n                    label={<TranslatedString id=\"cart.discount_text\" />}\n                    testId=\"cart-discount\"\n                />\n            )}\n\n            {(giftCertificates || []).map((giftCertificate, index) => (\n                <OrderSummaryDiscount\n                    amount={giftCertificate.used}\n                    code={giftCertificate.code}\n                    key={index}\n                    label={<TranslatedString id=\"cart.gift_certificate_text\" />}\n                    onRemoved={onRemovedGiftCertificate}\n                    remaining={giftCertificate.remaining}\n                    testId=\"cart-gift-certificate\"\n                />\n            ))}\n\n            {!!giftWrappingAmount && (\n                <OrderSummaryPrice\n                    amount={giftWrappingAmount}\n                    label={<TranslatedString id=\"cart.gift_wrapping_text\" />}\n                    testId=\"cart-gift-wrapping\"\n                />\n            )}\n\n            <OrderSummaryPrice\n                amount={shippingAmount}\n                amountBeforeDiscount={shippingAmountBeforeDiscount}\n                label={<TranslatedString id=\"cart.shipping_text\" />}\n                testId=\"cart-shipping\"\n                zeroLabel={<TranslatedString id=\"cart.free_text\" />}\n            />\n\n            {!!handlingAmount && (\n                <OrderSummaryPrice\n                    amount={handlingAmount}\n                    label={<TranslatedString id=\"cart.handling_text\" />}\n                    testId=\"cart-handling\"\n                />\n            )}\n\n            {fees?.map((fee, index) => (\n                <OrderSummaryPrice\n                    amount={fee.cost}\n                    key={index}\n                    label={isOrderFee(fee) ? fee.customerDisplayName : fee.displayName}\n                    testId=\"cart-fees\"\n                />\n            ))}\n\n            {!isTaxIncluded && (taxes || []).map((tax, index) => (\n                <OrderSummaryPrice\n                    amount={tax.amount}\n                    key={index}\n                    label={tax.name}\n                    testId=\"cart-taxes\"\n                />\n            ))}\n\n            {!!storeCreditAmount && (\n                <OrderSummaryDiscount\n                    amount={storeCreditAmount}\n                    label={<TranslatedString id=\"cart.store_credit_text\" />}\n                    testId=\"cart-store-credit\"\n                />\n            )}\n        </>\n    );\n};\n\nexport default memo(OrderSummarySubtotals);\n","import { CustomItem } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        name: item.name,\n    };\n}\n\nexport default mapFromCustom;\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode } from 'react';\n\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\n    if (!item.imageUrl) {\n        return;\n    }\n\n    return <img alt=\"\" data-test=\"cart-item-image\" src={item.imageUrl} />;\n}\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedComparisonPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        productOptions: [\n            ...(item.options || []).map((option) => ({\n                testId: 'cart-item-product-option',\n                content: `${option.name} ${option.value}`,\n            })),\n            getDigitalItemDescription(item),\n        ],\n    };\n}\n\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\n    if (!item.downloadPageUrl) {\n        return {\n            testId: 'cart-item-digital-product',\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\n        };\n    }\n\n    return {\n        testId: 'cart-item-digital-product-download',\n        content: (\n            <a href={item.downloadPageUrl} rel=\"noopener noreferrer\" target=\"_blank\">\n                <TranslatedString id=\"cart.downloads_action\" />\n            </a>\n        ),\n    };\n}\n\nexport default mapFromDigital;\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { IconGiftCertificate } from '../ui/icon';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: 1,\n        amount: item.amount,\n        name: item.name,\n        image: (\n            <span className=\"productImage-giftCertificate\" data-test=\"cart-item-gift-certificate\">\n                <IconGiftCertificate />\n            </span>\n        ),\n    };\n}\n\nexport default mapFromGiftCertificate;\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedComparisonPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        description: item.giftWrapping ? item.giftWrapping.name : undefined,\n        productOptions: (item.options || []).map((option) => ({\n            testId: 'cart-item-product-option',\n            content: `${option.name} ${option.value}`,\n        })),\n    };\n}\n\nexport default mapFromPhysical;\n","import classNames from 'classnames';\nimport { isNumber } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryItemProps {\n    id: string | number;\n    amount: number;\n    quantity: number;\n    name: string;\n    amountAfterDiscount?: number;\n    image?: ReactNode;\n    description?: ReactNode;\n    productOptions?: OrderSummaryItemOption[];\n}\n\nexport interface OrderSummaryItemOption {\n    testId: string;\n    content: ReactNode;\n}\n\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\n    amount,\n    amountAfterDiscount,\n    image,\n    name,\n    productOptions,\n    quantity,\n    description,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    return (\n        <div className=\"product\" data-test=\"cart-item\">\n            <figure className=\"product-column product-figure\">{image}</figure>\n\n            <div className=\"product-column product-body\">\n                <h4\n                    className={classNames('product-title optimizedCheckout-contentPrimary',\n                        { 'body-medium': newFontStyle })}\n                    data-test=\"cart-item-product-title\"\n                >\n                    {newFontStyle\n                        ? (<span className=\"body-bold\">\n                            {`${quantity} x `}\n                        </span>)\n                        : (`${quantity} x `)\n                    }\n                    {name}\n                </h4>\n                {productOptions && productOptions.length > 0 && (\n                    <ul\n                        className={classNames('product-options optimizedCheckout-contentSecondary', {\n                            'sub-text-medium': newFontStyle,\n                        })}\n                        data-test=\"cart-item-product-options\"\n                    >\n                        {productOptions.map((option, index) => (\n                            <li className=\"product-option\" data-test={option.testId} key={index}>\n                                {option.content}\n                            </li>\n                        ))}\n                    </ul>\n                )}\n                {description && (\n                    <div\n                        className=\"product-description optimizedCheckout-contentSecondary\"\n                        data-test=\"cart-item-product-description\"\n                    >\n                        {description}\n                    </div>\n                )}\n            </div>\n\n            <div className=\"product-column product-actions\">\n                {isNumber(amountAfterDiscount) && amountAfterDiscount !== amount && (\n                    <div className={classNames('product-price', {\n                        'body-medium': newFontStyle,\n                    })} data-test=\"cart-item-product-price--afterDiscount\">\n                        <ShopperCurrency amount={amountAfterDiscount} />\n                    </div>\n                )}\n\n                <div\n                    className={classNames('product-price', 'optimizedCheckout-contentPrimary', {\n                        'product-price--beforeDiscount':\n                            isNumber(amountAfterDiscount) && amountAfterDiscount !== amount,\n                        'body-medium': newFontStyle && isNumber(amountAfterDiscount) && amountAfterDiscount === amount,\n                        'body-regular': newFontStyle && isNumber(amountAfterDiscount) && amountAfterDiscount !== amount,\n                    })}\n                    data-test=\"cart-item-product-price\"\n                >\n                    <ShopperCurrency amount={amount} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default memo(OrderSummaryItem);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\nimport { isSmallScreen } from '../ui/responsive';\n\nimport getItemsCount from './getItemsCount';\nimport mapFromCustom from './mapFromCustom';\nimport mapFromDigital from './mapFromDigital';\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\nimport mapFromPhysical from './mapFromPhysical';\nimport OrderSummaryItem from './OrderSummaryItem';\n\nconst COLLAPSED_ITEMS_LIMIT = 4;\nconst COLLAPSED_ITEMS_LIMIT_SMALL_SCREEN = 3;\n\nexport interface OrderSummaryItemsProps {\n    displayLineItemsCount: boolean;\n    items: LineItemMap;\n    newFontStyle?: boolean;\n}\n\ninterface OrderSummaryItemsState {\n    isExpanded: boolean;\n    collapsedLimit: number;\n}\n\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\n    constructor(props: OrderSummaryItemsProps) {\n        super(props);\n\n        this.state = {\n            isExpanded: false,\n            collapsedLimit: this.getCollapsedLimit(),\n        };\n    }\n\n    render(): ReactNode {\n        const { displayLineItemsCount = true, items, newFontStyle = false } = this.props;\n        const { collapsedLimit, isExpanded } = this.state;\n\n        return (\n            <>\n                {displayLineItemsCount && <h3\n                    className={classNames('cart-section-heading optimizedCheckout-contentPrimary',\n                        { 'body-medium': newFontStyle })}\n                    data-test=\"cart-count-total\"\n                >\n                    <TranslatedString\n                        data={{ count: getItemsCount(items) }}\n                        id=\"cart.item_count_text\"\n                    />\n                </h3>}\n\n                <ul aria-live=\"polite\" className=\"productList\">\n                    {[\n                        ...items.physicalItems\n                            .slice()\n                            .sort((item) => item.variantId)\n                            .map(mapFromPhysical),\n                        ...items.giftCertificates.slice().map(mapFromGiftCertificate),\n                        ...items.digitalItems\n                            .slice()\n                            .sort((item) => item.variantId)\n                            .map(mapFromDigital),\n                        ...(items.customItems || []).map(mapFromCustom),\n                    ]\n                        .slice(0, isExpanded ? undefined : collapsedLimit)\n                        .map((summaryItemProps) => (\n                            <li className=\"productList-item is-visible\" key={summaryItemProps.id}>\n                                <OrderSummaryItem {...summaryItemProps} />\n                            </li>\n                        ))}\n                </ul>\n\n                {this.renderActions()}\n            </>\n        );\n    }\n\n    private getCollapsedLimit(): number {\n        return isSmallScreen() ? COLLAPSED_ITEMS_LIMIT_SMALL_SCREEN : COLLAPSED_ITEMS_LIMIT;\n    }\n\n    private renderActions(): ReactNode {\n        const { isExpanded } = this.state;\n\n        if (this.getLineItemCount() <= this.getCollapsedLimit()) {\n            return;\n        }\n\n        return (\n            <div className=\"cart-actions\">\n                <button\n                    className={classNames('button button--tertiary button--tiny optimizedCheckout-buttonSecondary',\n                        { 'sub-text-medium': this.props.newFontStyle })}\n                    onClick={this.handleToggle}\n                    type=\"button\"\n                >\n                    {isExpanded ? (\n                        <>\n                            <TranslatedString id=\"cart.see_less_action\" />\n                            <IconChevronUp />\n                        </>\n                    ) : (\n                        <>\n                            <TranslatedString id=\"cart.see_all_action\" />\n                            <IconChevronDown />\n                        </>\n                    )}\n                </button>\n            </div>\n        );\n    }\n\n    private getLineItemCount(): number {\n        const { items } = this.props;\n\n        return (\n            (items.customItems || []).length +\n            items.physicalItems.length +\n            items.digitalItems.length +\n            items.giftCertificates.length\n        );\n    }\n\n    private handleToggle: () => void = () => {\n        const { isExpanded } = this.state;\n\n        this.setState({ isExpanded: !isExpanded });\n    };\n}\n\nexport default OrderSummaryItems;\n","import classNames from 'classnames';\nimport React, { FC, ReactNode, useCallback, useEffect, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { useCheckout , useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryPriceProps {\n    children?: ReactNode;\n    label: ReactNode;\n    amount?: number | null;\n    amountBeforeDiscount?: number;\n    zeroLabel?: ReactNode;\n    className?: string;\n    testId?: string;\n    currencyCode?: string;\n    superscript?: string;\n    actionLabel?: ReactNode;\n    onActionTriggered?(): void;\n    isOrderTotal?: boolean;\n}\n\nexport interface OrderSummaryPriceState {\n    highlight: boolean;\n    previousAmount?: number;\n}\n\nfunction getDisplayValue(amount?: number | null, zeroLabel?: ReactNode): ReactNode | number {\n    const notYetSetSymbol = '--';\n\n    if (typeof amount === 'undefined' || amount === null) {\n        return notYetSetSymbol;\n    }\n\n    if (zeroLabel && amount === 0) {\n        return zeroLabel;\n    }\n\n    return amount;\n}\n\nfunction isNumberValue(displayValue: number | ReactNode): displayValue is number {\n    return typeof displayValue === 'number';\n}\n\nconst OrderSummaryPrice: FC<OrderSummaryPriceProps> = ({\n    amount,\n    amountBeforeDiscount,\n    actionLabel,\n    onActionTriggered,\n    children,\n    className,\n    currencyCode,\n    label,\n    superscript,\n    testId,\n    zeroLabel,\n    isOrderTotal = false,\n}) => {\n    const [ highlight, setHighlight ] = useState<boolean>(false);\n    const [ previousAmount, setPreviousAmount ] = useState<OrderSummaryPriceProps['amount']>(amount);\n    const {\n        checkoutState: {\n            statuses: { isSubmittingOrder }\n        }\n    } = useCheckout();\n\n    const { newFontStyle } = useStyleContext();\n    const displayValue = getDisplayValue(amount, zeroLabel);\n    const isActionDisabled = isSubmittingOrder();\n\n    useEffect(() => {\n        setHighlight(amount !== previousAmount);\n        setPreviousAmount(amount);\n    }, [ amount ]);\n\n    const handleTransitionEnd: (node: HTMLElement, done: () => void) => void = useCallback((node, done) => {\n        node.addEventListener('animationend', ({ target }) => {\n            if (target === node) {\n                setHighlight(false);\n                done();\n            }\n        });\n    }, [ setHighlight ]);\n\n    const handleActionTrigger = () => {\n        if (isActionDisabled || !onActionTriggered) {\n            return;\n        }\n\n        onActionTriggered();\n    }\n\n    return (\n        <div data-test={testId}>\n            <CSSTransition\n                addEndListener={handleTransitionEnd}\n                classNames=\"changeHighlight\"\n                in={highlight}\n                timeout={{}}\n            >\n                <div\n                    aria-live=\"polite\"\n                    className={classNames(\n                        'cart-priceItem',\n                        'optimizedCheckout-contentPrimary',\n                        className,\n                    )}\n                >\n                    <span className={classNames('cart-priceItem-label',\n                        {\n                            'body-regular': newFontStyle && !isOrderTotal,\n                            'sub-header': newFontStyle && isOrderTotal\n                        })}\n                    >\n                        <span data-test=\"cart-price-label\">\n                            {label}\n                            {'  '}\n                        </span>\n                        {currencyCode && (\n                            <span className=\"cart-priceItem-currencyCode\">\n                                {`(${currencyCode}) `}\n                            </span>\n                        )}\n                        {onActionTriggered && actionLabel && (\n                            <span className=\"cart-priceItem-link\">\n                                <a\n                                    className={classNames({\n                                        'link--disabled': isActionDisabled,\n                                        'body-cta': newFontStyle && !isOrderTotal\n                                    })}\n                                    data-test=\"cart-price-callback\"\n                                    href=\"#\"\n                                    onClick={preventDefault(handleActionTrigger)}\n                                >\n                                    {actionLabel}\n                                </a>\n                            </span>\n                        )}\n                    </span>\n\n                    <span className={classNames('cart-priceItem-value',\n                        {\n                            'body-medium': newFontStyle && !isOrderTotal,\n                            'header': newFontStyle && isOrderTotal\n                        })}\n                    >\n                        {isNumberValue(amountBeforeDiscount) && amountBeforeDiscount !== amount && (\n                            <span className=\"cart-priceItem-before-value\">\n                                <ShopperCurrency amount={amountBeforeDiscount} />\n                            </span>\n                        )}\n\n\n                        <span data-test=\"cart-price-value\">\n                            {isNumberValue(displayValue) ? (\n                                <ShopperCurrency amount={displayValue} />\n                            ) : (\n                                displayValue\n                            )}\n                        </span>\n\n                        {superscript && (\n                            <sup data-test=\"cart-price-value-superscript\">{superscript}</sup>\n                        )}\n                    </span>\n\n                    {children}\n                </div>\n            </CSSTransition>\n        </div>\n    );\n};\n\nexport default OrderSummaryPrice;\n","import React, { FunctionComponent } from 'react';\n\nconst IconGiftCertificate: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\n    </svg>\n);\n\nexport default IconGiftCertificate;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString, withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummaryTotalProps {\n    orderAmount: number;\n    shopperCurrencyCode: string;\n    storeCurrencyCode: string;\n}\n\nconst OrderSummaryTotal: FunctionComponent<OrderSummaryTotalProps & WithCurrencyProps> = ({\n    shopperCurrencyCode,\n    storeCurrencyCode,\n    orderAmount,\n    currency,\n}) => {\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n    const label = (\n        <>\n            {hasDifferentCurrency ? (\n                <TranslatedString id=\"cart.estimated_total_text\" />\n            ) : (\n                <TranslatedString id=\"cart.total_text\" />\n            )}\n            {` (${shopperCurrencyCode})`}\n        </>\n    );\n\n    return (\n        <>\n            <OrderSummaryPrice\n                amount={orderAmount}\n                className=\"cart-priceItem--total\"\n                isOrderTotal\n                label={label}\n                superscript={hasDifferentCurrency ? '*' : undefined}\n                testId=\"cart-total\"\n            />\n            {hasDifferentCurrency && currency && (\n                <p className=\"cart-priceItem--totalNote\" data-test=\"cart-price-item-total-note\">\n                    <TranslatedString\n                        data={{\n                            total: currency.toStoreCurrency(orderAmount),\n                            code: storeCurrencyCode,\n                        }}\n                        id=\"cart.billed_amount_text\"\n                    />\n                </p>\n            )}\n        </>\n    );\n};\n\nexport default withCurrency(OrderSummaryTotal);\n"],"names":["children","className","isSmallScreen","window","matchMedia","matches","height","viewBox","width","xmlns","d","getItemsCount","physicalItems","digitalItems","giftCertificates","customItems","reduce","total","item","quantity","length","removeBundledItems","lineItems","filter","parentId","isOrderFee","fee","Object","hasOwn","memo","code","remaining","amount","onRemoved","rest","newFontStyle","OrderSummaryPrice","onActionTriggered","actionLabel","TranslatedString","id","ShopperCurrency","discountAmount","isTaxIncluded","taxes","fees","giftWrappingAmount","shippingAmount","shippingAmountBeforeDiscount","subtotalAmount","handlingAmount","storeCreditAmount","coupons","onRemovedGiftCertificate","onRemovedCoupon","label","testId","map","coupon","index","discountedAmount","key","displayName","giftCertificate","used","amountBeforeDiscount","zeroLabel","cost","customerDisplayName","tax","name","extendedListPrice","getOrderSummaryItemImage","imageUrl","alt","src","getDigitalItemDescription","downloadPageUrl","content","href","rel","target","extendedComparisonPrice","amountAfterDiscount","extendedSalePrice","image","productOptions","options","option","value","IconGiftCertificate","description","giftWrapping","undefined","isNumber","props","handleToggle","isExpanded","state","setState","collapsedLimit","getCollapsedLimit","render","this","displayLineItemsCount","items","data","count","slice","sort","variantId","summaryItemProps","renderActions","getLineItemCount","onClick","type","IconChevronUp","IconChevronDown","isNumberValue","displayValue","currencyCode","superscript","isOrderTotal","useState","highlight","setHighlight","previousAmount","setPreviousAmount","isSubmittingOrder","getDisplayValue","isActionDisabled","useEffect","handleTransitionEnd","useCallback","node","done","addEventListener","addEndListener","classNames","in","timeout","shopperCurrencyCode","storeCurrencyCode","orderAmount","currency","hasDifferentCurrency","toStoreCurrency"],"sourceRoot":""}