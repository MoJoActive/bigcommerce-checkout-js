{"version":3,"file":"checkout-0cf369d2.js","mappings":"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","sources":["webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/utility/src/navigateToOrderConfirmation.ts","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/core/src/app/payment/getProviderWithCustomCheckout.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/utility/src/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CheckoutPageSkeleton.tsx","webpack://checkout/./packages/ui/src/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/ApplePayButton.tsx","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-fastlane-window.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/PayPalFastlaneWatermark.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/SubscribeSessionStorage.ts","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/RedirectToStorefrontLogin.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticMultiConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/ShippingSummary.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutPage.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/hooks/useLoadCheckout.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutIntermediate.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/payment-integration-api/src/toResolvableComponent.tsx","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/getOrderShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/CustomError.ts","webpack://checkout/./packages/core/src/app/shipping/getShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/checkout-button-integration/src/CheckoutButton.tsx","webpack://checkout/./packages/amazon-pay-v2-integration/src/AmazonPayV2Button.tsx","webpack://checkout/./packages/instrument-utils/src/guards/isHTMLElement/isHTMLElement.ts","webpack://checkout/./packages/bigcommerce-payments-integration/src/BigCommercePayments/BigCommercePaymentsButton.tsx","webpack://checkout/./packages/bigcommerce-payments-integration/src/BigCommercePaymentsPayLater/BigcommercePaymentsPayLaterButton.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/payment-integration-api/src/setPrototypeOf.ts","webpack://checkout/./packages/google-pay-integration/src/GooglePayButton.tsx","webpack://checkout/./packages/payment-integration-api/src/isEmbedded.ts","webpack://checkout/./packages/paypal-commerce-integration/src/PayPalCommerceCredit/PayPalCommerceCreditButton.tsx","webpack://checkout/./packages/paypal-commerce-integration/src/PayPalCommerce/PayPalCommerceButton.tsx","webpack://checkout/./packages/stripe-integration/src/stripe-ocs/StripeLinkV2Button.tsx","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalFastlane.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/PoweredByPayPalFastlaneLabel.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/usePayPalFastlaneAddress.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/payment-integration-api/src/isResolvableComponent.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveComponent.ts","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-address.ts","webpack://checkout/./packages/core/src/app/common/utility/getNestedValue.ts","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingFormHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingStepHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/queryHandlers/createGetConsignmentHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-customer.ts","webpack://checkout/./packages/ui/src/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/checkout-extension/src/useExtensions.tsx","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-bigcommerce-payments-fastlane-method.ts","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/ui/src/button/Button.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/OrderConfirmationPageSkeleton.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextArea.tsx","webpack://checkout/./packages/ui/src/utils/isMobileView.ts","webpack://checkout/./packages/locale/src/localizeAddress.ts","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/ui/src/loading/LoadingOverlay.tsx","webpack://checkout/./packages/ui/src/context/ThemeContext.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/shipping/ConsignmentLineItemDetail.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-commerce-fastlane-method.ts","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/ui/src/loading/LoadingSpinner.tsx","webpack://checkout/./packages/ui/src/context/ThemeProvider.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-braintree-fastlane-method.ts","webpack://checkout/./packages/core/src/app/common/utility/isExperimentEnabled.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionRegionContainer.ts","webpack://checkout/./packages/checkout-extension/src/Extension.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/ui/form/RadioInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/MultiCheckboxControl.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxGroupFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormField.tsx","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CartSummarySkeleton.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","import { Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            (consignment.selectedShippingOption && consignment.selectedShippingOption.id) ||\n            consignment.selectedShippingOption?.type === 'custom',\n    );\n}\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","import { noop } from 'lodash';\n\nimport isBuyNowCart from './isBuyNowCart';\n\nexport default function navigateToOrderConfirmation(orderId?: number): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","import { forIn, isDate, padStart } from 'lodash';\n\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\n    [id: string]: any;\n}): Array<{ fieldId: string; fieldValue: string }> {\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\n\n    forIn(customFieldsObject, (value, key) => {\n        let fieldValue: string;\n\n        if (isDate(value)) {\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\n            const padDay = padStart(value.getDate().toString(), 2, '0');\n\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\n        } else {\n            fieldValue = value;\n        }\n\n        customFields.push({\n            fieldId: key,\n            fieldValue,\n        });\n    });\n\n    return customFields;\n}\n","import type { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import { Component, ReactNode } from 'react';\n\nimport ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children?: ReactNode;\n    fallback?: ReactNode;\n    logger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, logger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        if (logger) {\n            logger.log(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { isFunction, noop } from 'lodash';\nimport React, { createContext, FunctionComponent, memo, ReactNode, useMemo, useState } from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    ArraySchema,\n    date,\n    number,\n    NumberSchema,\n    object,\n    ObjectSchema,\n    Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.checkbox) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.checkbox\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                    // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode, useId } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n    children?: ReactNode;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => {\n    const describedBy = useId();\n\n    return (\n        <div\n            aria-describedby={describedBy}\n            className={classNames(\n                'alertBox',\n                additionalClassName,\n                { 'alertBox--info': type === AlertType.Info || !type },\n                { 'alertBox--error': type === AlertType.Error },\n                { 'alertBox--success': type === AlertType.Success },\n                { 'alertBox--warning': type === AlertType.Warning },\n            )}\n            data-test={testId}\n        >\n            <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n            <div\n                aria-live={type === AlertType.Error ? 'assertive' : 'polite'}\n                className=\"alertBox-column alertBox-message\"\n                id={describedBy}\n                role={type === AlertType.Error ? 'alert' : 'status'}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default Alert;\n","import { PaymentMethodId } from './paymentMethod';\n\nexport default function getProviderWithCustomCheckout(methodId?: string | null): string | undefined {\n    if (!methodId) {\n        return undefined;\n    }\n\n    if (methodId === PaymentMethodId.PaypalCommerce || methodId === PaymentMethodId.PaypalCommerceCreditCards) {\n        return PaymentMethodId.PayPalCommerceAcceleratedCheckout;\n    }\n\n    if (methodId === PaymentMethodId.Braintree) {\n        return PaymentMethodId.BraintreeAcceleratedCheckout;\n    }\n\n    return methodId;\n}\n","import React, { memo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Toggle } from '../../ui/toggle';\n\ninterface ShippingOptionAdditionalDescriptionProps {\n    description: string;\n}\n\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\n    ShippingOptionAdditionalDescriptionProps\n> = ({ description }) => {\n    const CHRACTER_LIMIT = 45;\n\n    return (\n        <div className=\"shippingOption-additionalDescription--container\">\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\n                {({ isOpen, toggle }) => (\n                    <>\n                        <span\n                            className={`shippingOption-additionalDescription ${\n                                isOpen\n                                    ? 'shippingOption-additionalDescription--expanded'\n                                    : 'shippingOption-additionalDescription--collapsed'\n                            }`}\n                        >\n                            {description}\n                        </span>\n                        {!isOpen && (\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\n                                <TranslatedString id=\"common.show_more\" />\n                            </a>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        </div>\n    );\n};\n\nexport default memo(ShippingOptionAdditionalDescription);\n","import { ShippingOption } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { ShopperCurrency } from '../../currency';\n\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\nimport './StaticShippingOption.scss';\n\ninterface StaticShippingOptionProps {\n    displayAdditionalInformation?: boolean;\n    method: ShippingOption;\n    shippingCostAfterDiscount?: number;\n}\n\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\n    displayAdditionalInformation = true,\n    method,\n    shippingCostAfterDiscount,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderShippingPrice = () => {\n        if (shippingCostAfterDiscount !== undefined && shippingCostAfterDiscount !== method.cost) {\n            return (\n                <>\n                    <span className=\"shippingOption-price-before-discount\">\n                        <ShopperCurrency amount={method.cost} />\n                    </span>\n                    <ShopperCurrency amount={shippingCostAfterDiscount} />\n                </>\n            );\n        }\n\n        return (\n            <ShopperCurrency amount={method.cost} />\n        )\n\n    }\n\n    return (\n        <div className=\"shippingOption shippingOption--alt\" data-test=\"static-shipping-option\">\n            {method.imageUrl && (\n                <span className=\"shippingOption-figure\">\n                    <img\n                        alt={method.description}\n                        className=\"shippingOption-img\"\n                        src={method.imageUrl}\n                    />\n                </span>\n            )}\n            <span className={classNames('shippingOption-desc', { 'body-medium': themeV2 })}>\n                {method.description}\n                {method.transitTime && (\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\n                )}\n                {method.additionalDescription && displayAdditionalInformation && (\n                    <ShippingOptionAdditionalDescription\n                        description={method.additionalDescription}\n                    />\n                )}\n            </span>\n            <span className={classNames('shippingOption-price', { 'body-medium': themeV2 })}>\n                {renderShippingPrice()}\n            </span>\n        </div>\n    );\n};\n\nexport default StaticShippingOption;\n","import { Cart } from '@bigcommerce/checkout-sdk';\n\nexport default function isBuyNowCart(cart?: Cart): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n    const params = new URLSearchParams(window.location.search);\n\n    return (\n        cart?.source === 'BUY_NOW' ||\n        params.get('action') === 'buy' ||\n        !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout')\n    );\n}\n","import CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.includes(id));\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { isMobileView } from '../../utils';\n\nimport { CartSummarySkeleton } from './CartSummarySkeleton';\n\nconst CheckoutPageSkeletonDesktop: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\" data-test=\"checkout-page-skeleton\">\n        <div className=\"layout-main\">\n            <div className=\"checkout-steps checkout-page-skeleton\">\n                <div className=\"title--first\" />\n                <div className=\"textbox\" />\n                <div className=\"subscription\">\n                    <div className=\"checkbox\" />\n                    <div className=\"description\" />\n                </div>\n                <div className=\"terms--1\" />\n                <div className=\"terms--2\" />\n                <div className=\"title\" />\n                <div className=\"title\" />\n                <div className=\"title\" />\n            </div>\n        </div>\n        <CartSummarySkeleton />\n    </div>\n);\n\nconst CheckoutPageSkeletonMobile: FunctionComponent = () => (\n    <div\n        className=\"layout optimizedCheckout-contentPrimary\"\n        data-test=\"checkout-page-skeleton-mobile\"\n    >\n        <div className=\"layout-main \">\n            <div className=\"checkout-page-skeleton\">\n                <div className=\"walletbutton--tagline\" />\n                <div className=\"walletbutton\" />\n                <div className=\"walletbutton--divider\" />\n                <div className=\"mobile-title--first\" />\n                <div className=\"textbox\" />\n                <div className=\"textbox\" />\n                <div className=\"terms--1\" />\n                <div className=\"mobile-title--2\" />\n                <div className=\"divider\" />\n                <div className=\"mobile-title--3\" />\n                <div className=\"divider\" />\n                <div className=\"mobile-title--4\" />\n                <div className=\"divider\" />\n                <div className=\"divider\" />\n            </div>\n            <div className=\"checkout-page-skeleton--cartdrawer\">\n                <div className=\"product\">\n                    <div className=\"animated-grey-box figure\" />\n                    <div className=\"details\">\n                        <div className=\"animated-grey-box name\" />\n                        <div className=\"animated-grey-box description\" />\n                    </div>\n                </div>\n                <div className=\"animated-grey-box more\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst CheckoutPageSkeleton: FunctionComponent = () => {\n    return isMobileView() ? <CheckoutPageSkeletonMobile /> : <CheckoutPageSkeletonDesktop />;\n};\n\nexport default CheckoutPageSkeleton;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface LoadingNotificationProps {\n    isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingNotification\">\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\n                <div className=\"spinner\" />\n\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\n                    <TranslatedString id=\"common.loading_text\" />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(LoadingNotification);\n","import React, { ReactElement, useEffect, useState } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { LoadingOverlay } from '@bigcommerce/checkout/ui';\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\nconst EmptyCartMessage = ({ waitInterval, loginUrl }: EmptyCartMessageProps): ReactElement => {\n    const [isWaiting, setIsWaiting] = useState(true);\n\n    useEffect(() => {\n        const waitToken = setTimeout(() => {\n            setIsWaiting(false);\n        }, waitInterval);\n\n        return () => {\n            clearTimeout(waitToken);\n        };\n    }, [waitInterval]);\n\n    return (\n        <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n            <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n        </LoadingOverlay>\n    );\n};\n\nexport default EmptyCartMessage;\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n}\n\nexport default CustomerViewType;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote walletbuttons-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div key={`skeleton-container-${i}`} />\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","const APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'chasepay',\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n    'googlepaypaypalcommerce',\n    'googlepaytdonlinemart',\n    'stripeocs',\n    'googlepaystripeocs',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[]): string[] => {\n    return methodIds.filter((methodId) => SUPPORTED_METHODS.includes(methodId));\n}\n","import { ComponentType } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveComponent } from '../common/resolver';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId,\n): ComponentType<CheckoutButtonProps> | undefined {\n    return resolveComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        require('../generated/checkoutButtons'),\n    );\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { ReactElement, useEffect } from 'react';\n\nconst WALLET_BUTTON_HEIGHT = 36;\n\nexport interface CheckoutButtonProps {\n    containerId: string;\n    methodId: string;\n    isShowingWalletButtonsOnTop?: boolean;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nconst CheckoutButton = ({\n    containerId,\n    methodId,\n    isShowingWalletButtonsOnTop,\n    deinitialize,\n    initialize,\n    onError,\n    onClick = noop,\n}: CheckoutButtonProps): ReactElement => {\n    useEffect(() => {\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\n            : {};\n\n        initialize({\n            methodId,\n            [methodId]: {\n                ...heightOption,\n                container: containerId,\n                onError,\n                onClick: () => onClick(methodId),\n            },\n        });\n\n        return () => {\n            deinitialize({ methodId });\n        };\n    }, []);\n\n    return <div id={containerId} />;\n};\n\nexport default CheckoutButton;\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst ApplePayButton: FunctionComponent<CheckoutButtonProps> = ({\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                applepay: {\n                    container: rest.containerId,\n                    shippingLabel: localeContext?.language.translate('cart.shipping_text'),\n                    subtotalLabel: localeContext?.language.translate('cart.subtotal_text'),\n                    onError,\n                    onClick: () => onClick(rest.methodId),\n                    onPaymentAuthorize: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} {...rest} />;\n};\n\nexport default ApplePayButton;\n","import { CustomerInitializeOptions, CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\nimport React, { FunctionComponent } from \"react\";\n\nimport CheckoutButton from \"./CheckoutButton\";\nimport { ApplePayButton } from \"./customWalletButton\";\n\ninterface CheckoutButtonV1ResolverProps {\n    methodId: string;\n    deinitialize(options: CustomerRequestOptions): void;\n    isShowingWalletButtonsOnTop?: boolean;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodName: string): void;\n}\n\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\n    isShowingWalletButtonsOnTop= false,\n    onError,\n    methodId,\n    ...rest\n}) => {\n    switch (methodId) {\n        case 'applepay':\n            return (\n                <ApplePayButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n    }\n\n    return <CheckoutButton\n            containerId={`${methodId}CheckoutButton`}\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n            key={methodId}\n            methodId={methodId}\n            onError={onError}\n            {...rest}\n        />;\n};\n\nexport default CheckoutButtonV1Resolver;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext, WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\ninterface CheckoutButtonContainerProps {\n    isPaymentStepActive: boolean;\n    checkEmbeddedSupport(methodIds: string[]): void;\n    onUnhandledError(error: Error): void;\n    onWalletButtonClick(methodId: string): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n    availableMethodIds: string[];\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n    isLoading: boolean;\n}\n\nconst paypalCommerceIds = [\n    'paypalcommerce',\n    'paypalcommercecredit',\n    'paypalcommercevenmo',\n];\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\n    {\n        availableMethodIds,\n        checkoutService,\n        checkoutState,\n        checkEmbeddedSupport,\n        isLoading,\n        isPaymentStepActive,\n        onUnhandledError,\n        onWalletButtonClick,\n    }) => {\n    const { language } = useLocale();\n    const { themeV2 } = useThemeContext();\n\n    try {\n        checkEmbeddedSupport(availableMethodIds);\n    } catch (error) {\n        return null;\n    }\n\n    const renderButtons = () => availableMethodIds.map((methodId) => {\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n            return null;\n        }\n\n        const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\n\n        if (!ResolvedCheckoutButton) {\n            return <CheckoutButtonV1Resolver\n                deinitialize={checkoutService.deinitializeCustomer}\n                initialize={checkoutService.initializeCustomer}\n                isShowingWalletButtonsOnTop={true}\n                key={methodId}\n                methodId={methodId}\n                onClick={onWalletButtonClick}\n                onError={onUnhandledError}\n            />\n        }\n\n        return <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onUnhandledError}\n                    onWalletButtonClick={onWalletButtonClick}\n                />;\n    });\n\n    return (\n        <div className='checkout-button-container'\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\n        >\n            <p className={classNames({\n                'sub-header': themeV2,\n            })}>\n                <TranslatedString id=\"remote.start_with_text\" />\n            </p>\n            <div className='checkout-buttons-auto-layout'>\n                <WalletButtonsContainerSkeleton buttonsCount={availableMethodIds.length} isLoading={isLoading}>\n                    <div className=\"checkoutRemote\">\n                        {renderButtons()}\n                    </div>\n                </WalletButtonsContainerSkeleton>\n            </div>\n            <div className='checkout-separator'>\n                <span className={classNames({'sub-header': themeV2})}>\n                    <TranslatedString id='remote.or_text' />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n    checkoutState,\n    checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n    const {\n        data: {\n            getConfig,\n            getCustomer,\n            isPaymentDataRequired,\n        },\n        statuses: {\n            isInitializedCustomer,\n        },\n        errors: {\n            getInitializeCustomerError,\n        }\n     } = checkoutState;\n    const config = getConfig();\n    const providers = config?.checkoutSettings.remoteCheckoutProviders ?? [];\n\n    const availableMethodIds = getSupportedMethodIds(providers);\n    const customer = getCustomer();\n\n    if (!isPaymentDataRequired()) {\n        return null;\n    }\n\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n        return null;\n    }\n\n    const isLoading = availableMethodIds.filter(\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\n    ).length !== availableMethodIds.length;\n\n    return {\n        checkoutService,\n        checkoutState,\n        availableMethodIds,\n        isLoading,\n    }\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({hasBoltAccount});\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { Checkout, Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './getSupportedMethods';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.includes(methodId);\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => !SUPPORTED_METHODS.includes(payment.providerId),\n    );\n}\n","import { CheckoutSelectors, CustomerRequestOptions, CustomError } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\nimport { isErrorWithType } from '../common/error';\nimport { isExperimentEnabled } from '../common/utility';\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\n\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\n\nexport interface CustomerInfoProps {\n    onSignOut?(event: CustomerSignOutEvent): void;\n    onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n    isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n    checkoutLink: string;\n    email: string;\n    methodId: string;\n    isRedirectExperimentEnabled: boolean;\n    isSignedIn: boolean;\n    isSigningOut: boolean;\n    logoutLink: string;\n    shouldRedirectToStorefrontForAuth: boolean;\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n    checkoutLink,\n    email,\n    methodId,\n    isSignedIn,\n    isSigningOut,\n    isRedirectExperimentEnabled,\n    logoutLink,\n    shouldRedirectToStorefrontForAuth,\n    onSignOut = noop,\n    onSignOutError = noop,\n    signOut,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const handleSignOut: () => Promise<void> = async () => {\n        try {\n            if (isRedirectExperimentEnabled && shouldRedirectToStorefrontForAuth) {\n                window.location.assign(`${logoutLink}?redirectTo=${checkoutLink}`);\n\n                return;\n            }\n\n            if (isSupportedSignoutMethod(methodId)) {\n                await signOut({ methodId });\n                onSignOut({ isCartEmpty: false });\n                window.location.reload();\n            } else {\n                await signOut();\n                onSignOut({ isCartEmpty: false });\n            }\n        } catch (error) {\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\n                onSignOut({ isCartEmpty: true });\n            } else {\n                onSignOutError(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\n            <div\n                className={classNames('customerView-body',\n                    { 'body-regular': themeV2 },\n                )}\n                data-test=\"customer-info\"\n            >\n                {email}\n            </div>\n\n            <div className=\"customerView-actions\">\n                {isSignedIn && (\n                    <Button\n                        className={themeV2 ? 'body-regular' : ''}\n                        isLoading={isSigningOut}\n                        onClick={handleSignOut}\n                        size={ButtonSize.Tiny}\n                        testId=\"sign-out-link\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"customer.sign_out_action\" />\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer, getConfig },\n        statuses: { isSigningOut },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const config = getConfig();\n\n    if (!billingAddress || !checkout || !customer || !config) {\n        return null;\n    }\n\n    const { checkoutSettings, links: { checkoutLink, logoutLink } } = config;\n\n    const isRedirectExperimentEnabled = isExperimentEnabled(checkoutSettings, 'CHECKOUT-9138.redirect_to_storefront_for_auth');\n\n    const methodId =\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n    return {\n        email: billingAddress.email || customer.email,\n        methodId,\n        isRedirectExperimentEnabled,\n        isSignedIn: canSignOut(customer, checkout, methodId),\n        isSigningOut: isSigningOut(),\n        logoutLink,\n        checkoutLink,\n        shouldRedirectToStorefrontForAuth: checkoutSettings.shouldRedirectToStorefrontForAuth,\n        signOut: checkoutService.signOutCustomer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import {\n    CheckoutSelectors,\n    CheckoutService,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\nexport interface CheckoutButtonListProps {\n    hideText?: boolean;\n    isInitializing?: boolean;\n    methodIds?: string[];\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onClick?(methodId: string): void;\n    onError?(error: Error): void;\n}\n\ninterface WithCheckoutCheckoutButtonListProps {\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n}\n\nconst CheckoutButtonList: FunctionComponent<WithCheckoutCheckoutButtonListProps & CheckoutButtonListProps> = ({\n    checkoutService,\n    checkoutState,\n    hideText = false,\n    isInitializing = false,\n    methodIds = [],\n    checkEmbeddedSupport,\n    deinitialize,\n    initialize,\n    onClick = noop,\n    onError,\n}) => {\n    const { language } = useLocale();\n    const supportedMethodIds = getSupportedMethodIds(methodIds);\n\n    if (supportedMethodIds.length === 0) {\n        return null;\n    }\n\n    if (checkEmbeddedSupport) {\n        try {\n            checkEmbeddedSupport(supportedMethodIds);\n        } catch (error) {\n            if (error instanceof Error && onError) {\n                onError(error);\n            } else {\n                throw error;\n            }\n\n            return null;\n        }\n    }\n\n    const renderButtons = () => {\n        return supportedMethodIds.map((methodId) => {\n            const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\n\n            if (!ResolvedCheckoutButton) {\n                return <CheckoutButtonV1Resolver\n                    deinitialize={deinitialize}\n                    initialize={initialize}\n                    isShowingWalletButtonsOnTop={false}\n                    key={methodId}\n                    methodId={methodId}\n                    onClick={onClick}\n                    onError={onClick}\n                />\n            }\n\n            return <ResolvedCheckoutButton\n                checkoutService={checkoutService}\n                checkoutState={checkoutState}\n                containerId={`${methodId}CheckoutButton`}\n                key={methodId}\n                language={language}\n                methodId={methodId}\n                onUnhandledError={onClick}\n                onWalletButtonClick={onClick}\n            />;\n        });\n    };\n\n    return (\n        <>\n            {!isInitializing && !hideText && (\n                <p>\n                    <TranslatedString id=\"remote.continue_with_text\" />\n                </p>\n            )}\n\n            <div className=\"checkoutRemote\">\n                {renderButtons()}\n            </div>\n        </>\n    );\n};\n\nfunction mapToCheckoutButtonListProps({\n  checkoutState,\n  checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonListProps | null {\n    return {\n        checkoutService,\n        checkoutState,\n    };\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonListProps)(CheckoutButtonList));\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\n// we need to keep this regex for login validation as accounts might have been created using this regex\nexport const EMAIL_REGEXP =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport { EMAIL_REGEXP } from './validationPatterns';\n\nexport interface EmailValidationSchemaOptions {\n    language: LanguageService;\n}\n\nexport default function getEmailValidationSchema({\n    language,\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\n    return object({\n        email: string()\n            .max(256)\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\n            .required(language.translate('customer.email_required_error')),\n    });\n}\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport {\n    CustomFormFieldValues,\n    getCustomFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport { PasswordRequirements } from './getPasswordRequirements';\n\nexport type CreateAccountFormValues = {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    acceptsMarketingEmails?: string[];\n    token?: string;\n} & CustomFormFieldValues;\n\nexport interface CreateCustomerValidationSchema {\n    formFields: FormField[];\n    language: LanguageService;\n    passwordRequirements: PasswordRequirements;\n}\n\n/* istanbul ignore next */ // Currently no limitation on new customer's name\nfunction getTranslateCreateCustomerError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    return (type, { label, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            return language.translate('customer.required_error', { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate('customer.max_error', { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate('customer.min_error', { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate('customer.invalid_characters_error', { label });\n        }\n    };\n}\n\nexport default memoize(function getCreateCustomerValidationSchema({\n    formFields,\n    language,\n    passwordRequirements: { description, numeric, alpha, minLength },\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\n    return object({\n        firstName: string().required(language.translate('address.first_name_required_error')),\n        lastName: string().required(language.translate('address.last_name_required_error')),\n        password: string()\n            .required(language.translate('customer.password_required_error') || description)\n            .matches(\n                numeric,\n                language.translate('customer.password_number_required_error') || description,\n            )\n            .matches(\n                alpha,\n                language.translate('customer.password_letter_required_error') || description,\n            )\n            .min(\n                minLength,\n                language.translate('customer.password_under_minimum_length_error') || description,\n            )\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\n    })\n        .concat(getEmailValidationSchema({ language }))\n        .concat(\n            getCustomFormFieldsValidationSchema({\n                formFields,\n                translate: getTranslateCreateCustomerError(language),\n            }),\n        );\n});\n","/* istanbul ignore file */\n\n// TODO: CHECKOUT-9010 Cover 'Customer registration failure due to using an existing email' in functional tests repo\nimport { FormField } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useMemo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { isRequestError } from '../common/error';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { DynamicFormField, Fieldset, Form } from '../ui/form';\n\nimport getCreateCustomerValidationSchema, {\n    CreateAccountFormValues,\n} from './getCreateCustomerValidationSchema';\nimport getPasswordRequirements from './getPasswordRequirements';\n\nimport './CreateAccountForm.scss';\n\nexport interface CreateAccountFormProps {\n    formFields: FormField[];\n    createAccountError?: Error;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    isCreatingAccount?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onSubmit(values: CreateAccountFormValues): void;\n}\n\nfunction getAcceptsMarketingEmailsDefault(defaultShouldSubscribe: boolean, requiresMarketingConsent: boolean): string[] {\n    if (defaultShouldSubscribe) {\n        return ['1'];\n    }\n\n    return requiresMarketingConsent ? [] : ['0'];\n}\n\nfunction transformFormFieldsData(formFields: FormField[], defaultShouldSubscribe: boolean): FormField[] {\n    return formFields.map(field => {\n        if (field.name === 'acceptsMarketingEmails') {\n            const { options } = field;\n            const items = options?.items || [];\n\n            const updatedItems = items.map(item => {\n                return {\n                    value: defaultShouldSubscribe ? '1' : item.value,\n                    label: item.label,\n                }\n            });\n\n            return {\n                ...field,\n                options: {\n                    items: updatedItems,\n                }\n            }\n        }\n\n        return field;\n    });\n}\n\nconst CreateAccountForm: FunctionComponent<\n    CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\n> = ({ fixNewsletterCheckboxExperimentEnabled, formFields, createAccountError, isCreatingAccount, isExecutingPaymentMethodCheckout, onCancel, isFloatingLabelEnabled, defaultShouldSubscribe }) => {\n    const { themeV2 } = useThemeContext();\n    const createAccountErrorMessage = useMemo(() => {\n        if (!createAccountError) {\n            return;\n        }\n\n        if (isRequestError(createAccountError) && createAccountError.status === 409) {\n            const splitMessage = createAccountError.message.split(':');\n\n            if (splitMessage.length > 1) {\n                return (\n                    <TranslatedString\n                        data={{ email: splitMessage[1].trim() }}\n                        id=\"customer.email_in_use_text\"\n                    />\n                );\n            }\n\n            return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\n        }\n\n        return createAccountError.message;\n    }, [createAccountError]);\n\n    const fields = fixNewsletterCheckboxExperimentEnabled ?\n        transformFormFieldsData(formFields, defaultShouldSubscribe): formFields;\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset>\n                {createAccountErrorMessage && (\n                    <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\n                )}\n                <div className=\"create-account-form\">\n                    {fields.map((field) => (\n                        <DynamicFormField\n                            autocomplete={field.name}\n                            extraClass={`dynamic-form-field--${field.name}`}\n                            field={field}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            key={field.id}\n                            parentFieldName={field.custom ? 'customFields' : undefined}\n                            themeV2={themeV2}\n                        />\n                    ))}\n                </div>\n            </Fieldset>\n\n            <div className=\"form-actions\">\n                <Button\n                    className={themeV2 ? 'body-bold' : ''}\n                    disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    id=\"checkout-customer-create\"\n                    isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    testId=\"customer-continue-create\"\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString id=\"customer.create_account_action\" />\n                </Button>\n\n                <a\n                    className={classNames('button optimizedCheckout-buttonSecondary',\n                        { 'body-bold': themeV2 })}\n                    data-test=\"customer-cancel-button\"\n                    href=\"#\"\n                    id=\"checkout-customer-cancel\"\n                    onClick={preventDefault(onCancel)}\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </a>\n            </div>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\n        handleSubmit: (values, { props: { onSubmit = noop } }) => {\n            onSubmit(values);\n        },\n        mapPropsToValues: ({ defaultShouldSubscribe, requiresMarketingConsent }) => ({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            customFields: {},\n            acceptsMarketingEmails: getAcceptsMarketingEmailsDefault(defaultShouldSubscribe, requiresMarketingConsent),\n        }),\n        validationSchema: ({\n            language,\n            formFields,\n        }: CreateAccountFormProps & WithLanguageProps) => {\n            const passwordRequirements = formFields.find(\n                ({ requirements }) => requirements,\n            )?.requirements;\n\n            if (!passwordRequirements) {\n                throw new Error('Password requirements missing');\n            }\n\n            const schema = getCreateCustomerValidationSchema({\n                language,\n                formFields,\n                passwordRequirements: getPasswordRequirements(passwordRequirements),\n            });\n\n            return schema;\n        },\n    })(CreateAccountForm),\n);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface EmailFieldProps {\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string): void;\n}\n\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <TextInput\n                {...props.field}\n                autoComplete={props.field.name}\n                id={props.field.name}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                themeV2={themeV2}\n                type=\"email\"\n            />\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\n\n    return (\n        <FormField\n            input={renderInput}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            labelContent={labelContent}\n            name=\"email\"\n            onChange={onChange}\n            themeV2={themeV2}\n        />\n    );\n};\n\nexport default memo(EmailField);\n","import { SignInEmail } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useMemo } from 'react';\n\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { LoadingSpinner } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Form } from '../ui/form';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\n\nexport interface EmailLoginFormProps {\n    email?: string;\n    isOpen: boolean;\n    isSendingEmail?: boolean;\n    emailHasBeenRequested?: boolean;\n    sentEmail?: SignInEmail;\n    sentEmailError?: any;\n    isFloatingLabelEnabled?: boolean;\n    onRequestClose?(): void;\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\n}\n\nexport interface EmailLoginFormValues {\n    email: string;\n}\n\nconst EmailLoginForm: FunctionComponent<\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\n> = ({\n    email,\n    isOpen,\n    isSendingEmail = false,\n    emailHasBeenRequested,\n    onRequestClose = noop,\n    sentEmailError,\n    sentEmail,\n    submitForm,\n    isFloatingLabelEnabled,\n    values: { email: formEmail },\n}) => {\n    const modalHeaderStringId = useMemo(() => {\n        if (emailHasBeenRequested) {\n            if (sentEmailError) {\n                return 'common.error_heading';\n            }\n\n            return 'login_email.sent_header';\n        }\n\n        if (email) {\n            return 'login_email.header_with_email';\n        }\n\n        return 'login_email.header';\n    }, [emailHasBeenRequested, sentEmailError, email]);\n\n    const okButton = useMemo(\n        () => (\n            <div className=\"modal-footer\">\n                <Button onClick={onRequestClose}>\n                    <TranslatedString id=\"common.ok_action\" />\n                </Button>\n            </div>\n        ),\n        [onRequestClose],\n    );\n\n    const footer = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return okButton;\n        }\n\n        if (emailHasBeenRequested && !sentEmailError) {\n            if (isSendingEmail) {\n                return <LoadingSpinner isLoading />;\n            }\n\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\n                return okButton;\n            }\n\n            return (\n                <p>\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\n                </p>\n            );\n        }\n\n        return (\n            <div className=\"modal-footer\">\n                <Button\n                    className=\"optimizedCheckout-buttonSecondary\"\n                    onClick={onRequestClose}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </Button>\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\n                    <TranslatedString id=\"login_email.send\" />\n                </Button>\n            </div>\n        );\n    }, [\n        sentEmailError,\n        emailHasBeenRequested,\n        okButton,\n        submitForm,\n        isSendingEmail,\n        onRequestClose,\n        sentEmail,\n    ]);\n\n    const error = useMemo(() => {\n        if (!sentEmailError) {\n            return null;\n        }\n\n        const { status } = sentEmailError;\n\n        return (\n            <Alert type={AlertType.Error}>\n                {status === 429 ? (\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\n                ) : (\n                    <TranslatedString\n                        id={\n                            status === 404\n                                ? 'login_email.error_not_found'\n                                : 'login_email.error_server'\n                        }\n                    />\n                )}\n            </Alert>\n        );\n    }, [sentEmailError]);\n\n    const form = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return null;\n        }\n\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\n            const { expiry, sent_email } = sentEmail;\n\n            return (\n                <p>\n                    <TranslatedHtml\n                        data={{\n                            minutes: Math.round(expiry / 60),\n                        }}\n                        id={\n                            sent_email === 'sign_in'\n                                ? 'login_email.sent_text'\n                                : 'customer.reset_password_before_login_error'\n                        }\n                    />\n                </p>\n            );\n        }\n\n        if (emailHasBeenRequested && !sentEmail) {\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\n        }\n\n        return (\n            <>\n                <p>\n                    <TranslatedString id=\"login_email.text\" />\n                </p>\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n            </>\n        );\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\n\n    return (\n        <Modal\n            additionalBodyClassName=\"modal--withText\"\n            additionalModalClassName=\"modal--medium\"\n            header={\n                <ModalHeader>\n                    <TranslatedString id={modalHeaderStringId} />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={true}\n        >\n            <Form>\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\n                {error}\n                {form}\n                {footer}\n            </Form>\n        </Modal>\n    );\n};\n\nexport default withLanguage(\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n        }),\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\n            onSendLoginEmail(values);\n        },\n        validationSchema: ({ language }: WithLanguageProps) =>\n            getEmailValidationSchema({ language }),\n    })(memo(EmailLoginForm)),\n);\n","import { FastlaneHostWindow } from './types';\n\nexport default function isFastlaneHostWindow(window: Window): window is FastlaneHostWindow {\n    /* eslint-disable no-prototype-builtins */\n    return window.hasOwnProperty('paypalFastlane') || window.hasOwnProperty('braintreeFastlane');\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isFastlaneHostWindow from './is-fastlane-window';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\nimport { FastlanePrivacySettings } from './types';\n\nimport './PayPalFastlaneWatermark.scss';\n\nconst PayPalFastlaneWatermark: FunctionComponent = () => {\n    const { checkoutState } = useCheckout();\n    const { getPaymentMethod, getConfig } = checkoutState.data;\n    const providerWithCustomCheckout =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const paymentMethod =\n        !!providerWithCustomCheckout &&\n        isPayPalFastlaneMethod(providerWithCustomCheckout) &&\n        getPaymentMethod(providerWithCustomCheckout);\n\n    const shouldRenderFastlaneWatermark =\n        isFastlaneHostWindow(window) &&\n        !!paymentMethod &&\n        !!paymentMethod.initializationData?.isFastlanePrivacySettingEnabled;\n\n    useEffect(() => {\n        if (shouldRenderFastlaneWatermark && isFastlaneHostWindow(window)) {\n            const fastlane = isBraintreeFastlaneMethod(providerWithCustomCheckout)\n                ? window.braintreeFastlane\n                : window.paypalFastlane;\n\n            void fastlane\n                .FastlaneWatermarkComponent({\n                    includeAdditionalInfo: true,\n                })\n                .then((result: FastlanePrivacySettings) => {\n                    result.render('#paypalFastlaneWatermark');\n                });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (shouldRenderFastlaneWatermark) {\n        return (\n            <div className=\"paypalFastlaneWatermark-container\">\n                <div data-test=\"paypalFastlaneWatermark\" id=\"paypalFastlaneWatermark\" />\n            </div>\n        );\n    }\n\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <></>;\n};\n\nexport default PayPalFastlaneWatermark;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { CheckboxFormField, Fieldset } from '../ui/form';\n\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <CheckboxFormField\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\n        name=\"privacyPolicy\"\n        testId=\"privacy-policy-checkbox\"\n        themeV2={themeV2}\n    />\n);\n\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\n        <PrivacyPolicyCheckboxFieldLink themeV2={themeV2} url={url} />\n    </Fieldset>\n);\n\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <p className={themeV2 ? 'body-regular' : ''}>\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\n    </p>\n);\n\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\n    url,\n    isExpressPrivacyPolicy,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    if (isExpressPrivacyPolicy) {\n        return <PrivacyPolicyAutoConsent themeV2={themeV2} url={url} />;\n    }\n\n    return <PrivacyPolicyFieldset themeV2={themeV2} url={url} />;\n};\n\nexport default memo(PrivacyPolicyField);\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { boolean, BooleanSchema, object, ObjectSchema } from 'yup';\n\nexport interface PrivacyPolicyValidatonSchemaProps {\n    isRequired: boolean;\n    language: LanguageService;\n}\n\nexport default function getPrivacyPolicyValidationSchema({\n    isRequired,\n    language,\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\n    const schemaFields: {\n        privacyPolicy?: BooleanSchema;\n    } = {};\n\n    if (isRequired) {\n        schemaFields.privacyPolicy = boolean().oneOf(\n            [true],\n            language.translate('privacy_policy.required_error'),\n        );\n    }\n\n    return object(schemaFields);\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Input, Label } from '../ui/form';\n\nexport type SubscribeFieldProps = FieldProps<boolean> & {\n    requiresMarketingConsent: boolean;\n};\n\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\n    field,\n    requiresMarketingConsent,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <>\n            <Input\n                {...field}\n                checked={field.value}\n                className=\"form-checkbox\"\n                id={field.name}\n                testId=\"should-subscribe-checkbox\"\n                type=\"checkbox\"\n                value={String(field.value)}\n            />\n\n            <Label\n                additionalClassName={themeV2 ? 'body-regular' : ''}\n                htmlFor={field.name}\n            >\n                <TranslatedHtml\n                    id={\n                        requiresMarketingConsent\n                            ? 'customer.guest_marketing_consent'\n                            : 'customer.guest_subscribe_to_newsletter_text'\n                    }\n                />\n            </Label>\n        </>\n    );\n}\n\nexport default memo(SubscribeField);\n","export class SubscribeSessionStorage {\n    static key = 'shouldSubscribe';\n\n    static setSubscribeStatus(shouldSubscribe: boolean) {\n        sessionStorage.setItem(this.key, `${shouldSubscribe}`)\n    }\n\n    static getSubscribeStatus(): boolean {\n        const value = sessionStorage.getItem(this.key);\n\n        return value === 'true';\n    }\n\n    static removeSubscribeStatus() {\n        sessionStorage.removeItem(this.key);\n    }\n}\n","import classNames from 'classnames';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect } from 'react';\nimport { object, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { PayPalFastlaneWatermark } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { isExperimentEnabled } from '../common/utility';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport EmailField from './EmailField';\nimport SubscribeField from './SubscribeField';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nfunction getShouldSubscribeValue(requiresMarketingConsent: boolean, defaultShouldSubscribe: boolean) {\n    if (SubscribeSessionStorage.getSubscribeStatus()) {\n        return true;\n    }\n\n    return requiresMarketingConsent ? false : defaultShouldSubscribe\n}\n\nexport interface GuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    continueAsGuestButtonLabelId: string;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    isLoading: boolean;\n    privacyPolicyUrl?: string;\n    isExpressPrivacyPolicy: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldShowEmailWatermark: boolean;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    onShowLogin(): void;\n}\n\nexport interface GuestFormValues {\n    email: string;\n    shouldSubscribe: boolean;\n}\n\nconst GuestForm: FunctionComponent<\n    GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\n> = ({\n    canSubscribe,\n    checkoutButtons,\n    continueAsGuestButtonLabelId,\n    defaultShouldSubscribe,\n    isLoading,\n    onChangeEmail,\n    onShowLogin,\n    privacyPolicyUrl,\n    requiresMarketingConsent,\n    isExpressPrivacyPolicy,\n    isFloatingLabelEnabled,\n    shouldShowEmailWatermark,\n    setFieldValue,\n}) => {\n    const {\n        checkoutState: {\n            data: { getConfig }\n        }\n    } = useCheckout();\n    const { themeV2 } = useThemeContext();\n\n    const config = getConfig();\n\n    const renderField = useCallback(\n        (fieldProps: FieldProps<boolean>) => (\n            <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\n        ),\n        [requiresMarketingConsent],\n    );\n\n    useEffect(() => {\n        void setFieldValue(\n            'shouldSubscribe',\n            getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            );\n    }, [requiresMarketingConsent, defaultShouldSubscribe]);\n\n    if (!config) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            shouldRedirectToStorefrontForAuth,\n        },\n        links: {\n            checkoutLink,\n            loginLink,\n        }\n    } = config;\n\n    const isRedirectExperimentEnabled = isExperimentEnabled(config.checkoutSettings, 'CHECKOUT-9138.redirect_to_storefront_for_auth');\n\n    const handleLogin: () => void = () => {\n        if (shouldRedirectToStorefrontForAuth && isRedirectExperimentEnabled) {\n            window.location.assign(`${loginLink}?redirectTo=${checkoutLink}`);\n\n            return;\n        }\n\n        return onShowLogin();\n    }\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-guest\"\n            testId=\"checkout-customer-guest\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.guest_customer_text\" />\n                    </Legend>\n                }\n            >\n                <div className=\"customerEmail-container\">\n                    <div className=\"customerEmail-body\">\n                        <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail}/>\n\n                        {shouldShowEmailWatermark && <PayPalFastlaneWatermark />}\n\n                        {(canSubscribe || requiresMarketingConsent) && (\n                            <BasicFormField name=\"shouldSubscribe\" render={renderField} />\n                        )}\n                    </div>\n\n                    <div\n                        className={classNames('form-actions customerEmail-action', {\n                            'customerEmail-floating--enabled': isFloatingLabelEnabled,\n                        })}\n                    >\n                        <Button\n                            className={classNames('customerEmail-button', {\n                                'body-bold': themeV2,\n                            })}\n                            id=\"checkout-customer-continue\"\n                            isLoading={isLoading}\n                            testId=\"customer-continue-as-guest-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </Button>\n                    </div>\n                </div>\n\n                {privacyPolicyUrl && (\n                    <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                )}\n\n                {!isLoading && (\n                    <p className={classNames('customer-login-link',\n                        { 'body-regular': themeV2 })}\n                    >\n                        <TranslatedString id=\"customer.login_text\" />{' '}\n                        <a\n                            data-test=\"customer-continue-button\"\n                            id=\"checkout-customer-login\"\n                            onClick={handleLogin}\n                            role=\"button\"\n                            tabIndex={0}\n                        >\n                            <TranslatedString id=\"customer.login_action\" />\n                        </a>\n                    </p>\n                )}\n\n                {checkoutButtons}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\n        mapPropsToValues: ({\n            email = '',\n            defaultShouldSubscribe = false,\n            requiresMarketingConsent,\n        }) => ({\n            email,\n            shouldSubscribe: getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            privacyPolicy: false,\n        }),\n        handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n            onContinueAsGuest(values);\n        },\n        validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: GuestFormProps & WithLanguageProps) => {\n            const email = string()\n                .email(language.translate('customer.email_invalid_error'))\n                .max(256)\n                .required(language.translate('customer.email_required_error'));\n\n            const baseSchema = object({ email });\n\n            if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                return baseSchema.concat(\n                    getPrivacyPolicyValidationSchema({\n                        isRequired: !!privacyPolicyUrl,\n                        language,\n                    }),\n                );\n            }\n\n            return baseSchema;\n        },\n    })(memo(GuestForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEye: FunctionComponent = () => (\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEye);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEyeSlash: FunctionComponent = () => (\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEyeSlash);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { FormField, TextInput } from '../ui/form';\nimport Label from '../ui/form/Label';\nimport { IconEye, IconEyeSlash } from '../ui/icon';\nimport { Toggle } from '../ui/toggle';\n\ninterface WithFloatingLabel {\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <Toggle openByDefault={false}>\n                {({ isOpen, toggle }) => (\n                    <div className=\"form-field-password\">\n                        <TextInput\n                            {...props.field}\n                            additionalClassName=\"form-input--withIcon\"\n                            id={props.field.name}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            themeV2={themeV2}\n                            type={isOpen ? 'text' : 'password'}\n                        />\n                        {isFloatingLabelEnabled && (\n                            <Label\n                                additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                                htmlFor={props.field.name}\n                                id={`${props.field.name}-label`}\n                                isFloatingLabelEnabled={true}\n                            >\n                                <TranslatedString id=\"customer.password_label\" />\n                            </Label>\n                        )}\n                        <a\n                            className=\"form-toggle-password form-input-icon\"\n                            href=\"#\"\n                            onClick={toggle}\n                        >\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\n                        </a>\n                    </div>\n                )}\n            </Toggle>\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\n\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\n};\n\nexport default memo(PasswordField);\n","import { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { Button, ButtonVariant, useThemeContext } from '@bigcommerce/checkout/ui';\nimport React from 'react';\n\ninterface RedirectToStorefrontLoginProps {\n    isDisabled: boolean;\n    isLoading: boolean;\n}\n\nexport const RedirectToStorefrontLogin: React.FC<RedirectToStorefrontLoginProps> = ({\n    isDisabled,\n    isLoading,\n}) => {\n    const { themeV2 } = useThemeContext();\n    const { checkoutState: { data: { getConfig } } } = useCheckout();\n\n    const config = getConfig();\n\n    if (!config) {\n        return null;\n    }\n\n    const { checkoutLink, loginLink } = config.links;\n\n    const handleRedirect = () => {\n        return window.location.assign(`${loginLink}?redirectTo=${checkoutLink}`);\n    }\n\n    return (\n        <Button\n            className={themeV2 ? 'body-bold' : ''}\n            disabled={isDisabled}\n            id=\"checkout-customer-continue\"\n            isLoading={isLoading}\n            onClick={handleRedirect}\n            testId=\"customer-continue-button\"\n            variant={ButtonVariant.Primary}\n        >\n            <TranslatedString id=\"customer.sign_in_action\" />\n        </Button>\n    );\n};\n","import classNames from 'classnames';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport CustomerViewType from './CustomerViewType';\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport mapErrorMessage from './mapErrorMessage';\nimport PasswordField from './PasswordField';\nimport { RedirectToStorefrontLogin } from './RedirectToStorefrontLogin';\n\nexport interface LoginFormProps {\n    canCancel?: boolean;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    forgotPasswordUrl: string;\n    isSignInEmailEnabled?: boolean;\n    isSendingSignInEmail?: boolean;\n    isSigningIn?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    signInError?: Error;\n    signInEmailError?: Error;\n    viewType?: Omit<CustomerViewType, 'guest'>;\n    passwordlessLogin?: boolean;\n    shouldShowCreateAccountLink?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldRedirectToStorefrontForAuth: boolean;\n    onCancel?(): void;\n    onCreateAccount?(): void;\n    onChangeEmail?(email: string): void;\n    onSignIn(data: LoginFormValues): void;\n    onSendLoginEmail?(): void;\n    onContinueAsGuest?(): void;\n}\n\nexport interface LoginFormValues {\n    email: string;\n    password: string;\n}\n\nconst LoginForm: FunctionComponent<\n    LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\n> = ({\n    canCancel,\n    continueAsGuestButtonLabelId,\n    forgotPasswordUrl,\n    email,\n    isSignInEmailEnabled,\n    isSigningIn,\n    isExecutingPaymentMethodCheckout,\n    language,\n    onCancel = noop,\n    onChangeEmail,\n    onContinueAsGuest,\n    onCreateAccount = noop,\n    onSendLoginEmail = noop,\n    signInError,\n    shouldShowCreateAccountLink,\n    isFloatingLabelEnabled,\n    shouldRedirectToStorefrontForAuth,\n    viewType = CustomerViewType.Login,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const changeEmailLink = useCallback(() => {\n        if (!email) {\n            return null;\n        }\n\n        return (\n            <p className=\"optimizedCheckout-contentSecondary\">\n                <TranslatedLink\n                    data={{ email }}\n                    id=\"customer.guest_could_login_change_email\"\n                    onClick={onCancel}\n                    testId=\"change-email\"\n                />\n            </p>\n        );\n    }, [email, onCancel]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.returning_customer_text\" />\n                    </Legend>\n                }\n            >\n                {signInError && (\n                    <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\n                        {mapErrorMessage(signInError, (key) => language.translate(key))}\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.SuggestedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.CancellableEnforcedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.EnforcedLogin && (\n                    <Alert type={AlertType.Error}>\n                        <TranslatedLink\n                            id=\"customer.guest_temporary_disabled\"\n                            onClick={onCreateAccount}\n                        />\n                    </Alert>\n                )}\n\n                {(viewType === CustomerViewType.Login ||\n                    viewType === CustomerViewType.EnforcedLogin) && (\n                    <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n                )}\n\n                {!shouldRedirectToStorefrontForAuth && <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />}\n\n                <p className={classNames('form-legend-container', { 'body-cta': themeV2 })}>\n                    <span>\n                        { isSignInEmailEnabled &&\n                            <TranslatedLink\n                                id=\"login_email.link\"\n                                onClick={ onSendLoginEmail }\n                                testId=\"customer-signin-link\"\n                            />\n                        }\n                        { !isSignInEmailEnabled && !shouldRedirectToStorefrontForAuth &&\n                            <a\n                                data-test=\"forgot-password-link\"\n                                href={ forgotPasswordUrl }\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <TranslatedString id=\"customer.forgot_password_action\" />\n                            </a>\n                        }\n                    </span>\n                    { viewType === CustomerViewType.Login && shouldShowCreateAccountLink &&\n                        <span>\n                            <TranslatedLink\n                                id=\"customer.create_account_to_continue_text\"\n                                onClick={onCreateAccount}\n                            />\n                        </span>\n                    }\n                </p>\n\n                <div className=\"form-actions\">\n                    {shouldRedirectToStorefrontForAuth ?\n                        <RedirectToStorefrontLogin\n                            isDisabled={Boolean(isSigningIn || isExecutingPaymentMethodCheckout)}\n                            isLoading={Boolean(isSigningIn || isExecutingPaymentMethodCheckout)}\n                        />\n                        :\n                        <Button\n                            className={themeV2 ? 'body-bold' : ''}\n                            disabled={isSigningIn || isExecutingPaymentMethodCheckout}\n                            id=\"checkout-customer-continue\"\n                            isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\n                            testId=\"customer-continue-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                    >\n                        <TranslatedString id=\"customer.sign_in_action\" />\n                    </Button>}\n\n                    {viewType === CustomerViewType.SuggestedLogin && (\n                        <a\n                            className={classNames('button optimizedCheckout-buttonSecondary',\n                                { 'body-bold': themeV2 })}\n                            data-test=\"customer-guest-continue\"\n                            href=\"#\"\n                            id=\"checkout-guest-continue\"\n                            onClick={preventDefault(onContinueAsGuest)}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </a>\n                    )}\n\n                    {canCancel &&\n                        viewType !== CustomerViewType.EnforcedLogin &&\n                        viewType !== CustomerViewType.SuggestedLogin && (\n                            <a\n                            className={classNames('button optimizedCheckout-buttonSecondary',\n                                { 'body-bold': themeV2 })}\n                                data-test=\"customer-cancel-button\"\n                                href=\"#\"\n                                id=\"checkout-customer-cancel\"\n                                onClick={preventDefault(onCancel)}\n                            >\n                                <TranslatedString\n                                    id={\n                                        viewType === CustomerViewType.CancellableEnforcedLogin\n                                            ? 'login_email.use_another_email'\n                                            : 'common.cancel_action'\n                                    }\n                                />\n                            </a>\n                        )}\n                </div>\n\n                {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n            password: '',\n        }),\n        handleSubmit: (values, { props: { onSignIn } }) => {\n            onSignIn(values);\n        },\n        validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\n            getEmailValidationSchema({ language }).concat(\n                object({\n                    password: string().required(\n                        language.translate('customer.password_required_error'),\n                    ),\n                }),\n            ),\n    })(memo(LoginForm)),\n);\n","export default function mapErrorMessage(\n    error: any, // TODO: Export `RequestError`\n    translate: (key: string) => string,\n): string {\n    const type = error.body && error.body.type;\n\n    switch (type) {\n        case 'throttled_login':\n            return translate('customer.sign_in_throttled_error');\n\n        case 'reset_password_before_login':\n            return translate('customer.reset_password_before_login_error');\n\n        default:\n            return translate('customer.sign_in_error');\n    }\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect, useState } from 'react';\nimport { object } from 'yup';\n\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport { GuestFormValues } from './GuestForm';\nimport SubscribeField from './SubscribeField';\n\nexport interface StripeGuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    step: CheckoutStepStatus;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    isLoading: boolean;\n    isExpressPrivacyPolicy: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onShowLogin(): void;\n}\n\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\n    continueAsGuestButtonLabelId,\n    isLoading,\n    initialize,\n    isExpressPrivacyPolicy,\n    deinitialize,\n    onChangeEmail,\n    onShowLogin,\n    onContinueAsGuest,\n    canSubscribe,\n    checkoutButtons,\n    defaultShouldSubscribe,\n    requiresMarketingConsent,\n    privacyPolicyUrl,\n    step,\n    status,\n    setFieldValue,\n}) => {\n\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\n    const [emailValue, setEmailValue] = useState('');\n    const [authentication, setAuthentication] = useState(false);\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\n    const [isNewAuth, setIsNewAuth] = useState(false);\n    const handleOnClickSubmitButton = () => {\n        onContinueAsGuest({\n            email: emailValue,\n            shouldSubscribe: !!status?.shouldSubscribe,\n        });\n    };\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\n        setFieldValue('email', email);\n        onChangeEmail(email);\n        setEmailValue(email);\n        setContinueAsAGuestButton(!email);\n        setAuthentication(authenticated);\n\n        if(!authenticated){\n            setIsNewAuth(true);\n        }\n    }, [setContinueAsAGuestButton, onChangeEmail]);\n\n    useEffect(() => {\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\n            handleOnClickSubmitButton();\n        }\n    }, [emailValue, authentication, isNewAuth]);\n\n    useEffect(() => {\n        if (status?.valSuccess) {\n            handleOnClickSubmitButton();\n        }\n    }, [status?.valSuccess]);\n\n    const handleLoading = useCallback((mounted: boolean) => {\n        setIsStripeLoading(mounted);\n    }, []);\n\n    const stripeDeinitialize = () => {\n        deinitialize({\n            methodId: 'stripeupe',\n        });\n    };\n\n    const stripeInitialize = () => {\n        initialize( {\n            methodId: 'stripeupe',\n            stripeupe: {\n                container: 'stripeupeLink',\n                onEmailChange: setEmailCallback,\n                isLoading: handleLoading,\n                getStyles: getStripeStyles,\n                gatewayId: 'stripeupe',\n                methodId: 'card',\n            },\n        })};\n\n    useEffect(() => {\n        stripeInitialize();\n\n        return () => stripeDeinitialize();\n    }, []);\n\n    useEffect(() => {\n        void setFieldValue(\n            'shouldSubscribe',\n            requiresMarketingConsent ? false : defaultShouldSubscribe,\n        );\n    }, [requiresMarketingConsent, defaultShouldSubscribe]);\n\n    const getStylesFromElement = (\n        id: string,\n        properties: string[]) => {\n        const parentContainer = document.getElementById(id);\n\n        if (parentContainer) {\n            return getAppliedStyles(parentContainer, properties);\n        }\n\n            return undefined;\n\n    };\n\n    const containerId = 'stripe-card-component-field';\n\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\n\n        return formLabel && formInput && formError ? {\n            labelText: formLabel.color,\n            fieldText: formInput.color,\n            fieldPlaceholderText: formInput.color,\n            fieldErrorText: formError.color,\n            fieldBackground: formInput['background-color'],\n            fieldInnerShadow: formInput['box-shadow'],\n            fieldBorder: formInput['border-color'],\n        } : undefined;\n    }, [])\n\n    const renderCheckoutThemeStylesForStripeUPE = () => {\n        return (\n            <div\n                className=\"optimizedCheckout-form-input\"\n                id={ `${containerId}--input` }\n            >\n                <div\n                    className=\"form-field--error\"\n                >\n                    <div\n                        className=\"optimizedCheckout-form-label\"\n                        id={ `${containerId}--error` }\n                    />\n                </div>\n                <div\n                    className=\"optimizedCheckout-form-label\"\n                    id={ `${containerId}--label` }\n                />\n            </div>\n        );\n    };\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\n\n    return (\n        <>\n            <Form\n                className=\"checkout-form\"\n                id=\"checkout-customer-guest\"\n                testId=\"checkout-customer-guest\"\n            >\n                <div className=\"checkout-form\" style={ {display: isStripeLoading ? 'none' : undefined} }>\n                    <Fieldset\n                        legend={ !authentication &&\n                            <Legend hidden>\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\n                            </Legend>\n                        }\n                    >\n                        <div className=\"customerEmail-container\">\n                            <div className=\"customerEmail-body\">\n                                <div id=\"stripeupeLink\"/>\n                                <br/>\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\n                                    name=\"shouldSubscribe\"\n                                    render={ renderField }\n                                /> }\n                            </div>\n\n                            <div className=\"form-actions customerEmail-action\">\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\n                                    className=\"stripeCustomerEmail-button\"\n                                    disabled={ continueAsAGuestButton }\n                                    id=\"stripe-checkout-customer-continue\"\n                                    isLoading={ isLoading }\n                                    testId=\"stripe-customer-continue-as-guest-button\"\n                                    type=\"submit\"\n                                    variant={ ButtonVariant.Primary }\n                                >\n                                    <TranslatedString id={ buttonText }/>\n                                </Button> }\n                            </div>\n                        </div>\n\n                        {privacyPolicyUrl && (\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                        )}\n\n                        {\n                            !isLoading && <p>\n                                <TranslatedString id=\"customer.login_text\"/>\n                                { ' ' }\n                                <a\n                                    data-test=\"customer-continue-button\"\n                                    id=\"checkout-customer-login\"\n                                    onClick={ onShowLogin }\n                                    role=\"button\"\n                                    tabIndex={0}\n                                >\n                                    <TranslatedString id=\"customer.login_action\"/>\n                                </a>\n                            </p>\n                        }\n                        { !authentication && checkoutButtons }\n                    </Fieldset>\n                </div>\n                { renderCheckoutThemeStylesForStripeUPE() }\n            </Form>\n        </>\n    );\n};\n\nexport default withLanguage(\n    withFormik<StripeGuestFormProps, GuestFormValues>({\n            mapPropsToValues: ({\n                email = '',\n                defaultShouldSubscribe = false,\n                requiresMarketingConsent,\n            }) => ({\n                email,\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n                privacyPolicy: false,\n            }),\n            handleSubmit: ( values, { setStatus }) => {\n                setStatus({\n                    valSuccess: true,\n                    shouldSubscribe: values.shouldSubscribe,\n                  });\n            },\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                    return getPrivacyPolicyValidationSchema({\n                            isRequired: !!privacyPolicyUrl,\n                            language,\n                        })\n                }\n\n                return object({});\n            },\n        })(memo(StripeGuestForm))\n)\n\n","import {\n    CheckoutPaymentMethodExecutedOptions,\n    CheckoutSelectors,\n    CustomerAccountRequestBody,\n    CustomerCredentials,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n    FormField,\n    GuestCredentials,\n    SignInEmail,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { Component, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneMethod } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { isErrorWithType } from '../common/error';\nimport { isFloatingLabelEnabled } from '../common/utility';\nimport getProviderWithCustomCheckout from '../payment/getProviderWithCustomCheckout';\nimport { PaymentMethodId } from '../payment/paymentMethod';\n\nimport CheckoutButtonList from './CheckoutButtonList';\nimport CreateAccountForm from './CreateAccountForm';\nimport CustomerViewType from './CustomerViewType';\nimport EmailLoginForm, { EmailLoginFormValues } from './EmailLoginForm';\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\nimport GuestForm, { GuestFormValues } from './GuestForm';\nimport LoginForm from './LoginForm';\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\nimport StripeGuestForm from './StripeGuestForm';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nexport interface CustomerProps {\n    viewType: CustomerViewType;\n    step: CheckoutStepStatus;\n    isEmbedded?: boolean;\n    isSubscribed: boolean;\n    isWalletButtonsOnTop: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    onChangeViewType?(viewType: CustomerViewType): void;\n    onAccountCreated?(): void;\n    onContinueAsGuest?(): void;\n    onContinueAsGuestError?(error: Error): void;\n    onReady?(): void;\n    onSubscribeToNewsletter(subscribe: boolean): void;\n    onSignIn?(): void;\n    onSignInError?(error: Error): void;\n    onUnhandledError?(error: Error): void;\n    onWalletButtonClick?(methodName: string): void;\n}\n\nexport interface WithCheckoutCustomerProps {\n    canSubscribe: boolean;\n    customerAccountFields: FormField[];\n    checkoutButtonIds: string[];\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    firstName?: string;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    forgotPasswordUrl: string;\n    isContinuingAsGuest: boolean;\n    isCreatingAccount: boolean;\n    isExecutingPaymentMethodCheckout: boolean;\n    isGuestEnabled: boolean;\n    hasBillingId: boolean;\n    isInitializing: boolean;\n    isSendingSignInEmail: boolean;\n    isSignInEmailEnabled: boolean;\n    isSigningIn: boolean;\n    privacyPolicyUrl?: string;\n    providerWithCustomCheckout?: string;\n    requiresMarketingConsent: boolean;\n    signInEmail?: SignInEmail;\n    signInEmailError?: Error;\n    isAccountCreationEnabled: boolean;\n    isPaymentDataRequired: boolean;\n    createAccountError?: Error;\n    signInError?: Error;\n    isFloatingLabelEnabled?: boolean;\n    isExpressPrivacyPolicy: boolean;\n    shouldRedirectToStorefrontForAuth: boolean;\n    clearError(error: Error): Promise<CheckoutSelectors>;\n    continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\n    signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\n    createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n    shouldRenderStripeForm: boolean;\n}\n\nexport interface CustomerState {\n    isEmailLoginFormOpen: boolean;\n    isReady: boolean;\n    hasRequestedLoginEmail: boolean;\n}\n\nclass Customer extends Component<CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps, CustomerState> {\n    state: CustomerState = {\n        isEmailLoginFormOpen: false,\n        isReady: false,\n        hasRequestedLoginEmail: false,\n    };\n\n    private draftEmail?: string;\n\n    async componentDidMount(): Promise<void> {\n        const {\n            initializeCustomer,\n            email,\n            onReady = noop,\n            onUnhandledError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        this.draftEmail = email;\n\n        try {\n            if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n                await initializeCustomer({methodId: providerWithCustomCheckout});\n            }\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        this.setState({ isReady: true });\n\n        onReady();\n    }\n\n    async componentWillUnmount(): Promise<void> {\n        const {\n            deinitializeCustomer = noop,\n            providerWithCustomCheckout,\n            onUnhandledError = noop,\n        } = this.props;\n\n        try {\n            await deinitializeCustomer({ methodId: providerWithCustomCheckout });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { viewType } = this.props;\n        const { isEmailLoginFormOpen, isReady } = this.state;\n        const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\n        const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\n        const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\n\n        if (!isReady) {\n            return null;\n        }\n\n        return (\n            <>\n                {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\n                {shouldRenderLoginForm && this.renderLoginForm()}\n                {shouldRenderGuestForm && this.renderGuestForm()}\n                {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\n            </>\n        );\n    }\n\n    private renderGuestForm(): ReactNode {\n        const {\n            canSubscribe,\n            checkEmbeddedSupport,\n            checkoutButtonIds,\n            deinitializeCustomer,\n            email,\n            initializeCustomer,\n            isContinuingAsGuest = false,\n            isExecutingPaymentMethodCheckout = false,\n            isInitializing = false,\n            isSubscribed,\n            isWalletButtonsOnTop,\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            onUnhandledError = noop,\n            onWalletButtonClick = noop,\n            step,\n            isFloatingLabelEnabled,\n            isExpressPrivacyPolicy,\n            isPaymentDataRequired,\n            shouldRenderStripeForm,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        const checkoutButtons = isWalletButtonsOnTop || !isPaymentDataRequired\n          ? null\n          : <CheckoutButtonList\n            checkEmbeddedSupport={checkEmbeddedSupport}\n            deinitialize={deinitializeCustomer}\n            initialize={initializeCustomer}\n            isInitializing={isInitializing}\n            methodIds={checkoutButtonIds}\n            onClick={onWalletButtonClick}\n            onError={onUnhandledError}\n          />;\n\n        const isLoadingGuestForm = isContinuingAsGuest || isExecutingPaymentMethodCheckout;\n\n        return (\n            shouldRenderStripeForm ?\n                <StripeGuestForm\n                    canSubscribe={canSubscribe}\n                    checkoutButtons={checkoutButtons}\n                    continueAsGuestButtonLabelId=\"customer.continue\"\n                    defaultShouldSubscribe={isSubscribed}\n                    deinitialize={deinitializeCustomer}\n                    email={this.draftEmail || email}\n                    initialize={initializeCustomer}\n                    isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                    isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\n                    onChangeEmail={this.handleChangeEmail}\n                    onContinueAsGuest={this.handleContinueAsGuest}\n                    onShowLogin={this.handleShowLogin}\n                    privacyPolicyUrl={privacyPolicyUrl}\n                    requiresMarketingConsent={requiresMarketingConsent}\n                    step={step}\n                />\n                :\n            <GuestForm\n                canSubscribe={canSubscribe}\n                checkoutButtons={checkoutButtons}\n                continueAsGuestButtonLabelId=\"customer.continue\"\n                defaultShouldSubscribe={isSubscribed}\n                email={this.draftEmail || email}\n                isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isLoading={isLoadingGuestForm}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.handleContinueAsGuest}\n                onShowLogin={this.handleShowLogin}\n                privacyPolicyUrl={privacyPolicyUrl}\n                requiresMarketingConsent={requiresMarketingConsent}\n                shouldShowEmailWatermark={isPayPalFastlaneMethod(providerWithCustomCheckout)}\n            />\n        );\n    }\n\n    private renderEmailLoginLinkForm(): ReactNode {\n        const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\n\n        const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\n            this.props;\n\n        return (\n            <EmailLoginForm\n                email={this.draftEmail}\n                emailHasBeenRequested={hasRequestedLoginEmail}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isOpen={isEmailLoginFormOpen}\n                isSendingEmail={isSendingSignInEmail}\n                onRequestClose={this.closeEmailLoginFormForm}\n                onSendLoginEmail={this.handleSendLoginEmail}\n                sentEmail={signInEmail}\n                sentEmailError={signInEmailError}\n            />\n        );\n    }\n\n    private closeEmailLoginFormForm: () => void = () => {\n        this.setState({\n            isEmailLoginFormOpen: false,\n            hasRequestedLoginEmail: false,\n        });\n    };\n\n    private renderCreateAccountForm(): ReactNode {\n        const {\n            customerAccountFields,\n            isExecutingPaymentMethodCheckout,\n            isCreatingAccount,\n            createAccountError,\n            requiresMarketingConsent,\n            isFloatingLabelEnabled,\n            defaultShouldSubscribe,\n            fixNewsletterCheckboxExperimentEnabled,\n        } = this.props;\n\n        return (\n            <CreateAccountForm\n                createAccountError={createAccountError}\n                defaultShouldSubscribe={defaultShouldSubscribe}\n                fixNewsletterCheckboxExperimentEnabled={fixNewsletterCheckboxExperimentEnabled}\n                formFields={customerAccountFields}\n                isCreatingAccount={isCreatingAccount}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                onCancel={this.handleCancelCreateAccount}\n                onSubmit={this.handleCreateAccount}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderLoginForm(): ReactNode {\n        const {\n            isEmbedded,\n            email,\n            forgotPasswordUrl,\n            isSignInEmailEnabled,\n            isGuestEnabled,\n            isSendingSignInEmail,\n            isSigningIn,\n            isExecutingPaymentMethodCheckout,\n            isAccountCreationEnabled,\n            signInError,\n            isFloatingLabelEnabled,\n            viewType,\n            shouldRedirectToStorefrontForAuth,\n        } = this.props;\n\n        return (\n            <LoginForm\n                canCancel={isGuestEnabled}\n                continueAsGuestButtonLabelId=\"customer.continue_as_guest_action\"\n                email={this.draftEmail || email}\n                forgotPasswordUrl={forgotPasswordUrl}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isSendingSignInEmail={isSendingSignInEmail}\n                isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\n                isSigningIn={isSigningIn}\n                onCancel={this.handleCancelSignIn}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\n                onCreateAccount={this.showCreateAccount}\n                onSendLoginEmail={this.handleEmailLoginClicked}\n                onSignIn={this.handleSignIn}\n                shouldRedirectToStorefrontForAuth={shouldRedirectToStorefrontForAuth}\n                shouldShowCreateAccountLink={isAccountCreationEnabled}\n                signInError={signInError}\n                viewType={viewType}\n            />\n        );\n    }\n\n    private handleEmailLoginClicked: () => void = async () => {\n        const { viewType } = this.props;\n\n        try {\n            if (viewType !== CustomerViewType.Login && this.draftEmail) {\n                await this.handleSendLoginEmail({ email: this.draftEmail });\n            }\n        } finally {\n            this.setState({\n                isEmailLoginFormOpen: true,\n            });\n        }\n    };\n\n    private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\n        values,\n    ) => {\n        const { sendLoginEmail } = this.props;\n\n        try {\n            await sendLoginEmail(values);\n        } catch (error) {\n        // Need to write catch block since one test covers the case when `sendLoginEmail` fails\n        } finally {\n            this.setState({\n                hasRequestedLoginEmail: true,\n            });\n        }\n    };\n\n    private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\n        formValues,\n    ) => {\n        const {\n            canSubscribe,\n            continueAsGuest,\n            hasBillingId,\n            defaultShouldSubscribe,\n            onChangeViewType = noop,\n            onContinueAsGuest = noop,\n            onContinueAsGuestError = noop,\n            onSubscribeToNewsletter,\n        } = this.props;\n\n        const email = formValues.email.trim();\n        const updateSubscriptionWhenUnchecked =\n            hasBillingId || defaultShouldSubscribe ? false : undefined;\n\n        try {\n            const { data } = await continueAsGuest({\n                email,\n                acceptsMarketingNewsletter:\n                    canSubscribe && formValues.shouldSubscribe\n                        ? true\n                        : updateSubscriptionWhenUnchecked,\n                acceptsAbandonedCartEmails: formValues.shouldSubscribe\n                    ? true\n                    : updateSubscriptionWhenUnchecked,\n            });\n\n            onSubscribeToNewsletter(formValues.shouldSubscribe);\n\n            SubscribeSessionStorage.setSubscribeStatus(formValues.shouldSubscribe);\n\n            const customer = data.getCustomer();\n\n            const paymentProviderCustomer = data.getPaymentProviderCustomer();\n\n            if (customer && customer.shouldEncourageSignIn && customer.isGuest && !paymentProviderCustomer?.stripeLinkAuthenticationState) {\n                return onChangeViewType(CustomerViewType.SuggestedLogin);\n            }\n\n            await this.executePaymentMethodCheckoutOrContinue();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            if (\n                isErrorWithType(error) &&\n                (error.type === 'update_subscriptions' ||\n                    error.type === 'payment_method_client_invalid')\n            ) {\n                this.draftEmail = undefined;\n\n                onContinueAsGuest();\n            }\n\n            if (isErrorWithType(error) && error.status === 429) {\n                return onChangeViewType(CustomerViewType.EnforcedLogin);\n            }\n\n            if (isErrorWithType(error) && error.status === 403) {\n                return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\n            }\n\n            onContinueAsGuestError(error);\n        }\n    };\n\n    private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\n        credentials,\n    ) => {\n        const {\n            signIn,\n            onSignIn = noop,\n            onSignInError = noop,\n        } = this.props;\n\n        try {\n            await signIn(credentials);\n\n            onSignIn();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            onSignInError(error);\n        }\n    };\n\n    private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\n        const {\n            createAccount = noop,\n            onAccountCreated = noop,\n        } = this.props;\n\n        await createAccount(mapCreateAccountFromFormValues(values));\n\n        onAccountCreated();\n    };\n\n    private showCreateAccount: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.CreateAccount);\n    };\n\n    private handleCancelCreateAccount: () => void = () => {\n        const { clearError, onChangeViewType = noop, createAccountError } = this.props;\n\n        if (createAccountError) {\n            clearError(createAccountError);\n        }\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private handleCancelSignIn: () => void = () => {\n        const { clearError, onChangeViewType = noop, signInError } = this.props;\n\n        if (signInError) {\n            clearError(signInError);\n        }\n\n        onChangeViewType(CustomerViewType.Guest);\n    };\n\n    private handleChangeEmail: (email: string) => void = (email) => {\n        const { analyticsTracker } = this.props;\n\n        this.draftEmail = email;\n        analyticsTracker.customerEmailEntry(email);\n    };\n\n    private handleShowLogin: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private executePaymentMethodCheckoutOrContinue: () => void = async () => {\n        const {\n            executePaymentMethodCheckout,\n            onContinueAsGuest = noop,\n            providerWithCustomCheckout\n        } = this.props;\n\n        if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onContinueAsGuest,\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n            });\n        } else {\n            onContinueAsGuest();\n        }\n    };\n\n    private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.customerPaymentMethodExecuted(payload);\n    }\n}\n\nexport function mapToWithCheckoutCustomerProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\n    const {\n        data: {\n            getBillingAddress,\n            getCustomerAccountFields,\n            getCheckout,\n            getCustomer,\n            getCart,\n            getSignInEmail,\n            getConfig,\n            isPaymentDataRequired,\n        },\n        errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\n        statuses: {\n            isContinuingAsGuest,\n            isExecutingPaymentMethodCheckout,\n            isInitializingCustomer,\n            isSigningIn,\n            isSendingSignInEmail,\n            isCreatingCustomerAccount,\n        },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const cart = getCart();\n    const signInEmail = getSignInEmail();\n    const config = getConfig();\n\n    if (!checkout || !config || !cart) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            isSignInEmailEnabled,\n            isAccountCreationEnabled,\n            isExpressPrivacyPolicy,\n            features,\n            shouldRedirectToStorefrontForAuth\n        },\n    } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\n\n    const providerWithCustomCheckout = getProviderWithCustomCheckout(\n        config.checkoutSettings.providerWithCustomCheckout,\n    );\n\n    const fixNewsletterCheckboxExperimentEnabled = features['CHECKOUT-8033.fix_newletter_checkbox'];\n\n    return {\n        customerAccountFields: getCustomerAccountFields(),\n        canSubscribe: config.shopperConfig.showNewsletterSignup,\n        checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\n        clearError: checkoutService.clearError,\n        createAccount: checkoutService.createCustomerAccount,\n        continueAsGuest: checkoutService.continueAsGuest,\n        sendLoginEmail: checkoutService.sendSignInEmail,\n        defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        email: billingAddress?.email || customer?.email,\n        firstName: customer?.firstName,\n        fixNewsletterCheckboxExperimentEnabled,\n        forgotPasswordUrl: config.links.forgotPasswordLink,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isCreatingAccount: isCreatingCustomerAccount(),\n        createAccountError: getCreateCustomerAccountError(),\n        hasBillingId: !!billingAddress?.id,\n        isContinuingAsGuest: isContinuingAsGuest(),\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        isInitializing: isInitializingCustomer(),\n        isSignInEmailEnabled,\n        isAccountCreationEnabled,\n        isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\n        isSigningIn: isSigningIn(),\n        isSendingSignInEmail: isSendingSignInEmail(),\n        signInEmail,\n        signInEmailError: getSignInEmailError(),\n        privacyPolicyUrl,\n        providerWithCustomCheckout,\n        requiresMarketingConsent,\n        signIn: checkoutService.signInCustomer,\n        signInError: getSignInError(),\n        isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\n        isExpressPrivacyPolicy,\n        isPaymentDataRequired: isPaymentDataRequired(),\n        shouldRenderStripeForm: providerWithCustomCheckout === PaymentMethodId.StripeUPE && shouldUseStripeLinkByMinimumAmount(cart),\n        shouldRedirectToStorefrontForAuth,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\n","import { CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\n\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\n\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\n\nexport default function mapCreateAccountFromFormValues({\n    acceptsMarketingEmails,\n    customFields,\n    ...values\n}: CreateAccountFormValues): CustomerAccountRequestBody {\n    return {\n        ...values,\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { Banner, Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\n\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\nimport './StaticConsignment.scss';\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\n\ninterface StaticConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    compactView?: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\n    consignment,\n    cart,\n    compactView,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const { shippingAddress: address, selectedShippingOption } = consignment;\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    return (\n        <div className=\"staticConsignment\">\n            <StaticAddress address={address} type={AddressType.Shipping} />\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticConsignment);\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { localizeAddress, TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport ConsignmentLineItemDetail from './ConsignmentLineItemDetail';\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\n\nimport './StaticMultiConsignment.scss';\n\ninterface StaticMultiConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    consignmentNumber: number;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticMultiConsignment: FunctionComponent<StaticMultiConsignmentProps> = ({\n    consignment,\n    cart,\n    consignmentNumber,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const {\n        checkoutState: {\n            data: { getShippingCountries },\n        },\n    } = useCheckout();\n    const { themeV2 } = useThemeContext();\n\n    const { shippingAddress: addressWithoutLocalization, selectedShippingOption } = consignment;\n    const address = localizeAddress(addressWithoutLocalization, getShippingCountries());\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticMultiConsignment\">\n            <h3 className={classNames('staticMultiConsignment-header',\n                { 'body-bold': themeV2 })}>\n                <TranslatedString data={{ consignmentNumber }} id=\"shipping.multishipping_consignment_index_heading\" />\n            </h3>\n\n            <div className=\"checkout-address--static\">\n                <p className={classNames('address-entry',\n                    { 'sub-text': themeV2 })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n                <div className=\"address-details\">\n                    <p className={classNames('street-address address-entry',\n                        { 'sub-text': themeV2 })}>\n                        <span className=\"address-line-1\">{address.address1}</span>\n                        {address.address2 && (\n                            <span className=\"address-line-2\">{`, ${address.address2}`}</span>\n                        )}\n                    </p>\n\n                    <p className={classNames('address-entry',\n                        { 'sub-text': themeV2 })}>\n                        {address.city && <span className=\"locality\">{address.city}</span>}\n                        {address.localizedProvince && (\n                            <span className=\"region\">{`, ${address.localizedProvince}`}</span>\n                        )}\n                        {address.localizedCountry && (\n                            <span className=\"country-name\">{`, ${address.localizedCountry}`}</span>\n                        )}\n                        {address.postalCode && (\n                            <span className=\"postal-code\">{` ${address.postalCode}`}</span>\n                        )}\n                    </p>\n                </div>\n            </div>\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            <div className=\"staticConsignment-items\">\n                <span className={themeV2 ? 'body-bold' : ''}>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n                </span>\n\n                <ConsignmentLineItemDetail isMultiShippingSummary lineItems={lineItems} />\n        </div>\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticMultiConsignment);\n","\nimport { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport StaticConsignment from './StaticConsignment';\nimport StaticMultiConsignment from './StaticMultiConsignment';\n\ninterface ShippingSummaryProps {\n    isShippingDiscountDisplayEnabled: boolean;\n    isMultiShippingMode: boolean;\n    consignments: Consignment[];\n    cart: Cart;\n}\n\nconst ShippingSummary: FunctionComponent<ShippingSummaryProps> = ({\n    isShippingDiscountDisplayEnabled,\n    isMultiShippingMode,\n    consignments,\n    cart\n}) => {\n    if (isMultiShippingMode) {\n        return (\n            <>\n                {consignments.map((consignment, index) => (\n                    <div className=\"staticMultiConsignmentContainer\" key={consignment.id}>\n                        <StaticMultiConsignment\n                            cart={cart}\n                            consignment={consignment}\n                            consignmentNumber={index + 1}\n                            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                        />\n                    </div>\n                ))}\n            </>\n        );\n    }\n\n    return (\n        <>\n            {consignments.map((consignment) => (\n                <div className=\"staticConsignmentContainer\" key={consignment.id}>\n                    <StaticConsignment\n                        cart={cart}\n                        compactView={consignments.length < 2}\n                        consignment={consignment}\n                        isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                    />\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default memo(ShippingSummary);\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepHeaderProps {\n    heading: ReactNode;\n    isActive?: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n    heading,\n    isActive,\n    isComplete,\n    isEditable,\n    onEdit,\n    summary,\n    type,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <div\n            className={classNames('stepHeader', {\n                'is-readonly': !isEditable,\n                'is-clickable': isEditable && !isActive,\n            })}\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n        >\n            <div className=\"stepHeader-figure stepHeader-column\">\n                <IconCheck\n                    additionalClassName={classNames(\n                        'stepHeader-counter',\n                        'optimizedCheckout-step',\n                        { 'stepHeader-counter--complete': isComplete },\n                    )}\n                />\n\n                <h2\n                    className={classNames('stepHeader-title optimizedCheckout-headingPrimary',\n                        { 'header': themeV2 && (isActive || isComplete) },\n                        { 'header-secondary': themeV2 && !isActive && !isComplete })}\n                >{heading}</h2>\n            </div>\n\n            <div\n                className={classNames('stepHeader-body stepHeader-column optimizedCheckout-contentPrimary',\n                    { 'body-regular': themeV2 })}\n                data-test=\"step-info\"\n            >\n                {!isActive && isComplete && summary}\n            </div>\n\n            {isEditable && !isActive && (\n                <div className=\"stepHeader-actions stepHeader-column\">\n                    <Button\n                        aria-expanded={isActive}\n                        className={classNames({ 'body-regular': themeV2 })}\n                        size={ButtonSize.Tiny}\n                        testId=\"step-edit-button\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"common.edit_action\" />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { ReactElement, ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n    children?: ReactNode;\n    heading?: ReactNode;\n    isActive?: boolean;\n    isBusy: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    suggestion?: ReactNode;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onExpanded?(step: CheckoutStepType): void;\n    onEdit?(step: CheckoutStepType): void;\n}\n\nconst CheckoutStep = ({\n        children,\n        heading,\n        isActive,\n        isBusy,\n        isComplete,\n        isEditable,\n        onEdit,\n        suggestion,\n        summary,\n        type,\n        onExpanded = noop,\n    }: CheckoutStepProps): ReactElement => {\n    const [isClosed, setIsClosed] = useState(true);\n\n    const containerRef = useRef<HTMLLIElement>(null);\n    const contentRef = useRef<HTMLDivElement>(null);\n    const timeoutRef = useRef<number>();\n    const timeoutDelay = useRef<number>();\n\n    const getChildInput = (): HTMLElement | undefined => {\n        const container = containerRef.current;\n\n        if (!container) {\n            return;\n        }\n\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n        return input || undefined;\n    };\n\n    const getScrollPosition = (): number | undefined => {\n        const container = getParentContainer();\n\n        if (!container || window !== window.top) {\n            return;\n        }\n\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\n        const containerOffset =\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n        return containerOffset - topOffset;\n    };\n\n    // For now, we need to find the parent container because `CheckoutStep`\n    // isn't the outer container yet. Once both the header and body are\n    // moved inside this component, we can remove the lookup.\n    const getParentContainer = (): HTMLElement | undefined => {\n        let container: HTMLElement | null = containerRef.current;\n\n        while (container && container.parentElement) {\n            if (container.parentElement.classList.contains('checkout-step')) {\n                return container.parentElement;\n            }\n\n            container = container.parentElement;\n        }\n\n        return containerRef.current ? containerRef.current : undefined;\n    };\n\n    const getTransitionDelay = (): number => {\n        if (timeoutDelay.current !== undefined) {\n            return timeoutDelay.current;\n        }\n\n        timeoutDelay.current =\n            parseFloat(\n                contentRef.current\n                    ? getComputedStyle(contentRef.current).transitionDuration\n                    : '0s',\n            ) * 1000;\n\n        return timeoutDelay.current;\n    };\n\n    const focusStep = (): void => {\n        const delay = isMobileView() ? 0 : getTransitionDelay();\n\n        setIsClosed(false);\n\n        timeoutRef.current = window.setTimeout(() => {\n            const input = getChildInput();\n            const position = getScrollPosition();\n\n            if (input) {\n                input.focus();\n            }\n\n            if (position !== undefined && !isNaN(position)) {\n                window.scrollTo(0, position);\n            }\n\n            onExpanded(type);\n\n            timeoutRef.current = undefined;\n        }, delay);\n    };\n\n    const handleTransitionEnd = (node: HTMLElement, done: () => void): void => {\n        node.addEventListener('transitionend', ({ target }) => {\n            if (target === node) {\n                done();\n            }\n        });\n    };\n\n    const onAnimationEnd = useCallback((): void => {\n        if (!isActive) {\n            setIsClosed(true);\n        }\n    }, [isActive]);\n\n    useEffect(() => {\n        return () => {\n            if (timeoutRef.current) {\n                window.clearTimeout(timeoutRef.current);\n                timeoutRef.current = undefined;\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        if (isActive) {\n            focusStep();\n        }\n    }, [isActive]);\n\n    return (\n        <li\n            className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n                [`checkout-step--${type}`]: !!type,\n            })}\n            ref={containerRef}\n        >\n            <div className=\"checkout-view-header\">\n                <CheckoutStepHeader\n                    heading={heading}\n                    isActive={isActive}\n                    isComplete={isComplete}\n                    isEditable={isEditable}\n                    onEdit={onEdit}\n                    summary={summary}\n                    type={type}\n                />\n            </div>\n\n            {suggestion && isClosed && !isActive && (\n                <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n                    {suggestion}\n                </div>\n            )}\n\n            <MobileView>\n                {(matched) => (\n                    <CSSTransition\n                        addEndListener={handleTransitionEnd}\n                        classNames=\"checkout-view-content\"\n                        enter={!matched}\n                        exit={!matched}\n                        in={isActive}\n                        mountOnEnter\n                        onExited={onAnimationEnd}\n                        timeout={{}}\n                        unmountOnExit\n                    >\n                        <div\n                            aria-busy={isBusy}\n                            className=\"checkout-view-content\"\n                            ref={contentRef}\n                        >\n                            {isActive ? children : null}\n                        </div>\n                    </CSSTransition>\n                )}\n            </MobileView>\n        </li>\n    );\n};\n\nexport default CheckoutStep;\n","enum CheckoutStepType {\n    Billing = 'billing',\n    Customer = 'customer',\n    Payment = 'payment',\n    Shipping = 'shipping',\n}\n\nexport default CheckoutStepType;\n","import { Cart, StoreConfig } from '@bigcommerce/checkout-sdk';\n\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\n    if (!cart) {\n        return false;\n    }\n\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\n        return true;\n    }\n\n    if (config && cart.lineItems.customItems\n    ) {\n        return cart.lineItems.customItems.length > 0;\n    }\n\n    return false;\n};\n\nexport default itemsRequireShipping;\n","import { CheckoutPayment, CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n    hasSelectedShippingOptions,\n    hasUnassignedLineItems,\n    itemsRequireShipping,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n// In this step, we require that the customer strategy be reloaded the first time.\nconst getStripeLinkAndCheckoutPageIsReloaded = (\n    isUsingWallet: boolean,\n    hasEmail: boolean,\n    isGuest: boolean,\n    shouldUseStripeLinkByMinimumAmount: boolean,\n    providerWithCustomCheckout?: string | null,\n) => {\n    return !isUsingWallet && providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount;\n}\n\nconst getCustomerStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => data.getPaymentProviderCustomer(),\n    (checkout, customer, billingAddress, config, cart, paymentProviderCustomer) => {\n        const hasEmail = !!(\n            (customer && customer.email) ||\n            (billingAddress && billingAddress.email)\n        );\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment: CheckoutPayment) => SUPPORTED_METHODS.includes(payment.providerId),\n                  )\n                : false;\n        const isGuest = !!(customer && customer.isGuest);\n        const isComplete = hasEmail || isUsingWallet;\n        const isEditable = isComplete && !isUsingWallet && isGuest;\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\n            isUsingWallet,\n            hasEmail,\n            isGuest,\n            cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\n            config?.checkoutSettings.providerWithCustomCheckout,\n        );\n\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n            return {\n                type: CheckoutStepType.Customer,\n                isActive: false,\n                isComplete: paymentProviderCustomer?.stripeLinkAuthenticationState !== undefined,\n                isEditable,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Customer,\n            isActive: false,\n            isComplete,\n            isEditable,\n            isRequired: true,\n        };\n    },\n);\n\nconst getBillingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => {\n        const billingAddress = data.getBillingAddress();\n\n        return billingAddress\n            ? data.getBillingAddressFields(billingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (checkout, billingAddress, billingAddressFields, config) => {\n        const hasAddress = billingAddress\n            ? isValidAddress(billingAddress, billingAddressFields)\n            : false;\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.includes(payment.providerId),\n                  )\n                : false;\n        const isComplete = hasAddress || isUsingWallet;\n        const isUsingAmazonPay =\n            checkout && checkout.payments\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n                : false;\n\n        if (isUsingAmazonPay) {\n            const billingAddressCustomFields = billingAddressFields.filter(\n                ({ custom }: { custom: boolean }) => custom,\n            );\n            const hasCustomFields = billingAddressCustomFields.length > 0;\n            const isAmazonPayBillingStepComplete =\n                billingAddress && hasCustomFields\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\n                    : true;\n\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: isAmazonPayBillingStepComplete,\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n                isRequired: true,\n            };\n        }\n\n        const isGooglePayBillingAddressEditingEnabled = isExperimentEnabled(\n            config?.checkoutSettings,\n            'STRIPE-546.allow_billing_address_editing_for_all_Google_Pay_providers',\n        );\n        const isUsingGooglePay =\n            isGooglePayBillingAddressEditingEnabled && (checkout && checkout.payments\n                ? checkout.payments.some((payment) => (payment?.providerId || '').startsWith('googlepay'))\n                : false);\n\n        if (isUsingGooglePay) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        const isUsingPaypal =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment) =>\n                        [\n                            'braintreepaypal',\n                            'braintreepaypalcredit',\n                            'braintreevenmo',\n                            'paypalcommerce',\n                            'paypalcommercecredit',\n                            'paypalcommercevenmo'\n                        ]\n                            .includes(payment.providerId))\n                : false;\n\n        if (isUsingPaypal) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Billing,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && !isUsingWallet,\n            isRequired: true,\n        };\n    },\n);\n\nconst getShippingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => {\n        const shippingAddress = data.getShippingAddress();\n\n        return shippingAddress\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n        const hasAddress = shippingAddress\n            ? isValidAddress(shippingAddress, shippingAddressFields)\n            : false;\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n        const hasUnassignedItems =\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n        const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n        const isRequired = itemsRequireShipping(cart, config);\n        const isCustomShippingSelected =\n            isExperimentEnabled(\n                config?.checkoutSettings,\n                'PROJECT-5015.manual_order.display_custom_shipping',\n            ) &&\n            hasOptions &&\n            consignments?.some(\n                ({ selectedShippingOption }) => selectedShippingOption?.type === 'custom',\n            );\n\n        return {\n            type: CheckoutStepType.Shipping,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && isRequired && !isCustomShippingSelected,\n            isRequired,\n        };\n    },\n);\n\nconst getPaymentStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getOrder(),\n    (order) => {\n        const isComplete = order ? order.isComplete : false;\n\n        return {\n            type: CheckoutStepType.Payment,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getOrderSubmitStatus = createSelector(\n    ({ statuses }: CheckoutSelectors) => statuses.isSubmittingOrder(),\n    (status) => status,\n);\n\nconst getCheckoutStepStatuses = createSelector(\n    getCustomerStepStatus,\n    getShippingStepStatus,\n    getBillingStepStatus,\n    getPaymentStepStatus,\n    getOrderSubmitStatus,\n    (customerStep, shippingStep, billingStep, paymentStep, orderStatus) => {\n        const isSubmittingOrder = orderStatus;\n\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\n\n        const defaultActiveStep =\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n        return steps.map((step, index) => {\n            const isPrevStepComplete = steps\n                .slice(0, index)\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n            return {\n                ...step,\n                isActive: defaultActiveStep.type === step.type,\n                isBusy: false,\n                // A step is only editable if its previous step is complete or not required\n                isEditable: isPrevStepComplete && step.isEditable && !isSubmittingOrder,\n            };\n        });\n    },\n);\n\nexport default getCheckoutStepStatuses;\n","import {\n    Address,\n    Cart,\n    CartChangedError,\n    CheckoutParams,\n    CheckoutSelectors,\n    CheckoutStoreSelector,\n    Consignment,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    ExtensionRegion,\n    FlashMessage,\n    PaymentMethod,\n    Promotion,\n    RequestOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { Extension, ExtensionContextProps, withExtension } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport {\n    AddressFormSkeleton,\n    CartSummarySkeleton,\n    ChecklistSkeleton,\n    LazyContainer,\n    LoadingNotification,\n    OrderConfirmationPageSkeleton\n} from '@bigcommerce/checkout/ui';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n    CheckoutButtonContainer,\n    CheckoutSuggestion,\n    Customer,\n    CustomerInfo,\n    CustomerSignOutEvent,\n    CustomerViewType,\n} from '../customer';\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\nimport { SubscribeSessionStorage } from '../customer/SubscribeSessionStorage';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping, ShippingSummary } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport CheckoutSupport from './CheckoutSupport';\nimport mapToCheckoutProps from './mapToCheckoutProps';\n\nconst Billing = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"billing\" */\n                '../billing/Billing'\n                ),\n    ),\n);\n\nconst CartSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary\" */\n                '../cart/CartSummary'\n                ),\n    ),\n);\n\nconst CartSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary-drawer\" */\n                '../cart/CartSummaryDrawer'\n                ),\n    ),\n);\n\nconst Payment = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"payment\" */\n                '../payment/Payment'\n                ),\n    ),\n);\n\nconst Shipping = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"shipping\" */\n                '../shipping/Shipping'\n                ),\n    ),\n);\n\nexport interface CheckoutProps {\n    checkoutId: string;\n    containerId: string;\n    data?: CheckoutStoreSelector;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    themeV2?:boolean;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n    activeStepType?: CheckoutStepType;\n    isBillingSameAsShipping: boolean;\n    customerViewType?: CustomerViewType;\n    defaultStepType?: CheckoutStepType;\n    error?: Error;\n    flashMessages?: FlashMessage[];\n    isMultiShippingMode: boolean;\n    isCartEmpty: boolean;\n    isRedirecting: boolean;\n    hasSelectedShippingOptions: boolean;\n    isSubscribed: boolean;\n    buttonConfigs: PaymentMethod[];\n}\n\nexport interface WithCheckoutProps {\n    billingAddress?: Address;\n    cart?: Cart;\n    consignments?: Consignment[];\n    data: CheckoutStoreSelector;\n    error?: Error;\n    hasCartChanged: boolean;\n    flashMessages?: FlashMessage[];\n    isGuestEnabled: boolean;\n    isLoadingCheckout: boolean;\n    isPending: boolean;\n    isPriceHiddenFromGuests: boolean;\n    isShowingWalletButtonsOnTop: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n    loginUrl: string;\n    cartUrl: string;\n    createAccountUrl: string;\n    promotions?: Promotion[];\n    steps: CheckoutStepStatus[];\n    clearError(error?: Error): void;\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n    loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n}\n\nclass Checkout extends Component<\n    CheckoutProps &\n    WithCheckoutProps &\n    WithLanguageProps &\n    AnalyticsContextProps &\n    ExtensionContextProps,\n    CheckoutState\n> {\n    state: CheckoutState = {\n        isBillingSameAsShipping: true,\n        isCartEmpty: false,\n        isRedirecting: false,\n        isMultiShippingMode: false,\n        hasSelectedShippingOptions: false,\n        isSubscribed: false,\n        buttonConfigs: [],\n    };\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n    private unsubscribeFromConsignments?: () => void;\n\n    componentWillUnmount(): void {\n        if (this.unsubscribeFromConsignments) {\n            this.unsubscribeFromConsignments();\n            this.unsubscribeFromConsignments = undefined;\n        }\n\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\n        this.handleBeforeExit();\n    }\n\n    async componentDidMount(): Promise<void> {\n        const {\n            analyticsTracker,\n            containerId,\n            createEmbeddedMessenger,\n            data,\n            embeddedStylesheet,\n            extensionService,\n            loadPaymentMethodByIds,\n            subscribeToConsignments,\n        } = this.props;\n\n        try {\n            const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\n\n            const supportedProviders = getSupportedMethodIds(providers);\n\n            if (providers.length > 0) {\n                const configs = await loadPaymentMethodByIds(supportedProviders);\n\n                this.setState({\n                    buttonConfigs: configs.data.getPaymentMethods() || [],\n                });\n            }\n\n            extensionService.preloadExtensions();\n\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n            const errorFlashMessages = data.getFlashMessages('error') || [];\n\n            if (errorFlashMessages.length) {\n                const { language } = this.props;\n\n                this.setState({\n                    error: new CustomError({\n                        title:\n                            errorFlashMessages[0].title ||\n                            language.translate('common.error_heading'),\n                        message: errorFlashMessages[0].message,\n                        data: {},\n                        name: 'default',\n                    }),\n                });\n            }\n\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n            this.unsubscribeFromConsignments = subscribeToConsignments(\n                this.handleConsignmentsUpdated,\n            );\n            this.embeddedMessenger = messenger;\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n            messenger.postFrameLoaded({ contentId: containerId });\n            messenger.postLoaded();\n\n            analyticsTracker.checkoutBegin();\n\n            const consignments = data.getConsignments();\n            const cart = data.getCart();\n\n            const hasMultiShippingEnabled =\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n            const checkoutBillingSameAsShippingEnabled =\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n            const defaultNewsletterSignupOption =\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\n                false;\n            const isMultiShippingMode =\n                !!cart &&\n                !!consignments &&\n                hasMultiShippingEnabled &&\n                isUsingMultiShipping(consignments, cart.lineItems);\n\n            this.setState({\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n                isSubscribed: defaultNewsletterSignupOption,\n            });\n\n            if (isMultiShippingMode) {\n                this.setState({ isMultiShippingMode });\n            }\n\n            window.addEventListener('beforeunload', this.handleBeforeExit);\n\n            this.handleReady();\n        } catch (error) {\n            if (error instanceof Error) {\n                this.handleUnhandledError(error);\n            }\n        }\n    }\n\n    render(): ReactNode {\n        const { error, isRedirecting } = this.state;\n        const { themeV2 } = this.props;\n\n        if(isRedirecting){\n            return <OrderConfirmationPageSkeleton />;\n        }\n\n        let errorModal = null;\n\n        if (error) {\n            if (isCustomError(error)) {\n                errorModal = (\n                    <ErrorModal\n                        error={error}\n                        onClose={this.handleCloseErrorModal}\n                        title={error.title}\n                    />\n                );\n            } else {\n                errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\n            }\n        }\n\n\n        return (\n            <div className={classNames('remove-checkout-step-numbers', { 'is-embedded': isEmbedded() }, { 'themeV2': themeV2 })} data-test=\"checkout-page-container\" id=\"checkout-page-container\">\n                <div className=\"layout optimizedCheckout-contentPrimary\">\n                    {this.renderContent()}\n                </div>\n                {errorModal}\n            </div>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop, extensionState } = this.props;\n\n        const { activeStepType, defaultStepType, isCartEmpty } = this.state;\n\n        if (isCartEmpty) {\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n        }\n\n        const isPaymentStepActive = activeStepType\n            ? activeStepType === CheckoutStepType.Payment\n            : defaultStepType === CheckoutStepType.Payment;\n\n        return (\n            <>\n                <div className=\"layout-main\">\n                    <LoadingNotification isLoading={extensionState.isShowingLoadingIndicator} />\n\n                    {/* <Extension region={ExtensionRegion.GlobalWebWorker} /> */}\n                    <PromotionBannerList promotions={promotions} />\n\n                    {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\n                        <CheckoutButtonContainer\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\n                            isPaymentStepActive={isPaymentStepActive}\n                            onUnhandledError={this.handleUnhandledError}\n                            onWalletButtonClick={this.handleWalletButtonClick}\n                        />\n                    )}\n\n                    <ol className=\"checkout-steps\">\n                        {steps\n                            .filter((step) => step.isRequired)\n                            .map((step) =>\n                                this.renderStep({\n                                    ...step,\n                                    isActive: activeStepType\n                                        ? activeStepType === step.type\n                                        : defaultStepType === step.type,\n                                    isBusy: isPending,\n                                }),\n                            )}\n                    </ol>\n                </div>\n                {this.renderCartSummary()}\n            </>\n        );\n    }\n\n    private renderStep(step: CheckoutStepStatus): ReactNode {\n        switch (step.type) {\n            case CheckoutStepType.Customer:\n                return this.renderCustomerStep(step);\n\n            case CheckoutStepType.Shipping:\n                return this.renderShippingStep(step);\n\n            case CheckoutStepType.Billing:\n                return this.renderBillingStep(step);\n\n            case CheckoutStepType.Payment:\n                return this.renderPaymentStep(step);\n\n            default:\n                return null;\n        }\n    }\n\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n        const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\n        const {\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n            isSubscribed,\n        } = this.state;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                suggestion={<CheckoutSuggestion />}\n                summary={\n                    <CustomerInfo\n                        onSignOut={this.handleSignOut}\n                        onSignOutError={this.handleError}\n                    />\n                }\n            >\n                <Customer\n                    checkEmbeddedSupport={this.checkEmbeddedSupport}\n                    isEmbedded={isEmbedded()}\n                    isSubscribed={isSubscribed}\n                    isWalletButtonsOnTop = {isShowingWalletButtonsOnTop }\n                    onAccountCreated={this.navigateToNextIncompleteStep}\n                    onChangeViewType={this.setCustomerViewType}\n                    onContinueAsGuest={this.navigateToNextIncompleteStep}\n                    onContinueAsGuestError={this.handleError}\n                    onReady={this.handleReady}\n                    onSignIn={this.navigateToNextIncompleteStep}\n                    onSignInError={this.handleError}\n                    onSubscribeToNewsletter={this.handleNewsletterSubscription}\n                    onUnhandledError={this.handleUnhandledError}\n                    onWalletButtonClick={this.handleWalletButtonClick}\n                    step={step}\n                    viewType={customerViewType}\n                />\n            </CheckoutStep>\n        );\n    }\n\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\n        const { hasCartChanged, cart, consignments = [], isShippingDiscountDisplayEnabled } = this.props;\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\n\n        if (!cart) {\n            return;\n        }\n\n        const setIsMultishippingMode = (value: boolean) => {\n            this.setState({ isMultiShippingMode: value });\n        }\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={<ShippingSummary cart={cart} consignments={consignments} isMultiShippingMode={isMultiShippingMode} isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}/>}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Shipping\n                        cartHasChanged={hasCartChanged}\n                        isBillingSameAsShipping={isBillingSameAsShipping}\n                        isMultiShippingMode={isMultiShippingMode}\n                        navigateNextStep={this.handleShippingNextStep}\n                        onCreateAccount={this.handleShippingCreateAccount}\n                        onReady={this.handleReady}\n                        onSignIn={this.handleShippingSignIn}\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\n                        onUnhandledError={this.handleUnhandledError}\n                        setIsMultishippingMode={setIsMultishippingMode}\n                        step={step}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n        const { billingAddress } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Billing\n                        navigateNextStep={this.navigateToNextIncompleteStep}\n                        onReady={this.handleReady}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n        const { consignments, cart, errorLogger } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n            >\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n                    <Payment\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\n                        errorLogger={errorLogger}\n                        isEmbedded={isEmbedded()}\n                        isUsingMultiShipping={\n                            cart && consignments\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\n                                : false\n                        }\n                        onCartChangedError={this.handleCartChangedError}\n                        onFinalize={this.navigateToOrderConfirmation}\n                        onReady={this.handleReady}\n                        onSubmit={this.navigateToOrderConfirmation}\n                        onSubmitError={this.handleError}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderCartSummary(): ReactNode {\n        const { isMultiShippingMode } = this.state;\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer loadingSkeleton={<></>}>\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                                <CartSummaryDrawer isMultiShippingMode={isMultiShippingMode} />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <LazyContainer loadingSkeleton={<CartSummarySkeleton />}>\n                            <aside className=\"layout-cart\">\n                                    <CartSummary isMultiShippingMode={isMultiShippingMode} />\n                                    <Extension region={ExtensionRegion.SummaryAfter} />\n                            </aside>\n                        </LazyContainer>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n        const { clearError, error, steps } = this.props;\n        const { activeStepType } = this.state;\n        const step = find(steps, { type });\n\n        if (!step) {\n            return;\n        }\n\n        if (activeStepType === step.type) {\n            return;\n        }\n\n        if (options && options.isDefault) {\n            this.setState({ defaultStepType: step.type });\n        } else {\n            // TODO: setting activeStepType here is causing significant delay in rendering guest shopper form\n            // When converting functional component, we should set activeStepType before rendering <CheckoutPage />\n            this.setState({ activeStepType: step.type });\n        }\n\n        if (error) {\n            clearError(error);\n        }\n    }\n\n    private handleToggleMultiShipping: () => void = () => {\n        const { isMultiShippingMode } = this.state;\n\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\n    };\n\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\n        options,\n    ) => {\n        const { steps, analyticsTracker } = this.props;\n        const activeStepIndex = findIndex(steps, { isActive: true });\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n        if (!activeStep) {\n            return;\n        }\n\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n        if (previousStep) {\n            analyticsTracker.trackStepCompleted(previousStep.type);\n        }\n\n        this.navigateToStep(activeStep.type, options);\n    };\n\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n        const { steps, analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postComplete();\n        }\n\n        SubscribeSessionStorage.removeSubscribeStatus();\n\n        this.setState({ isRedirecting: true }, () => {\n            navigateToOrderConfirmation(orderId);\n        });\n    };\n\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n        const { embeddedSupport } = this.props;\n\n        return embeddedSupport.isSupported(...methodIds);\n    };\n\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\n        this.navigateToStep(CheckoutStepType.Shipping);\n    };\n\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType, defaultStepType } =\n            this.state;\n\n        const { steps } = this.props;\n\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\n            data.getConsignments() || [],\n        );\n\n        const isDefaultStepPaymentOrBilling =\n            !activeStepType &&\n            (defaultStepType === CheckoutStepType.Payment ||\n                defaultStepType === CheckoutStepType.Billing);\n\n        const isShippingStepFinished =\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\n            findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n        if (\n            prevHasSelectedShippingOptions &&\n            !newHasSelectedShippingOptions &&\n            isShippingStepFinished\n        ) {\n            this.navigateToStep(CheckoutStepType.Shipping);\n            this.setState({ error: new ShippingOptionExpiredError() });\n        }\n\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n    };\n\n    private handleCloseErrorModal: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepViewed(type);\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        this.handleError(error);\n\n        // For errors that are not caught and handled by child components, we\n        // handle them here by displaying a generic error modal to the shopper.\n        this.setState({ error });\n    };\n\n    private handleError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n        this.navigateToStep(type);\n    };\n\n    private handleReady: () => void = () => {\n        this.navigateToNextIncompleteStep({ isDefault: true });\n    };\n\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n        this.setState({ isSubscribed: subscribed });\n    }\n\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\n\n        if (isPriceHiddenFromGuests) {\n            if (window.top) {\n                return (window.top.location.href = cartUrl);\n            }\n        }\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postSignedOut();\n        }\n\n        if (isGuestEnabled) {\n            this.setCustomerViewType(CustomerViewType.Guest);\n        }\n\n        if (isCartEmpty) {\n            this.setState({ isCartEmpty: true });\n\n            if (!isEmbedded()) {\n                if (window.top) {\n                    return window.top.location.assign(loginUrl);\n                }\n            }\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n    };\n\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\n        isBillingSameAsShipping,\n    ) => {\n        this.setState({ isBillingSameAsShipping });\n\n        if (isBillingSameAsShipping) {\n            this.navigateToNextIncompleteStep();\n        } else {\n            this.navigateToStep(CheckoutStepType.Billing);\n        }\n    };\n\n    private handleShippingSignIn: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.Login);\n    };\n\n    private handleShippingCreateAccount: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\n    };\n\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n        const { createAccountUrl } = this.props;\n\n        if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n            if (window.top) {\n                window.top.location.replace(createAccountUrl);\n            }\n\n            return;\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n        this.setState({ customerViewType });\n    };\n\n    private handleBeforeExit: () => void = () => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.exitCheckout();\n    }\n\n    private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.walletButtonClick(methodName);\n    }\n}\n\nexport default withExtension(\n    withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\n);\n","import { CheckoutSelectors, CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\n\nimport { WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n    const { data, errors, statuses } = checkoutState;\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\n    const {\n        checkoutSettings: {\n            guestCheckoutEnabled: isGuestEnabled = false,\n            checkoutUserExperienceSettings = {\n                walletButtonsOnTop: false,\n                floatingLabelEnabled: false,\n            },\n        } = {},\n        links: {\n            loginLink: loginUrl = '',\n            createAccountLink: createAccountUrl = '',\n            cartLink: cartUrl = '',\n        } = {},\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n    } = data.getConfig() || {};\n\n    const subscribeToConsignmentsSelector = createSelector(\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n        },\n    );\n\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop);\n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        data.getConfig()?.checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return {\n        billingAddress: data.getBillingAddress(),\n        cart: data.getCart(),\n        clearError: checkoutService.clearError,\n        data,\n        consignments: data.getConsignments(),\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n        isGuestEnabled,\n        isLoadingCheckout: statuses.isLoadingCheckout(),\n        isShippingDiscountDisplayEnabled,\n        isPending: statuses.isPending(),\n        isPriceHiddenFromGuests,\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n        loadCheckout: checkoutService.loadCheckout,\n        loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\n        loginUrl,\n        cartUrl,\n        createAccountUrl,\n        promotions,\n        subscribeToConsignments: subscribeToConsignmentsSelector({\n            checkoutService,\n            checkoutState,\n        }),\n        steps: getCheckoutStepStatuses(checkoutState),\n    };\n}\n","import { useEffect, useState } from 'react';\n\nimport { useExtensions } from '@bigcommerce/checkout/checkout-extension';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nexport const useLoadCheckout = (checkoutId: string): {isLoadingCheckout: boolean} => {\n    const [ isLoadingCheckout, setIsLoadingCheckout ] = useState(true);\n    const { checkoutService } = useCheckout();\n    const { extensionService } = useExtensions();\n\n    const fetchData = async () => {\n        await Promise.all([\n            checkoutService.loadCheckout(checkoutId, {\n                params: {\n                    include: [\n                        'cart.lineItems.physicalItems.categoryNames',\n                        'cart.lineItems.digitalItems.categoryNames',\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n                },\n            }),\n            extensionService.loadExtensions(),\n        ]);\n    };\n\n    const fetchDataWithRetry = async (maxRetries = 3): Promise<void> => {\n        const attemptFetch = async (attemptSequence = 1): Promise<void> => {\n            try {\n                await fetchData();\n            } catch {\n                if (attemptSequence >= maxRetries) {\n                    throw new Error('Failed to load checkout after 3 attempts, please try again.');\n                }\n\n                const delay = attemptSequence ** 2 * 1000;\n\n                await new Promise(resolve => setTimeout(resolve, delay));\n\n                await attemptFetch(attemptSequence + 1);\n            }\n        };\n\n        await attemptFetch();\n    };\n\n    useEffect(() => {\n        fetchDataWithRetry()\n            .then(() => setIsLoadingCheckout(false))\n            .catch((error) => {\n                throw error;\n            });\n    }, []);\n\n    return  { isLoadingCheckout };\n};\n","import CheckoutIntermediate from './CheckoutIntermediate';\n\nexport default CheckoutIntermediate;\nexport { CheckoutProps, CheckoutState, WithCheckoutProps } from './CheckoutPage';\n","import {\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { CheckoutPageSkeleton, useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { EmbeddedCheckoutStylesheet } from '../embeddedCheckout';\n\nimport CheckoutPage from './CheckoutPage';\nimport CheckoutSupport from './CheckoutSupport';\nimport { useLoadCheckout } from './hooks';\n\ninterface CheckoutIntermediateProps {\n    checkoutId: string;\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nconst CheckoutIntermediate:React.FC<CheckoutIntermediateProps>= (props) => {\n    const { checkoutId } = props;\n    const { isLoadingCheckout } = useLoadCheckout(checkoutId);\n    const { themeV2 } = useThemeContext();\n\n    if (isLoadingCheckout) {\n        return <CheckoutPageSkeleton />;\n    }\n\n    return <CheckoutPage\n            {...props}\n            createEmbeddedMessenger={props.createEmbeddedMessenger}\n            embeddedStylesheet={props.embeddedStylesheet}\n            embeddedSupport={props.embeddedSupport}\n            errorLogger={props.errorLogger}\n            themeV2={themeV2}\n        />;\n};\n\nexport default CheckoutIntermediate;\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport type { BrowserOptions } from '@sentry/browser';\nimport React, { ReactElement, useEffect, useMemo } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\nimport { ThemeProvider } from '@bigcommerce/checkout/ui';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nconst CheckoutApp = (props: CheckoutAppProps): ReactElement => {\n    const { containerId, sentryConfig, publicPath, sentrySampleRate } = props;\n\n    const checkoutService = useMemo(() => createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    }), []);\n    const embeddedStylesheet = useMemo(() => createEmbeddedCheckoutStylesheet(), []);\n    const embeddedSupport = useMemo(() => createEmbeddedCheckoutSupport(getLanguageService()), []);\n    const errorLogger = useMemo(() => createErrorLogger(\n        { sentry: sentryConfig },\n        {\n            errorTypes: ['UnrecoverableError'],\n            publicPath,\n            sampleRate: sentrySampleRate || 0.1,\n        },\n    ), []);\n\n    useEffect(() => {\n        ReactModal.setAppElement(`#${containerId}`);\n    }, []);\n\n    return (\n        <ErrorBoundary logger={errorLogger}>\n            <LocaleProvider checkoutService={checkoutService}>\n                <CheckoutProvider checkoutService={checkoutService}>\n                    <AnalyticsProvider checkoutService={checkoutService}>\n                        <ExtensionProvider\n                            checkoutService={checkoutService}\n                            errorLogger={createErrorLogger()}\n                        >\n                            <ThemeProvider>\n                                <Checkout\n                                    {...props}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={embeddedStylesheet}\n                                    embeddedSupport={embeddedSupport}\n                                    errorLogger={errorLogger}\n                                />\n                            </ThemeProvider>\n                        </ExtensionProvider>\n                    </AnalyticsProvider>\n                </CheckoutProvider>\n            </LocaleProvider>\n        </ErrorBoundary>\n    );\n};\n\nexport default CheckoutApp;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import React, { FunctionComponent } from 'react';\n\nimport { withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nexport interface ShopperCurrencyProps {\n    amount: number;\n}\n\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\n    amount,\n    currency,\n}) => <>{currency.toCustomerCurrency(amount)}</>;\n\nexport default withCurrency(ShopperCurrency);\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(<div key={`checklist-skeleton-item${i}`} />);\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import { Cart, Consignment, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport { compact, find, isNil, map } from 'lodash';\n\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\n    return compact(\n        map(consignment.lineItemIds, (itemId) =>\n            find(\n                cart.lineItems.physicalItems,\n                (item) => item.id === itemId && isNil(item.parentId),\n            ),\n        ),\n    );\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading,\n    renderWhileLoading,\n}) => {\n    const skeleton = (\n        <>\n            <div className=\"address-form-skeleton\">\n                <div className=\"label\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name\" />\n                <div className=\"name\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"address\" />\n            </div>\n        </>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import React, { ComponentType } from 'react';\n\nimport ResolvableComponent from './ResolvableComponent';\n\nexport default function toResolvableComponent<TProps extends Record<string, any>, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n    resolveIds: TIdentifier[],\n): ResolvableComponent<TProps, TIdentifier> {\n    return Object.assign((props: TProps) => <Component {...props} />, { resolveIds });\n}\n","import { isEmpty, pickBy } from 'lodash';\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\n\nimport InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import { CurrencyService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithCurrencyProps {\n    currency: CurrencyService;\n}\n\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithCurrency',\n    pickProps: (value, key) => key === 'currency' && !!value,\n});\n\nexport default withCurrency;\n","import CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { Address, AddressKey, FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    const fieldValue = address && address[name];\n\n                    addressFormValues[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    )?.toString() || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.date && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.date) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.checkbox) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n    themeV2?: boolean;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        (props: FieldProps<string>) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label && (typeof label === 'function' ? label(name) : label)}\n                {labelContent && !label && (\n                    <Label\n                        additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import {\n  ErrorLevelType,\n  ErrorLogger,\n  ErrorMeta,\n  ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import { getScriptLoader } from '@bigcommerce/script-loader';\nimport type {\n    BrowserOptions,\n    ErrorEvent,\n    EventHint,\n    Exception,\n    SeverityLevel,\n    StackFrame,\n} from '@sentry/browser';\n\nimport {\n    ErrorLevelType,\n    ErrorLogger,\n    ErrorMeta,\n    ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n    private dsn: string;\n    private loaderPromise?: Promise<void>;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n        this.dsn = config.dsn || '';\n\n        window.sentryOnLoad = async () => {\n            Sentry.init({\n                sampleRate,\n                beforeSend: this.handleBeforeSend.bind(this),\n                denyUrls: [\n                    ...(config.denyUrls || []),\n                    'polyfill~checkout',\n                ],\n                integrations: [\n                    Sentry.globalHandlersIntegration({\n                        onerror: false,\n                        onunhandledrejection: true,\n                    }),\n                ],\n                ...config,\n            });\n\n            const rewriteFramesIntegration = await Sentry.lazyLoadIntegration('rewriteFramesIntegration');\n\n            Sentry.addIntegration(rewriteFramesIntegration({\n                iteratee: this.handleRewriteFrame.bind(this),\n            }));\n        };\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        this.loadSentry().then(() => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            Sentry.captureException(error, {\n                tags: { errorCode },\n                level: this.mapToSentryLevel(level),\n                extra: payload,\n                fingerprint: ['{{ default }}'],\n            });\n        });\n    }\n\n    private loadSentry(): Promise<void> {\n        if (this.loaderPromise) {\n            return this.loaderPromise;\n        }\n\n        const key = /https:\\/\\/(.+)@.+\\//.exec(this.dsn)?.[1] ?? '';\n\n        this.loaderPromise = getScriptLoader().loadScript(`https://js.sentry-cdn.com/${key}.min.js`, {\n            attributes: {\n                crossorigin: 'anonymous',\n            },\n            async: false,\n        });\n\n        return this.loaderPromise;\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX) || frame.filename?.startsWith(this.publicPath),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: ErrorEvent, hint: EventHint) => ErrorEvent | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  ErrorLogger,\n  ErrorLoggerOptions,\n  ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","import { createRequestSender, RequestSender } from '@bigcommerce/request-sender';\n\nimport { CreatedCustomer, CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface PasswordField {\n    minLength: number;\n}\n\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\n    const renderPasswordInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const renderPasswordConfirmationInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const passwordLabelContent = useMemo(\n        () => (\n            <>\n                <TranslatedString id=\"customer.password_label\" />{' '}\n                <small>\n                    {`${minLength}-`}\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\n                </small>\n            </>\n        ),\n        [minLength],\n    );\n\n    const passwordConfirmationLabelContent = useMemo(\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\n        [],\n    );\n\n    return (\n        <>\n            <FormField\n                input={renderPasswordInput}\n                labelContent={passwordLabelContent}\n                name=\"password\"\n            />\n\n            <FormField\n                input={renderPasswordConfirmationInput}\n                labelContent={passwordConfirmationLabelContent}\n                name=\"confirmPassword\"\n            />\n        </>\n    );\n};\n\nexport default memo(SignUpPasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\nimport { object, ref, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { PasswordRequirements } from '../customer';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport SignUpPasswordField from './SignUpPasswordField';\n\nexport interface SignUpFormProps {\n    isSigningUp?: boolean;\n    customerCanBeCreated: boolean;\n    passwordRequirements: PasswordRequirements;\n    onSignUp(data: SignUpFormValues): void;\n}\n\nexport interface SignUpFormValues {\n    password: string;\n    confirmPassword: string;\n}\n\nconst GuestSignUpForm: FunctionComponent<\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\n    <Fieldset\n        legend={\n            <Legend>\n                <TranslatedString\n                    id={\n                        customerCanBeCreated\n                            ? 'customer.create_account_text'\n                            : 'customer.set_password_text'\n                    }\n                />\n            </Legend>\n        }\n    >\n        {!customerCanBeCreated && (\n            <p>\n                <TranslatedString id=\"customer.account_created_text\" />\n            </p>\n        )}\n\n        <Form className=\"guest-signup form\">\n            <SignUpPasswordField minLength={minLength} />\n\n            <div className=\"form-actions\">\n                <Button\n                    id=\"createAccountButton\"\n                    isLoading={isSigningUp}\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString\n                        id={\n                            customerCanBeCreated\n                                ? 'customer.create_account_action'\n                                : 'customer.set_password_action'\n                        }\n                    />\n                </Button>\n            </div>\n        </Form>\n    </Fieldset>\n);\n\nexport default withLanguage(\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\n        mapPropsToValues: () => ({\n            password: '',\n            confirmPassword: '',\n        }),\n        handleSubmit: (values, { props: { onSignUp } }) => {\n            onSignUp(values);\n        },\n        validationSchema: ({\n            language,\n            passwordRequirements: { description, numeric, alpha, minLength },\n        }: SignUpFormProps & WithLanguageProps) =>\n            object({\n                password: string()\n                    .required(description || language.translate('customer.password_required_error'))\n                    .matches(\n                        numeric,\n                        description ||\n                            language.translate('customer.password_number_required_error'),\n                    )\n                    .matches(\n                        alpha,\n                        description ||\n                            language.translate('customer.password_letter_required_error'),\n                    )\n                    .min(\n                        minLength,\n                        description ||\n                            language.translate('customer.password_under_minimum_length_error'),\n                    )\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\n                confirmPassword: string()\n                    .required(language.translate('customer.password_confirmation_required_error'))\n                    .oneOf(\n                        [ref('password')],\n                        language.translate('customer.password_confirmation_error'),\n                    ),\n            }),\n    })(memo(GuestSignUpForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.set_password_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default PasswordSavedSuccessAlert;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst SignedUpSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.create_account_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default SignedUpSuccessAlert;\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationRequirementsError extends CustomError {\n    constructor(data: Error, requirements: string) {\n        super({\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\n            message: requirements,\n            title: getLanguageService().translate(\n                'customer.create_account_requirements_error_heading',\n            ),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationFailedError extends CustomError {\n    constructor(data: Error) {\n        super({\n            name: 'ACCOUNT_CREATION_FAILED',\n            message: getLanguageService().translate('customer.create_account_error'),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\n    }\n}\n","import { GatewayOrderPayment, Order, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isGiftCertificatePayment } from '../giftCertificate';\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport interface PaymentInstructionsProps {\n    order: Order;\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\n}\n\nfunction getPaymentInstructions(order: Order): string {\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\n\n    return instructions || '';\n}\n\nexport default getPaymentInstructions;\n","import { GiftCertificate, OrderPayments } from '@bigcommerce/checkout-sdk';\n\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\n\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\n        code: detail.code,\n        remaining: detail.remaining,\n        used: amount,\n        balance: amount + detail.remaining,\n        purchaseDate: '',\n    }));\n}\n","import { OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\n    return (payments || [])\n        .filter(isStoreCreditPayment)\n        .reduce((total, payment) => total + payment.amount, 0);\n}\n","import { Order } from '@bigcommerce/checkout-sdk';\n\nimport { mapFromPayments } from '../giftCertificate';\n\nimport getOrderShippingCostAfterAutomaticDiscount from './getOrderShippingCostAfterAutomaticDiscount';\nimport getStoreCreditAmount from './getStoreCreditAmount';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    baseAmount,\n    discountAmount,\n    isTaxIncluded,\n    shippingCostBeforeDiscount,\n    payments,\n    handlingCostTotal,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n    consignments,\n}: Order,\nisShippingDiscountDisplayEnabled: boolean,\n): OrderSummarySubtotalsProps {\n\n    const shippingAmount = isShippingDiscountDisplayEnabled && consignments.shipping.length > 0\n    ? getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments.shipping)\n    : shippingCostBeforeDiscount;\n\n    return {\n        subtotalAmount: baseAmount,\n        shippingAmount,\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled ? shippingCostBeforeDiscount : undefined,\n        giftWrappingAmount: giftWrappingCostTotal,\n        discountAmount,\n        storeCreditAmount: getStoreCreditAmount(payments),\n        handlingAmount: handlingCostTotal,\n        coupons,\n        giftCertificates: payments && mapFromPayments(payments),\n        taxes,\n        isTaxIncluded,\n        fees,\n    };\n}\n","import { OrderShippingConsignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: OrderShippingConsignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: OrderShippingConsignment) {\n    return consignment.discounts\n    .filter(discount => !discount.code)\n    .reduce((total, discount) => total + discount.amount, 0);\n}\n","import React, { FunctionComponent } from 'react';\n\nconst OrderConfirmationSection: FunctionComponent<{ children?: React.ReactNode }> = ({ children }) => (\n    <section className=\"orderConfirmation-section\">{children}</section>\n);\n\nexport default OrderConfirmationSection;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface MandateTextComponentProps {\n    mandateText: {\n        [key: string]: string;\n    },\n    methodId: string;\n    providerId: string;\n}\n\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\n    mandateText,\n    providerId,\n    methodId,\n}) => {\n    if (!Object.keys(mandateText).length) {\n        return null;\n    }\n\n    return (\n        <ul data-test='order-confirmation-mandate-text-list'>\n            {Object.entries(mandateText).map((field, index) => {\n                return (\n                    <li data-test={`order-confirmation-mandate-text-list-item-${index}`} key={index}>\n                        <TranslatedString\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\n                        />:\n                        <b>\n                            {` ${field[1]}`}\n                        </b>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n","import { GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { MandateTextComponent } from './MandateTextComponent';\n\nexport interface PaymentsWithMandatesProps {\n    paymentsWithMandates: GatewayOrderPayment[];\n}\n\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\n    paymentsWithMandates,\n}) => <>\n    {paymentsWithMandates.map((payment) => {\n        if (payment?.mandate?.url) {\n            return (\n                <a\n                    data-test=\"order-confirmation-mandate-link-text\"\n                    href={payment.mandate.url}\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TranslatedString\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </a>\n            );\n        } else if (payment?.mandate?.id) {\n            return (\n                <p\n                    data-test=\"order-confirmation-mandate-id-text\"\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                >\n                    <TranslatedString\n                        data={{ mandate: payment.mandate.id }}\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </p>\n            );\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\n            return <MandateTextComponent\n                key='mandateTextList'\n                mandateText={payment.mandate.mandateText}\n                methodId={payment.methodId}\n                providerId={payment.providerId}\n            />\n        }\n    })}\n</>\n","import { GatewayOrderPayment, GiftCertificateOrderPayment, Order, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\n\nexport interface OrderStatusProps {\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber?: string;\n    order: Order;\n}\n\ntype PaymentWithMandate = GatewayOrderPayment &\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\n\nconst isPaymentWithMandate = (\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\n\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\n    config,\n    order,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\n\n    return (\n        <OrderConfirmationSection>\n            {order.orderId && (\n                <p data-test=\"order-confirmation-order-number-text\">\n                    <TranslatedHtml\n                        data={{ orderNumber: order.orderId }}\n                        id=\"order_confirmation.order_number_text\"\n                    />\n                </p>\n            )}\n\n            <p data-test=\"order-confirmation-order-status-text\">\n                <OrderStatusMessage\n                    config={config}\n                    orderNumber={order.orderId}\n                    orderStatus={order.status}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n            </p>\n            <PaymentsWithMandates\n                paymentsWithMandates={paymentsWithMandates}\n            />\n            {order.hasDigitalItems && (\n                <p data-test=\"order-confirmation-digital-items-text\">\n                    <TranslatedHtml\n                        id={\n                            order.isDownloadable\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\n                        }\n                    />\n                </p>\n            )}\n        </OrderConfirmationSection>\n    );\n};\n\ninterface OrderStatusMessageProps {\n    config: StoreConfig;\n    orderNumber: number;\n    orderStatus: string;\n    supportEmail?: string;\n    supportPhoneNumber?: string;\n}\n\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\n    config,\n    orderNumber,\n    orderStatus,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    switch (orderStatus) {\n        case 'MANUAL_VERIFICATION_REQUIRED':\n        case 'AWAITING_PAYMENT':\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\n\n        case 'PENDING':\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_pending_status_text\"\n                />\n            );\n\n        case 'INCOMPLETE':\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\n                return (\n                    <TranslatedHtml\n                        data={{ orderNumber, supportEmail }}\n                        id=\"order_confirmation.order_pending_status_text\"\n                    />\n                );\n            }\n\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_incomplete_status_text\"\n                />\n            );\n\n        default:\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\n                    id={\n                        supportPhoneNumber\n                            ? 'order_confirmation.order_with_support_number_text'\n                            : 'order_confirmation.order_without_support_number_text'\n                    }\n                />\n            );\n    }\n};\n\nexport default memo(OrderStatus);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPrint: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconPrint);\n","import { throttle } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconPrint } from '../ui/icon';\n\nexport interface PrintLinkProps {\n    className?: string;\n}\n\nconst PRINT_MODAL_THROTTLE = 500;\n\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\n    const handleClick = useCallback(\n        throttle(() => {\n            window.print();\n        }, PRINT_MODAL_THROTTLE),\n        [],\n    );\n\n    if (typeof window.print !== 'function') {\n        return null;\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            href=\"#\"\n            id=\"cart-print-link\"\n            onClick={preventDefault(handleClick)}\n        >\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\n        </a>\n    );\n};\n\nexport default memo(PrintLink);\n","import React, { FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    children: React.ReactNode;\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import {\n    CheckoutSelectors,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    Order,\n    ShopperConfig,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { CartSummarySkeleton, LazyContainer, OrderConfirmationPageSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport { ErrorModal } from '../common/error';\nimport { isExperimentEnabled, retry } from '../common/utility';\nimport { getPasswordRequirementsFromConfig } from '../customer';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport {\n    CreatedCustomer,\n    GuestSignUpForm,\n    PasswordSavedSuccessAlert,\n    SignedUpSuccessAlert,\n    SignUpFormValues,\n} from '../guestSignup';\nimport {\n    AccountCreationFailedError,\n    AccountCreationRequirementsError,\n} from '../guestSignup/errors';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { MobileView } from '../ui/responsive';\n\nimport getPaymentInstructions from './getPaymentInstructions';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport OrderStatus from './OrderStatus';\nimport PrintLink from './PrintLink';\nimport ThankYouHeader from './ThankYouHeader';\n\nconst OrderSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary\" */\n                './OrderSummary'\n            ),\n    ),\n);\n\nconst OrderSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary-drawer\" */\n                './OrderSummaryDrawer'\n            ),\n    ),\n);\n\nexport interface OrderConfirmationState {\n    error?: Error;\n    hasSignedUp?: boolean;\n    isSigningUp?: boolean;\n}\n\nexport interface OrderConfirmationProps {\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    errorLogger: ErrorLogger;\n    orderId: number;\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\ninterface WithCheckoutOrderConfirmationProps {\n    order?: Order;\n    config?: StoreConfig;\n    loadOrder(orderId: number): Promise<CheckoutSelectors>;\n    isLoadingOrder(): boolean;\n}\n\nclass OrderConfirmation extends Component<\n    OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\n    OrderConfirmationState\n> {\n    state: OrderConfirmationState = {};\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n\n    componentDidMount(): void {\n        const {\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            loadOrder,\n            orderId,\n            analyticsTracker\n        } = this.props;\n\n        loadOrder(orderId)\n            .then(({ data }) => {\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n                this.embeddedMessenger = messenger;\n\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n                messenger.postFrameLoaded({ contentId: containerId });\n\n                analyticsTracker.orderPurchased();\n            })\n            .catch(this.handleUnhandledError);\n    }\n\n    render(): ReactNode {\n        const { order, config, isLoadingOrder } = this.props;\n\n        if (!order || !config || isLoadingOrder()) {\n            return <OrderConfirmationPageSkeleton />;\n        }\n\n        const paymentInstructions = getPaymentInstructions(order);\n        const {\n            storeProfile: { orderEmail, storePhoneNumber },\n            shopperConfig,\n            links: { siteLink },\n        } = config;\n\n        return (\n            <div\n                className={classNames('layout optimizedCheckout-contentPrimary', {\n                    'is-embedded': isEmbedded(),\n                })}\n            >\n                <div className=\"layout-main\">\n                    <div className=\"orderConfirmation\">\n                        <ThankYouHeader name={order.billingAddress.firstName} />\n\n                        <OrderStatus\n                            config={config}\n                            order={order}\n                            supportEmail={orderEmail}\n                            supportPhoneNumber={storePhoneNumber}\n                        />\n\n                        {paymentInstructions && (\n                            <OrderConfirmationSection>\n                                <div\n                                    dangerouslySetInnerHTML={{\n                                        __html: DOMPurify.sanitize(paymentInstructions),\n                                    }}\n                                    data-test=\"payment-instructions\"\n                                />\n                            </OrderConfirmationSection>\n                        )}\n\n                        {this.renderGuestSignUp({\n                            shouldShowPasswordForm: order.customerCanBeCreated,\n                            customerCanBeCreated: !order.customerId,\n                            shopperConfig,\n                        })}\n\n                        <div className=\"continueButtonContainer\">\n                            <form action={siteLink} method=\"get\" target=\"_top\">\n                                <Button type=\"submit\" variant={ButtonVariant.Secondary}>\n                                    <TranslatedString id=\"order_confirmation.continue_shopping\" />\n                                </Button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n\n                {this.renderOrderSummary()}\n                {this.renderErrorModal()}\n            </div>\n        );\n    }\n\n    private renderGuestSignUp({\n        customerCanBeCreated,\n        shouldShowPasswordForm,\n        shopperConfig,\n    }: {\n        customerCanBeCreated: boolean;\n        shouldShowPasswordForm: boolean;\n        shopperConfig: ShopperConfig;\n    }): ReactNode {\n        const { isSigningUp, hasSignedUp } = this.state;\n\n        const { order } = this.props;\n\n        return (\n            <>\n                {shouldShowPasswordForm && !hasSignedUp && (\n                    <GuestSignUpForm\n                        customerCanBeCreated={customerCanBeCreated}\n                        isSigningUp={isSigningUp}\n                        onSignUp={this.handleSignUp}\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\n                    />\n                )}\n\n                {hasSignedUp &&\n                    (order?.customerId ? <PasswordSavedSuccessAlert /> : <SignedUpSuccessAlert />)}\n            </>\n        );\n    }\n\n    private renderOrderSummary(): ReactNode {\n        const { order, config } = this.props;\n\n        if (!order || !config) {\n            return null;\n        }\n\n        const { currency, shopperCurrency, checkoutSettings } = config;\n\n        const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n            checkoutSettings,\n            'PROJECT-6643.enable_shipping_discounts_in_orders',\n        );\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer loadingSkeleton={<></>}>\n                                <OrderSummaryDrawer\n                                    {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                                    headerLink={\n                                        <PrintLink className=\"modal-header-link cart-modal-link\" />\n                                    }\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <LazyContainer loadingSkeleton={<CartSummarySkeleton />}>\n                            <aside className=\"layout-cart\">\n                                <OrderSummary\n                                    headerLink={<PrintLink />}\n                                    {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </aside>\n                        </LazyContainer>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private renderErrorModal(): ReactNode {\n        const { error } = this.state;\n\n        return (\n            <ErrorModal\n                error={error}\n                onClose={this.handleErrorModalClose}\n                shouldShowErrorCode={false}\n            />\n        );\n    }\n\n    private handleErrorModalClose: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleSignUp: (values: SignUpFormValues) => void = ({ password, confirmPassword }) => {\n        const { createAccount, config } = this.props;\n\n        const shopperConfig = config && config.shopperConfig;\n        const passwordRequirements =\n            (shopperConfig &&\n                shopperConfig.passwordRequirements &&\n                shopperConfig.passwordRequirements.error) ||\n            '';\n\n        this.setState({\n            isSigningUp: true,\n        });\n\n        createAccount({\n            password,\n            confirmPassword,\n        })\n            .then(() => {\n                this.setState({\n                    hasSignedUp: true,\n                    isSigningUp: false,\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error:\n                        error.status < 500\n                            ? new AccountCreationRequirementsError(error, passwordRequirements)\n                            : new AccountCreationFailedError(error),\n                    hasSignedUp: false,\n                    isSigningUp: false,\n                });\n            });\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        this.setState({ error });\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n}\n\nexport function mapToOrderConfirmationProps(\n    context: CheckoutContextProps,\n): WithCheckoutOrderConfirmationProps | null {\n    const {\n        checkoutState: {\n            data: { getOrder, getConfig },\n            statuses: { isLoadingOrder },\n        },\n        checkoutService,\n    } = context;\n\n    const config = getConfig();\n    const order = getOrder();\n\n    return {\n        config,\n        isLoadingOrder,\n        loadOrder: checkoutService.loadOrder,\n        order,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport type { BrowserOptions } from '@sentry/browser';\nimport React, { Component, ReactNode } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\nimport { ThemeProvider } from '@bigcommerce/checkout/ui';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, CreatedCustomer, SignUpFormValues } from '../guestSignup';\n\nimport OrderConfirmation from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\n    private accountService = new AccountService();\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render(): ReactNode {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider checkoutService={this.checkoutService} errorLogger={createErrorLogger()}>\n                                <ThemeProvider>\n                                    <OrderConfirmation\n                                        {...this.props}\n                                        createAccount={this.createAccount}\n                                        createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                        embeddedStylesheet={this.embeddedStylesheet}\n                                        errorLogger={this.errorLogger}\n                                    />\n                                </ThemeProvider>\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\n        password,\n        confirmPassword,\n    }) => {\n        const { orderId } = this.props;\n\n        return this.accountService.create({\n            orderId,\n            newsletter: false,\n            password,\n            confirmPassword,\n        });\n    };\n}\n\nexport default OrderConfirmationApp;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { ReactElement, ReactNode, useEffect, useMemo, useRef, useState } from 'react';\n\nimport CheckoutContext from './CheckoutContext';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nconst CheckoutProvider = ({ checkoutService, children }: CheckoutProviderProps): ReactElement => {\n    const [checkoutState, setCheckoutState] = useState<CheckoutSelectors>(() =>\n        checkoutService.getState(),\n    );\n    const unsubscribeRef = useRef<(() => void) | undefined>();\n\n    const contextValue = useMemo(\n        () => ({\n            checkoutService,\n            checkoutState,\n        }),\n        [checkoutService, checkoutState],\n    );\n\n    useEffect(() => {\n        unsubscribeRef.current = checkoutService.subscribe((newCheckoutState) =>\n            setCheckoutState(newCheckoutState),\n        );\n\n        return () => {\n            if (unsubscribeRef.current) {\n                unsubscribeRef.current();\n                unsubscribeRef.current = undefined;\n            }\n        };\n    }, [checkoutService]);\n\n    return <CheckoutContext.Provider value={contextValue}>{children}</CheckoutContext.Provider>;\n};\n\nexport default CheckoutProvider;\n","import { CustomerPasswordRequirements, ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n    children?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '0%', top: '-300%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: any;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n}\n","import { Consignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: Consignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: Consignment) {\n    return consignment.discounts.reduce((discountTotal, discount) => {\n        return discount.type === 'AUTOMATIC' ? discountTotal + discount.amount : discountTotal;\n    }, 0);\n}\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst CheckoutButton: FunctionComponent<CheckoutButtonProps> = ({\n    checkoutService: { deinitializeCustomer, initializeCustomer },\n    checkoutButtonContainerClass,\n    containerId,\n    methodId,\n    onUnhandledError,\n    onWalletButtonClick,\n    additionalInitializationOptions,\n}) => {\n    const initializeCustomerStrategyOrThrow = async () => {\n        try {\n            await initializeCustomer({\n                methodId,\n                [methodId]: {\n                    container: containerId,\n                    onUnhandledError,\n                    onClick: () => onWalletButtonClick(methodId),\n                    ...additionalInitializationOptions,\n                },\n            });\n        } catch (error) {\n            if (typeof onUnhandledError === 'function' && error instanceof Error) {\n                onUnhandledError(error);\n            }\n        }\n    };\n\n    const deinitializeCustomerStrategyOrThrow = async () => {\n        try {\n            await deinitializeCustomer({ methodId });\n        } catch (error) {\n            if (typeof onUnhandledError === 'function' && error instanceof Error) {\n                onUnhandledError(error);\n            }\n        }\n    };\n\n    useEffect(() => {\n        void initializeCustomerStrategyOrThrow();\n\n        return () => {\n            void deinitializeCustomerStrategyOrThrow();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return <div className={checkoutButtonContainerClass} id={containerId} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    CheckoutButton,\n    [],\n);\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport { isHTMLElement } from '@bigcommerce/checkout/instrument-utils';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div');\n\n    if (container) {\n        const amazonButton = container.shadowRoot?.querySelector('.amazonpay-button-view1');\n\n        if (isHTMLElement(amazonButton)) {\n            amazonButton.style.height = '36px';\n\n            return;\n        }\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n};\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    AmazonPayV2Button,\n    [{ id: 'amazonpay' }],\n);\n","export default function isHTMLElement(element: unknown): element is HTMLElement {\n    return element instanceof HTMLElement;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst BigCommercePaymentsButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: props.onUnhandledError,\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    BigCommercePaymentsButton,\n    [{ id: 'bigcommerce_payments' }],\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst BigcommercePaymentsPayLaterButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: props.onUnhandledError,\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    BigcommercePaymentsPayLaterButton,\n    [{ id: 'bigcommerce_payments_paylater' }],\n);\n","import setPrototypeOf from '../setPrototypeOf';\n\nimport CustomError from './CustomError';\n\nexport default class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","export default function setPrototypeOf<T extends object>(object: T, prototype: object): T {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else if (hasProto(object)) {\n        // eslint-disable-next-line no-proto\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction hasProto(object: object): object is object & { __proto__: object } {\n    return '__proto__' in object;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    EmbeddedCheckoutUnsupportedError,\n    isEmbedded,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport './GooglePayButton.scss';\n\nconst GooglePayButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { language, onUnhandledError } = props;\n\n    if (isEmbedded()) {\n        onUnhandledError(\n            new EmbeddedCheckoutUnsupportedError(\n                language.translate('embedded_checkout.unsupported_error', {\n                    methods: 'googlepay',\n                }),\n            ),\n        );\n\n        return null;\n    }\n\n    return <CheckoutButton checkoutButtonContainerClass=\"google-pay-top-button\" {...props} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    GooglePayButton,\n    [\n        { id: 'googlepayadyenv2' },\n        { id: 'googlepayadyenv3' },\n        { id: 'googlepayauthorizenet' },\n        { id: 'googlepaybnz' },\n        { id: 'googlepaybraintree' },\n        { id: 'googlepaypaypalcommerce' },\n        { id: 'googlepaycheckoutcom' },\n        { id: 'googlepaycybersourcev2' },\n        { id: 'googlepayorbital' },\n        { id: 'googlepaystripe' },\n        { id: 'googlepaystripeupe' },\n        { id: 'googlepayworldpayaccess' },\n        { id: 'googlepaytdonlinemart' },\n        { id: 'googlepaystripeocs' },\n    ],\n);\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst PayPalCommerceCreditButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { onUnhandledError } = props;\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: onUnhandledError,\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    PayPalCommerceCreditButton,\n    [{ id: 'paypalcommercecredit' }],\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst PayPalCommerceButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { onUnhandledError } = props;\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: onUnhandledError,\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    PayPalCommerceButton,\n    [{ id: 'paypalcommerce' }],\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst StripeLinkV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        loadingContainerId: 'checkout-app',\n        methodId: 'optimized_checkout',\n        gatewayId: 'stripeocs',\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    StripeLinkV2Button,\n    [{ id: 'stripeocs' }],\n);\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    BigCommercePaymentsPayPal = 'bigcommerce_payments_paypal',\n    BigCommercePaymentsPayLater = 'bigcommerce_payments_paylater',\n    BigCommercePaymentsCreditCards = 'bigcommerce_payments_creditcards',\n    BigCommercePaymentsAlternativeMethod = 'bigcommerce_payments_apms',\n    BigCommercePaymentsVenmo = 'bigcommerce_payments_venmo',\n    BigCommercePaymentsFastLane = 'bigcommerce_payments_fastlane',\n    BigCommercePaymentsGooglePay = 'googlepay_bigcommerce_payments',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    Ratepay = 'ratepay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeOCSGooglePay = 'googlepaystripeocs',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n    TdOnlineMartGooglePay = 'googlepaytdonlinemart',\n}\n\nexport default PaymentMethodId;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    additionalClassName?: string;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    additionalClassName,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label',\n            additionalClassName,\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import { CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName: string, methodId: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n    walletButtonClick(methodId: string): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    Component,\n    createElement,\n    FunctionComponent,\n    memo,\n    useCallback,\n    useMemo,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest}>{renderInnerField}</Field>;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId, meta }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    meta={meta}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\n    componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\n        const {\n            field: { value },\n            onChange = noop,\n        } = this.props;\n        const comparableValue = isDate(value) ? value.getTime() : value;\n        const comparablePrevValue = isDate(prevField.value)\n            ? prevField.value.getTime()\n            : prevField.value;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(value);\n        }\n    }\n\n    render() {\n        const { component = 'input', field, render } = this.props;\n\n        if (render) {\n            return (render as any)(this.props);\n        }\n\n        if (typeof component === 'string') {\n            return createElement(component as any, field);\n        }\n\n        return createElement(component as any, this.props);\n    }\n}\n\nexport default memo(BasicFormField);\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { ReactElement, ReactNode, SyntheticEvent } from 'react';\n\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isHtmlError from './isHtmlError';\nimport isRequestError from './isRequestError';\n\nimport { CustomError } from './index';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError | CustomError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nconst ErrorModal = ({\n    error,\n    message = error && error.message,\n    onClose = noop,\n    shouldShowErrorCode = true,\n    title = error && isCustomError(error) && error.title,\n}: ErrorModalProps): ReactElement => {\n    const aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    const handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n\n    const renderHeader = (): ReactNode => (\n        <ModalHeader>\n            <IconError\n                additionalClassName=\"icon--error modal-header-icon\"\n                size={IconSize.Small}\n            />\n            <span aria-live=\"assertive\" role=\"alert\">\n                {title || <TranslatedString id=\"common.error_heading\" />}\n            </span>\n        </ModalHeader>\n    );\n\n    const renderBody = (): ReactNode => (\n        <>\n            {error && isHtmlError(error) &&\n                <TranslatedHtml id={error.data.translationKey} />\n            }\n            {message && (\n                <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                    {message}\n                </p>\n            )}\n\n            <div className=\"optimizedCheckout-contentSecondary\">{renderErrorCode()}</div>\n        </>\n    );\n\n    const renderFooter = (): ReactNode => (\n        <Button onClick={handleOnRequestClose} size={ButtonSize.Small}>\n            <TranslatedString id=\"common.ok_action\" />\n        </Button>\n    );\n\n    const renderErrorCode = (): ReactNode => {\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    };\n\n    return (\n        <Modal\n            additionalModalClassName=\"modal--error\"\n            aria={aria}\n            footer={renderFooter()}\n            header={renderHeader()}\n            isOpen={!!error}\n            onRequestClose={handleOnRequestClose}\n        >\n            {renderBody()}\n        </Modal>\n    );\n};\n\nexport default ErrorModal;\n","import { CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\n\nexport default function isHtmlError(error: Error): error is CustomError {\n\n    return 'type' in error &&\n        error.type === 'custom' &&\n        'data' in error &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        'shouldBeTranslatedAsHtml' in error.data &&\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\n}\n","import { Address, FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(\n    address: Address,\n    formFields: FormField[],\n): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string, StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label, maxLength }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name}));\n                }\n\n                if ((name === 'address1' || name === 'address2') && maxLength) {\n                    schema[name] = schema[name]\n                        .max(maxLength, translate('max', { label, name, max: maxLength }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n                // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { ObjectSchema } from 'yup';\n\nimport {\n    FormFieldValues,\n    getFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_min_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalFastlane: FunctionComponent = () => (\n    <svg viewBox=\"0 0 101 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M.009 9.791 1.653.298C1.681.1 1.805 0 1.997 0H7.74c.22 0 .332.141.29.354l-.236 1.334c-.028.185-.152.298-.344.298H3.627l-.359 2.058h3.479c.22 0 .332.142.29.354l-.221 1.306C6.788 5.9 6.664 6 6.472 6H2.936l-.662 3.847c-.028.198-.152.298-.344.298H.298c-.22 0-.332-.142-.289-.354m6.78-1.49c0-1.844 1.905-2.468 3.906-2.71.234-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.035.269-1.23.796-.068.185-.18.27-.358.27H7.975c-.18 0-.304-.085-.304-.241 0-.044.014-.086.028-.128.441-1.334 1.67-2.186 3.507-2.186s2.843.71 2.843 2.428c0 .326-.04.739-.11 1.122l-.373 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.11.341-.318.341h-1.283c-.192 0-.304-.1-.304-.282 0-.17.04-.37.069-.554-.524.539-1.2.978-2.402.978-1.42 0-2.332-.725-2.332-1.986zm5.036-1.205.054-.256-.372.041c-.746.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.504-.78 1.725-1.773zm2.446 1.36c-.04-.17-.07-.297-.07-.438 0-.242.124-.313.318-.313h1.588c.192 0 .29.1.332.298.152.554.607.795 1.284.795.773 0 1.186-.326 1.186-.751 0-.369-.415-.54-1.104-.752l-.813-.256c-1.173-.369-2.14-.795-2.14-2.115 0-1.603 1.475-2.483 3.423-2.483 1.519 0 2.762.412 3.12 1.986.015.07.029.141.029.226 0 .142-.124.198-.318.198h-1.504c-.18 0-.276-.085-.36-.27-.165-.37-.538-.596-1.13-.596-.691 0-1.036.27-1.036.653s.332.554 1.284.852l.539.17c1.243.398 2.278.866 2.278 2.059 0 1.732-1.519 2.639-3.59 2.639-1.602 0-2.996-.468-3.313-1.902h-.005zm7.786.455c0-.269.04-.483.083-.725l.676-3.888h-.745c-.22 0-.332-.141-.29-.354l.166-.951c.029-.185.152-.298.344-.298h.8l.29-1.717c.028-.198.152-.298.344-.298h1.519c.22 0 .332.142.29.354l-.29 1.661h.966c.22 0 .332.142.29.356l-.166.951c-.029.186-.152.298-.345.298h-1.02l-.442 2.54c-.083.483-.152.851-.152 1.149 0 .468.152.624.47.624.124 0 .235-.015.318-.015.22 0 .29.17.249.383l-.152.922c-.055.356-.263.412-.76.412-1.297 0-2.443-.071-2.443-1.405m3.995.88 1.63-9.493C27.71.1 27.834 0 28.026 0h1.519c.22 0 .332.141.29.354l-1.643 9.493c-.028.198-.152.298-.344.298h-1.505c-.221 0-.332-.141-.29-.354zm3.147-1.49c0-1.844 1.905-2.468 3.906-2.71.235-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.034.269-1.229.796-.069.185-.18.27-.359.27h-1.407c-.18 0-.304-.085-.304-.241 0-.044.015-.086.028-.128.442-1.334 1.67-2.186 3.508-2.186 1.837 0 2.843.71 2.843 2.428 0 .326-.04.739-.112 1.122l-.372 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.111.341-.318.341h-1.284c-.192 0-.303-.1-.303-.282 0-.17.04-.37.068-.554-.524.539-1.2.978-2.401.978-1.422 0-2.333-.725-2.333-1.986V8.3m4.914-1.205.055-.256-.373.041c-.745.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.505-.78 1.725-1.773zm2.475 2.695 1.16-6.798c.028-.2.152-.298.344-.298h1.421c.22 0 .318.142.275.356l-.11.666c.357-.524 1.13-1.193 2.4-1.193 1.382 0 2.182.88 2.182 2.256 0 .269-.029.54-.083.866l-.731 4.2c-.028.198-.152.298-.344.298h-1.519c-.22 0-.332-.141-.29-.353l.566-3.25c.083-.482.11-.851.11-1.121 0-.766-.274-1.179-.95-1.179-.898 0-1.436.725-1.671 2.086l-.608 3.52c-.028.197-.152.297-.344.297h-1.519c-.22 0-.332-.141-.29-.353m8.063-2.824c0-2.384 1.588-4.456 4.35-4.456 2.14 0 3.45 1.22 3.45 3.42 0 .256-.014.483-.04.71-.028.2-.152.297-.344.297h-5.233c.028 1.051.496 1.689 1.56 1.689.538 0 .91-.198 1.214-.51a.47.47 0 0 1 .387-.186h1.67c.193 0 .305.057.305.2 0 .042-.015.1-.069.198-.705 1.25-1.836 2.071-3.671 2.071-2.098 0-3.576-1.178-3.576-3.434zm5.591-1.405c0-.908-.484-1.476-1.421-1.476-1.009 0-1.616.71-1.78 1.476h3.203zm34.293-.611-1.504 2.6-.764-2.579a.195.195 0 0 0-.185-.141h-1.355a.15.15 0 0 0-.14.195l1.367 4.343-1.236 2.046c-.06.099.009.227.123.227h1.462a.24.24 0 0 0 .206-.12l3.817-6.465a.148.148 0 0 0-.126-.225h-1.46a.23.23 0 0 0-.204.119zM62.935 12c-.135 0-.206-.063-.206-.168 0-.032.01-.074.03-.116l.66-1.613-1.947-5.21c-.03-.084-.052-.126-.052-.189 0-.105.083-.136.216-.136h.7c.135 0 .227.073.268.2l.937 2.816c.176.527.299.886.433 1.329h.02c.176-.517.268-.823.454-1.36l.957-2.785q.078-.202.278-.2h.629c.134 0 .227.041.227.147a.5.5 0 0 1-.052.169l-2.699 6.927c-.051.127-.134.19-.268.19h-.587zm-4.082-1.772c-.927 0-1.524-.422-1.833-.906v.537c0 .158-.083.243-.237.243h-.505c-.154 0-.237-.085-.237-.243V2.803c0-.158.083-.243.237-.243h.577c.154 0 .237.085.237.243v1.381c0 .38 0 .697-.01 1.086.308-.454.906-.875 1.761-.875 1.535 0 2.523 1.244 2.523 2.921s-1.03 2.911-2.513 2.911m-.205-.876c1.009 0 1.596-.801 1.596-2.025s-.597-2.035-1.606-2.035-1.606.855-1.606 2.035.597 2.025 1.617 2.025zm12.82-1.666c1.397 0 2.58-1.043 2.796-2.454.218-1.424-.87-2.666-2.408-2.67h-2.482a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.194zm1.1-2.52c-.082.527-.479.915-1.24.915h-.972l.294-1.916h.955c.788 0 1.044.475.962 1zm7.386-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.656 1.918 0 0-.638 1.929.803 2.988 0 0 1.336 1.019 2.842-.063l-.026.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.182.182 0 0 0-.178-.214zm-1.831 2.72c-.108.705-.675 1.225-1.4 1.225a1.3 1.3 0 0 1-.393-.058c-.537-.178-.844-.705-.757-1.28.108-.706.676-1.226 1.403-1.226q.216 0 .392.06c.54.178.843.707.755 1.28zm11.3.136c1.396 0 2.58-1.043 2.795-2.454.218-1.424-.87-2.666-2.408-2.67h-2.48a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.19v.002zm1.101-2.52c-.082.527-.478.915-1.239.915h-.972l.294-1.916h.955c.786 0 1.043.475.962 1zm7.387-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.655 1.918 0 0-.639 1.929.803 2.988 0 0 1.337 1.019 2.842-.063l-.027.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.183.183 0 0 0-.18-.214m-1.831 2.72c-.109.705-.674 1.225-1.4 1.225q-.216 0-.392-.058c-.537-.178-.845-.705-.757-1.28.108-.706.677-1.226 1.402-1.226q.216 0 .392.06c.537.178.843.707.756 1.28zm3.233-4.82L98.206 9.92a.18.18 0 0 0 .178.212h1.314a.2.2 0 0 0 .192-.169l1.107-7.19a.18.18 0 0 0-.178-.213h-1.315a.2.2 0 0 0-.191.17\"\n            fill=\"#333333\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalFastlane);\n","import React from 'react';\n\nimport { IconPayPalFastlane } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPayPalFastlaneLabel.scss';\n\nconst PoweredByPayPalFastlaneLabel = () => (\n    <div className=\"powered-by-paypal-fastlane\" data-test=\"paypal-fastlane-icon\">\n        <IconPayPalFastlane />\n    </div>\n);\n\nexport default PoweredByPayPalFastlaneLabel;\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, testId, themeV2 = false, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                testId={testId}\n                type=\"checkbox\"\n            />\n            <Label additionalClassName={themeV2 ? 'body-regular' : ''} htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport CheckboxInput from './CheckboxInput';\nimport FormFieldError from './FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n    testId?: string;\n    themeV2?: boolean;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n    testId,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                    testId={testId}\n                    themeV2={themeV2}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isPayPalFastlaneCustomer from './is-paypal-fastlane-customer';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\n\nconst usePayPalFastlaneAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getPaymentProviderCustomer } = checkoutState.data;\n    const paymentWithCustomCheckout: string =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const isPayPalFastlaneEnabled = isPayPalFastlaneMethod(paymentWithCustomCheckout);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const paymentProviderCustomer = getPaymentProviderCustomer() || undefined;\n    const paypalFastlaneCustomer = isPayPalFastlaneCustomer(paymentProviderCustomer)\n        ? paymentProviderCustomer\n        : {};\n\n    const customerAuthenticationState = paypalFastlaneCustomer.authenticationState;\n    const paypalFastlaneAddresses = paypalFastlaneCustomer.addresses || [];\n\n    const shouldShowPayPalFastlaneLabel =\n        paypalFastlaneAddresses.length > 0 && isPayPalFastlaneEnabled;\n\n    const shouldShowPayPalFastlaneShippingForm =\n        paypalFastlaneAddresses.length > 0 &&\n        customerAuthenticationState &&\n        customerAuthenticationState !== 'CANCELED' &&\n        customerAuthenticationState !== 'unrecognized';\n\n    return {\n        isPayPalFastlaneEnabled,\n        paypalFastlaneAddresses,\n        shouldShowPayPalFastlaneLabel,\n        shouldShowPayPalFastlaneShippingForm,\n    };\n};\n\nexport default usePayPalFastlaneAddress;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import { ComponentType } from 'react';\n\nimport { ResolvableComponent } from '.';\n\nexport default function isResolvableComponent<TProps, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n): Component is ResolvableComponent<TProps, TIdentifier> {\n    return 'resolveIds' in Component;\n}\n","import { ComponentType } from 'react';\n\nimport { isResolvableComponent } from '@bigcommerce/checkout/payment-integration-api';\n\ninterface ResolveResult<TProps> {\n    component: ComponentType<TProps>;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n): ComponentType<TProps> | undefined {\n    const results: Array<ResolveResult<TProps>> = [];\n\n    for (const [_, Component] of Object.entries(components)) {\n        if (!isResolvableComponent<TProps, TResolveId>(Component)) {\n            continue;\n        }\n\n        for (const resolverId of Component.resolveIds) {\n            const result = { component: Component, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .find((result) => result.matches > 0);\n\n    return matched?.component ?? results.find((result) => result.default)?.component;\n}\n","import React, { FunctionComponent, memo } from 'react';\nimport Media, { MediaQueryObject, MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\ninterface QueryResults {\n    [key: string]: boolean;\n}\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: QueryResults) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n    themeV2?: boolean;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    themeV2 = false,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n            { 'sub-header': themeV2 && !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, { ComponentType, Context, FunctionComponent, memo, useContext, useMemo } from 'react';\nimport { Omit } from 'utility-types';\n\nimport { MatchedProps } from './InjectHoc';\nimport MappableInjectHoc, { MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","import { Component, ReactNode } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children: (props: { toggle: any; isOpen: boolean }) => ReactNode;\n}\n\nexport interface ToggleState {\n    isOpen: boolean;\n}\n\nexport default class Toggle extends Component<ToggleProps, ToggleState> {\n    constructor(props: ToggleProps) {\n        super(props);\n\n        this.state = { isOpen: !!props.openByDefault };\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { isOpen } = this.state;\n\n        return children({\n            isOpen,\n            toggle: this.toggle,\n        });\n    }\n\n    private toggle: (event: Event) => void = (event) => {\n        const { isOpen } = this.state;\n\n        event.preventDefault();\n\n        this.setState({ isOpen: !isOpen });\n    };\n}\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import {\n    Address,\n    AddressRequestBody,\n    BillingAddress,\n    CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalFastlaneAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalFastlaneAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalFastlaneAddress));\n\nconst isPayPalFastlaneAddress = (address: Address, addresses?: Address[]): boolean => {\n    if (!addresses || addresses.length === 0) {\n        return false;\n    }\n\n    return addresses.some((paypalFastlaneAddress) =>\n        isEqualToPayPalFastlaneAddress(address, paypalFastlaneAddress),\n    );\n};\n\nexport default isPayPalFastlaneAddress;\n","export default function getNestedValue(obj: any, path: string): any {\n  return path.split('.').reduce((acc, key) => acc && acc[key], obj);\n}\n","import { ErrorMessage, useFormikContext } from 'formik';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nimport { getNestedValue } from '../../common/utility';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const formikContext = useFormikContext<{ [key: string]: any }>();\n\n    const hasError = getNestedValue(formikContext?.errors, name) && getNestedValue(formikContext?.touched, name);\n\n    const renderMessage = useCallback(\n        (message: string) => (\n            <label\n                aria-live=\"polite\"\n                className=\"form-inlineMessage\"\n                htmlFor={name}\n                id={errorId}\n                role=\"alert\"\n            >\n                {message}\n            </label>\n        ),\n        [errorId, name],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({isSubmitted}) => (\n                <ul className=\"form-field-errors\" data-test={testId}>\n                    <li className=\"form-field-error\">\n                        {(hasError && isSubmitted) ? <ErrorMessage name={name} render={renderMessage} /> :\n                            <span\n                                aria-hidden=\"true\"\n                                className=\"is-srOnly\"\n                                id={errorId}\n                            />\n                        }\n                    </li>\n                </ul>\n            )}\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import React, { FunctionComponent, MouseEventHandler } from 'react';\n\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { useLocale } from './LocaleContext';\nimport { TranslatedStringProps } from './TranslatedString';\n\nexport type TranslatedLinkProps = TranslatedStringProps & {\n    testId?: string;\n    onClick: MouseEventHandler;\n};\n\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\n    const { language } = useLocale();\n    const translatedString = language.translate(id, data);\n    const parsedString = parseAnchor(translatedString);\n\n    return parsedString.length ? (\n        <>\n            {parsedString[0]}\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\n                {parsedString[1]}\n            </a>\n            {parsedString[2]}\n        </>\n    ) : (\n        <>{translatedString}</>\n    );\n};\n\nexport default TranslatedLink;\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\n\nexport interface StaticConsignmentItemListProps {\n    consignment: Consignment;\n    cart: Cart;\n}\n\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\n    cart,\n    consignment,\n}) => {\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticConsignment-items\">\n            <strong>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n            </strong>\n\n            <ul>\n                {lineItems.map((item) => (\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(StaticConsignmentItemList);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    BodlEventsPayload,\n    BodlService,\n    BraintreeAnalyticTrackerService,\n    CheckoutService,\n    createBodlService,\n    createBraintreeAnalyticTracker,\n    createPayPalCommerceAnalyticTracker,\n    createStepTracker,\n    PayPalCommerceAnalyticTrackerService,\n    StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n    const getBraintreeAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<BraintreeAnalyticTrackerService>(\n                createBraintreeAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n    const getPayPalCommerceAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<PayPalCommerceAnalyticTrackerService>(\n                createPayPalCommerceAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n        getBraintreeAnalyticTracker().customerPaymentMethodExecuted();\n        getPayPalCommerceAnalyticTracker().customerPaymentMethodExecuted();\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n        getBraintreeAnalyticTracker().selectedPaymentMethod(methodId);\n        getPayPalCommerceAnalyticTracker().selectedPaymentMethod(methodId);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n        getBraintreeAnalyticTracker().paymentComplete();\n        getPayPalCommerceAnalyticTracker().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const walletButtonClick = (methodId: string) => {\n        getBraintreeAnalyticTracker().walletButtonClick(methodId);\n        getPayPalCommerceAnalyticTracker().walletButtonClick(methodId);\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n        walletButtonClick,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","import { ExtensionAction, ExtensionActionType, ExtensionState } from './ExtensionProvider';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            if (typeof action.payload === 'boolean') {\n                return { ...state, isShowingLoadingIndicator: action.payload };\n            }\n\n            break;\n\n        case ExtensionActionType.RE_RENDER_SHIPPING_FORM:\n            if (typeof action.payload === 'number') {\n                return { ...state, shippingFormRenderTimestamp: action.payload };\n            }\n\n            break;\n\n        default:\n            return state;\n    }\n\n    return state;\n};\n","import { CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useReducer } from 'react';\n\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n    shippingFormRenderTimestamp: undefined | number;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean | number;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n    RE_RENDER_SHIPPING_FORM,\n}\n\nexport interface ExtensionProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n    errorLogger: ErrorLogger;\n}\n\nexport const ExtensionProvider = ({\n    checkoutService,\n    children,\n    errorLogger,\n}: ExtensionProviderProps) => {\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n        shippingFormRenderTimestamp: undefined,\n    });\n    const extensionService = new ExtensionService(checkoutService, dispatch, errorLogger);\n\n    const extensionValues = {\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingFormHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingForm> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingForm,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingStepHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingStep> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingStep,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionMessageType, ExtensionQueryType } from '@bigcommerce/checkout-sdk';\n\nimport { QueryHandler, QueryHandlerProps } from './QueryHandler';\n\nexport function createGetConsignmentHandler({\n    checkoutService,\n    extension,\n}: QueryHandlerProps): QueryHandler<ExtensionQueryType.GetConsignments> {\n    return {\n        queryType: ExtensionQueryType.GetConsignments,\n        handler: async (data) => {\n            if (!data.payload?.useCache) {\n                await checkoutService.loadCheckout();\n            }\n\n            const consignments = checkoutService.getState().data.getCheckout()?.consignments || [];\n\n            checkoutService.postMessageToExtension(extension.id, {\n                type: ExtensionMessageType.GetConsignments,\n                payload: {\n                    consignments,\n                },\n            });\n        },\n    };\n}\n","import {\n    CheckoutService,\n    Extension,\n    ExtensionCommandMap,\n    ExtensionQueryMap,\n    ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ErrorLevelType, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionAction } from './ExtensionProvider';\nimport { CommandHandler, QueryHandler } from './handler';\nimport * as commandHandlerFactories from './handler/commandHandlers';\nimport * as queryHandlerFactories from './handler/queryHandlers';\n\nexport class ExtensionService {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private dispatch: React.Dispatch<ExtensionAction>,\n        private errorLogger: ErrorLogger,\n    ) {}\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    preloadExtensions(): void {\n        const state = this.checkoutService.getState();\n        const extensions = state.data.getExtensions();\n        const cartId = state.data.getCart()?.id;\n        const parentOrigin = state.data.getConfig()?.links.siteLink;\n\n        if (!cartId || !parentOrigin) {\n            return;\n        }\n\n        extensions?.forEach((extension) => {\n            const url = new URL(extension.url);\n\n            url.searchParams.set('extensionId', extension.id);\n            url.searchParams.set('cartId', cartId);\n            url.searchParams.set('parentOrigin', parentOrigin);\n\n            const link = document.createElement('link');\n\n            link.rel = 'preload';\n            link.as = 'document';\n            link.href = url.toString();\n\n            const head = document.head;\n\n            head.appendChild(link);\n        });\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        try {\n            await this.checkoutService.renderExtension(container, region);\n\n            this.registerHandlers(extension);\n        } catch (error: unknown) {\n            if (error instanceof Error) {\n                this.errorLogger.log(\n                    error,\n                    { errorCode: 'checkoutExtension' },\n                    ErrorLevelType.Error,\n                    { extensionId: extension.id, region },\n                );\n            }\n        }\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        this.checkoutService.clearExtensionCache(region);\n\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(commandHandlerFactories).forEach((createCommandHandlerFactory) => {\n            const handlerFactory = createCommandHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n\n        Object.values(queryHandlerFactories).forEach((createQueryHandlerFactory) => {\n            const handlerFactory = createQueryHandlerFactory(handlerProps);\n\n            if (this.isQueryHandler(handlerFactory.queryType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionQuery(\n                        extension.id,\n                        handlerFactory.queryType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n\n    private isQueryHandler<T extends keyof ExtensionQueryMap>(\n        type: T,\n        handler: QueryHandler<any>,\n    ): handler is QueryHandler<T> {\n        return handler.queryType === type;\n    }\n}\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            themeV2 = false,\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n                { 'floating-form-field-input': themeV2 && isFloatingLabelEnabled },\n                { 'body-regular': themeV2 && !isFloatingLabelEnabled },\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import {\n    CardInstrument,\n    CustomerAddress,\n    PaymentProviderCustomer,\n} from '@bigcommerce/checkout-sdk';\n\ninterface PayPalFastlaneCustomer {\n    authenticationState?: string;\n    addresses?: CustomerAddress[];\n    instruments?: CardInstrument[];\n}\n\nexport default function isPayPalFastlaneCustomer(\n    customer?: PaymentProviderCustomer,\n): customer is PayPalFastlaneCustomer {\n    if (!customer) {\n        return false;\n    }\n\n    return (\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\n    );\n}\n","import React, { FunctionComponent, ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n    <ErrorBoundary\n        fallback={\n            <div className=\"lazyContainer-error\">\n                <TranslatedString id=\"common.unstable_network_error\" />\n            </div>\n        }\n        filter={filterError}\n    >\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n    </ErrorBoundary>\n);\n\nexport default LazyContainer;\n","import {\n    CheckoutPayment,\n    GiftCertificateOrderPayment,\n    OrderPayment,\n} from '@bigcommerce/checkout-sdk';\n\nexport default function isGiftCertificatePayment(\n    payment: OrderPayment | CheckoutPayment,\n): payment is GiftCertificateOrderPayment {\n    return payment.providerId === 'giftcertificate';\n}\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\ninterface ModalHeaderProps {\n    children?: ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import { kebabCase } from 'lodash';\n\nexport default function getAppliedStyles(\n    element: HTMLElement,\n    properties: string[],\n    pseudoElementSelector?: string,\n): { [key: string]: string } {\n    const declaration = window.getComputedStyle(element, pseudoElementSelector);\n\n    return properties.reduce(\n        (result, propertyName) => ({\n            ...result,\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\n        }),\n        {},\n    );\n}\n","import { CheckoutPayment, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\n    return payment.providerId === 'storecredit';\n}\n","import { useContext } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const useExtensions = () => {\n    const extensionContext = useContext(ExtensionContext);\n\n    if (!extensionContext) {\n        throw new Error('useExtensions must be used within an <ExtensionProvider>');\n    }\n\n    return extensionContext;\n};\n","import classNames from 'classnames';\nimport React, { FieldsetHTMLAttributes, forwardRef, ReactNode, Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBigCommercePaymentsFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.BigCommercePaymentsCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BigCommercePaymentsFastLane\n    );\n};\n\nexport default isBigCommercePaymentsFastlaneMethod;\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import React, { FunctionComponent } from 'react';\n\nimport { isMobileView } from '../../utils';\n\nimport { CartSummarySkeleton } from './CartSummarySkeleton';\n\nconst OrderConfirmationPageSkeletonDesktop: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\">\n        <div className=\"layout-main\" data-test=\"order-confirmation-page-skeleton\">\n            <div className=\"order-confirmation-page-skeleton\">\n                <div className=\"thankyou\" />\n                <div className=\"line-1\" />\n                <div className=\"line-2\" />\n                <div className=\"continue\" />\n            </div>\n        </div>\n        <CartSummarySkeleton />\n    </div>\n);\n\nconst OrderConfirmationPageSkeletonMobile: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\">\n        <div className=\"layout-main\" data-test=\"order-confirmation-page-skeleton-mobile\">\n            <div className=\"order-confirmation-page-skeleton\">\n                <div className=\"thankyou\" />\n                <div className=\"text\">\n                    <div className=\"line\">\n                        <div className=\"animated-grey-box t1\" />\n                        <div className=\"animated-grey-box t2\" />\n                    </div>\n                    <div className=\"animated-grey-box first-line\" />\n                    <div className=\"animated-grey-box\" />\n                    <div className=\"line\">\n                        <div className=\"animated-grey-box t3\" />\n                        <div className=\"animated-grey-box t4\" />\n                    </div>\n                </div>\n                <div className=\"continue\" />\n            </div>\n        </div>\n        <div className=\"cartDrawer optimizedCheckout-orderSummary\">\n            <div className=\"checkout-page-skeleton--cartdrawer\">\n                <div className=\"product\">\n                    <div className=\"animated-grey-box figure\" />\n                    <div className=\"details\">\n                        <div className=\"animated-grey-box name\" />\n                        <div className=\"animated-grey-box description\" />\n                    </div>\n                </div>\n                <div className=\"animated-grey-box more\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst OrderConfirmationPageSkeleton: FunctionComponent = () => {\n    return isMobileView() ? (\n        <OrderConfirmationPageSkeletonMobile />\n    ) : (\n        <OrderConfirmationPageSkeletonDesktop />\n    );\n};\n\nexport default OrderConfirmationPageSkeleton;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref, TextareaHTMLAttributes } from 'react';\n\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n    additionalClassName?: string;\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextArea = forwardRef(\n    (\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\n        ref: Ref<HTMLTextAreaElement>,\n    ) => {\n        return (\n            <textarea\n                {...rest}\n                className={\n                    className ||\n                    classNames(\n                        { 'floating-textarea': isFloatingLabelEnabled },\n                        'form-input',\n                        'optimizedCheckout-form-input',\n                        additionalClassName,\n                    )\n                }\n                data-test={testId}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default TextArea;\n","// copied from core package\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n\nlet query: MediaQueryList;\n\nexport function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import { Address, Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\ninterface LocalizedGeography {\n    localizedCountry: string;\n    localizedProvince: string;\n}\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LoadingOverlayProps {\n    isLoading: boolean;\n    hideContentWhenLoading?: boolean;\n    unmountContentWhenLoading?: boolean;\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n    children,\n    hideContentWhenLoading,\n    loadingSkeleton,\n    unmountContentWhenLoading,\n    isLoading,\n}) => {\n    const loadingUI = loadingSkeleton || <LoadingSpinner isLoading={true} />;\n\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\n        return (\n            <>\n                {isLoading ? loadingUI : null}\n                {unmountContentWhenLoading && isLoading ? null : (\n                    <div\n                        style={{\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n                        }}\n                    >\n                        {children}\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"loadingOverlay-container\">\n            {children}\n            {isLoading && (\n                <div\n                    className=\"loadingOverlay optimizedCheckout-overlay\"\n                    data-test=\"loading-overlay\"\n                />\n            )}\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import { createContext, useContext } from 'react';\n\nexport interface ThemeContextProps {\n    themeV2: boolean;\n}\n\nconst ThemeContext = createContext<ThemeContextProps | undefined>(undefined);\n\nexport const useThemeContext = () => {\n    const themeContext = useContext(ThemeContext);\n\n    if (!themeContext) {\n        throw new Error('useThemeContext must be used within an <ThemeContextProvider>');\n    }\n\n    return themeContext;\n};\n\nexport default ThemeContext;\n","enum DynamicFormFieldType {\n    telephone = 'tel',\n    dropdown = 'dropdown',\n    number = 'number',\n    password = 'password',\n    checkbox = 'checkbox',\n    multiline = 'multiline',\n    date = 'date',\n    radio = 'radio',\n    text = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import { Address, CheckoutPayment, FormField } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nexport interface StaticBillingAddressProps {\n    address: Address;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n    fields: FormField[];\n    payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY }) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n        return (\n            <p>\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\n            </p>\n        );\n    }\n\n    return (\n        <>\n            <StaticAddress address={address} type={AddressType.Billing} />\n\n            {showPayPalFastlaneLabel && <PoweredByPayPalFastlaneLabel />}\n        </>\n    );\n};\n\nexport function mapToStaticBillingAddressProps(\n    { checkoutState }: CheckoutContextProps,\n    { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n    const {\n        data: { getBillingAddressFields, getCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n\n    return {\n        fields: getBillingAddressFields(address.countryCode),\n        payments: checkout && checkout.payments,\n    };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import {\n    Address,\n    CheckoutSelectors,\n    Country,\n    ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { localizeAddress } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n    address: Address;\n    type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n    countries?: Country[];\n}\n\nconst StaticAddress: FunctionComponent<\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\n    > = ({\n        countries,\n        address: addressWithoutLocalization,\n    }) => {\n\n    const { themeV2 } = useThemeContext();\n\n    const address = localizeAddress(addressWithoutLocalization, countries);\n    const isValid = !isEmpty(address);\n\n    return !isValid ? null : (\n        <div className=\"vcard checkout-address--static\" data-test=\"static-address\">\n            {(address.firstName || address.lastName) && (\n                <p className={classNames('fn address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n            )}\n\n            {(address.phone || address.company) && (\n                <p className={classNames('address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"company-name\">{`${address.company} `}</span>\n                    <span className=\"tel\">{address.phone}</span>\n                </p>\n            )}\n\n            <div className=\"adr\">\n                <p className={classNames('street-address address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\n                    {address.address2 && (\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\n                    )}\n                </p>\n\n                <p className={classNames('address-entry',\n                    { 'body-regular': themeV2 })}>\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n                    {address.localizedProvince && (\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\n                    )}\n                    {address.postalCode && (\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\n                    )}\n                    {address.localizedCountry && (\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport function mapToStaticAddressProps(\n    context: CheckoutContextProps,\n    { type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n    const {\n        checkoutState: {\n            data: { getBillingCountries, getShippingCountries },\n        },\n    } = context;\n\n    return {\n        countries: type === AddressType.Billing\n            ? getBillingCountries()\n            : getShippingCountries(),\n    };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","import { CurrencyService, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","import { Cart } from '@bigcommerce/checkout-sdk';\n\n/**\n * Minimum charge amounts due to the Stripe documentation\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\n */\nenum stripeLinkMinAmount {\n    'USD' = 0.5,\n    'AED' = 2,\n    'AUD' = 0.5,\n    'BGN' = 1,\n    'BRL' = 0.5,\n    'CAD' = 0.5,\n    'CHF' = 0.5,\n    'CZK' = 15,\n    'DKK' = 2.5,\n    'EUR' = 0.5,\n    'GBP' = 0.3,\n    'HKD' = 4,\n    'HUF' = 175,\n    'INR' = 0.5,\n    'JPY' = 50,\n    'MXN' = 10,\n    'MYR' = 2,\n    'NOK' = 3,\n    'NZD' = 0.5,\n    'PLN' = 2,\n    'RON' = 2,\n    'SEK' = 3,\n    'SGD' = 0.5,\n    'THB' = 10,\n}\n\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\n    return code in stripeLinkMinAmount;\n};\n\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\n    const {\n        currency: { code },\n        cartAmount,\n    } = cart;\n\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default shouldUseStripeLinkByMinimumAmount;\n","export default function parseAnchor(text: string): string[] {\n    const div = document.createElement('div');\n\n    div.innerHTML = text;\n\n    const anchor = div.querySelector('a');\n\n    if (!anchor) {\n        return [];\n    }\n\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\n\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\n}\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","import { LineItem } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\n}\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { MultiShippingTableItemWithType } from './MultishippingType';\n\nexport interface ConsignmentLineItemDetailProps {\n    lineItems: MultiShippingTableItemWithType[] | PhysicalItem[];\n    isMultiShippingSummary?: boolean;\n}\n\nconst renderProductOptionDetails = (item: MultiShippingTableItemWithType | PhysicalItem) => {\n    if (!item.options || !item.options.length) {\n        return null;\n    }\n\n    return (<span className=\"line-item-options\">{` - ${item.options.map(option => option.value).join(' / ')}`}</span>);\n}\n\nexport const renderItemContent = (item: MultiShippingTableItemWithType | PhysicalItem, themeV2 = false, isMultiShippingSummary = false) => {\n    return <span\n        className={classNames(\n            { 'body-regular': themeV2 && !isMultiShippingSummary },\n            { 'sub-text': themeV2 && isMultiShippingSummary },)\n        }>\n        <span className={classNames(\n            { 'body-bold': themeV2 && !isMultiShippingSummary },\n            { 'sub-text-bold': themeV2 && isMultiShippingSummary },)\n        }>\n            {`${item.quantity} x `}\n        </span>\n        {item.name}\n        {renderProductOptionDetails(item)}\n    </span>;\n};\n\nconst ConsignmentLineItemDetail: FunctionComponent<ConsignmentLineItemDetailProps> = ({\n    lineItems,\n    isMultiShippingSummary = false,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <ul className=\"consignment-line-item-list\">\n        {lineItems.map((item) => (\n            <li key={item.id}>\n                {renderItemContent(item, themeV2, isMultiShippingSummary)}\n            </li>\n        ))}\n    </ul>\n    );\n};\n\nexport default memo(ConsignmentLineItemDetail);\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import isBigCommercePaymentsFastlaneMethod from './is-bigcommerce-payments-fastlane-method';\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\n\nconst isPaypalFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        isBraintreeFastlaneMethod(methodId) ||\n        isPayPalCommerceFastlaneMethod(methodId) ||\n        isBigCommercePaymentsFastlaneMethod(methodId)\n    );\n};\n\nexport default isPaypalFastlaneMethod;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPayPalCommerceFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.PaypalCommerceCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\n    );\n};\n\nexport default isPayPalCommerceFastlaneMethod;\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import { createLanguageService, LanguageConfig, LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import React, { FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n    isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div\n            aria-busy=\"true\"\n            className=\"loadingSpinner loadingOverlay-container\"\n            role=\"status\"\n            style={{ height: 100 }}\n        >\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n        </div>\n    );\n};\n\nexport default memo(LoadingSpinner);\n","import React, { ReactNode } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport ThemeContext from './ThemeContext';\n\nexport interface ThemeProviderProps {\n    children?: ReactNode;\n}\n\nexport const ThemeProvider = ({ children }: ThemeProviderProps) => {\n    const {\n        checkoutState: {\n            data: { getConfig },\n        },\n    } = useCheckout();\n\n    const config = getConfig();\n\n    let useNewTheme = false;\n\n    if (config) {\n        useNewTheme = Boolean(\n            config.checkoutSettings.features['CHECKOUT-7962.update_font_style_on_checkout_page'] ??\n                true,\n        );\n    }\n\n    const themeV2 =\n        (window.location.search && window.location.search.includes('v2')) || useNewTheme;\n\n    return <ThemeContext.Provider value={{ themeV2 }}>{children}</ThemeContext.Provider>;\n};\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBraintreeFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isBraintreeFastlaneMethod;\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isExperimentEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n    experimentName: string,\n): boolean {\n    return Boolean(checkoutSettings?.features[experimentName] ?? true);\n}\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import { createContext } from 'react';\n\nimport { ExtensionState } from './ExtensionProvider';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionContextProps {\n    extensionService: ExtensionService;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\n\nexport enum ExtensionRegionContainer {\n    ShippingShippingAddressFormBefore = 'extension-region-shipping-shippingaddressform-before',\n    ShippingShippingAddressFormAfter = 'extension-region-shipping-shippingaddressform-after',\n    ShippingSelectedShippingMethod = 'extension-region-shipping-selectedshippingmethod',\n    PaymentPaymentMethodListBefore = 'extension-region-payment-paymentmethodlist-before',\n    SummaryAfter = 'extension-region-summary-after',\n    SummaryLastItemAfter = 'extension-region-summary-lastitem-after',\n}\n\nexport const extensionRegionToContainerMap: Record<ExtensionRegion, ExtensionRegionContainer | ''> =\n    {\n        [ExtensionRegion.ShippingShippingAddressFormBefore]:\n            ExtensionRegionContainer.ShippingShippingAddressFormBefore,\n        [ExtensionRegion.ShippingShippingAddressFormAfter]:\n            ExtensionRegionContainer.ShippingShippingAddressFormAfter,\n        [ExtensionRegion.ShippingSelectedShippingMethod]:\n            ExtensionRegionContainer.ShippingSelectedShippingMethod,\n        [ExtensionRegion.PaymentPaymentMethodListBefore]:\n            ExtensionRegionContainer.PaymentPaymentMethodListBefore,\n        [ExtensionRegion.SummaryAfter]: ExtensionRegionContainer.SummaryAfter,\n        [ExtensionRegion.SummaryLastItemAfter]: ExtensionRegionContainer.SummaryLastItemAfter,\n        [ExtensionRegion.GlobalWebWorker]: '',\n    };\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { extensionRegionToContainerMap } from './ExtensionRegionContainer';\nimport { useExtensions } from './useExtensions';\n\ninterface ExtensionProps {\n    region: ExtensionRegion;\n}\n\nexport const Extension = ({ region }: ExtensionProps): ReactNode | null => {\n    const {\n        checkoutState: {\n            data: { getExtensions, getConfig, getCheckout },\n        },\n    } = useCheckout();\n    const extensions = getExtensions();\n    const config = getConfig();\n    const checkout = getCheckout();\n    const { extensionService } = useExtensions();\n    const isRegionEnabled =\n        extensions && config && checkout && extensionService.isRegionEnabled(region);\n    const containerId = extensionRegionToContainerMap[region];\n\n    useEffect(() => {\n        if (isRegionEnabled) {\n            void extensionService.renderExtension(containerId, region);\n\n            return () => {\n                extensionService.removeListeners(region);\n            };\n        }\n    }, [containerId, isRegionEnabled, region]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (isRegionEnabled && containerId !== '') {\n        return <div id={containerId} />;\n    }\n\n    return null;\n};\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children?: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children?: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import { CheckoutService, createCurrencyService, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nexport interface LocaleProviderState {\n    config?: StoreConfig;\n}\n\nclass LocaleProvider extends Component<LocaleProviderProps> {\n    state: Readonly<LocaleProviderState> = {};\n\n    private languageService = getLanguageService();\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne((config?: StoreConfig) => {\n        return {\n            currency: config ? createCurrencyService(config) : undefined,\n            date: config\n                ? {\n                      inputFormat: config.inputDateFormat,\n                  }\n                : undefined,\n            language: this.languageService,\n        };\n    });\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                this.setState({ config: data.getConfig() });\n            },\n            ({ data }) => data.getConfig(),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { config } = this.state;\n\n        return (\n            <LocaleContext.Provider value={this.getContextValue(config)}>\n                {children}\n            </LocaleContext.Provider>\n        );\n    }\n}\n\nexport default LocaleProvider;\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nexport default PaymentMethodId;\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface RadioInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst RadioInput = forwardRef(\n    (\n        { additionalClassName, label, value, checked, id, themeV2 = false, ...rest }: RadioInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                checked={checked}\n                className={classNames(\n                    'form-radio',\n                    'optimizedCheckout-form-radio',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"radio\"\n                value={value}\n            />\n            <Label additionalClassName={themeV2 ? 'body-regular' : ''} htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default RadioInput;\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isDate, noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport ReactDatePicker from 'react-datepicker';\n\nimport { withDate, WithDateProps } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown } from '../icon';\n\nimport CheckboxInput from './CheckboxInput';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport { InputProps } from './Input';\nimport RadioInput from './RadioInput';\nimport TextArea from './TextArea';\nimport TextInput from './TextInput';\n\nexport interface DynamicInputProps extends InputProps {\n    id: string;\n    additionalClassName?: string;\n    value?: string | string[];\n    rows?: number;\n    fieldType?: DynamicFormFieldType;\n    options?: FormFieldItem[];\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n}\n\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\n    additionalClassName,\n    date,\n    fieldType,\n    id,\n    name,\n    onChange = noop,\n    options,\n    placeholder,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n    value,\n    ...rest\n}) => {\n    const { inputFormat } = date;\n    const handleDateChange = useCallback(\n        (dateValue: any, event: any) =>\n            onChange({\n                ...event,\n                target: {\n                    name,\n                    value: dateValue,\n                },\n            }),\n        [onChange, name],\n    );\n\n    switch (fieldType) {\n        case DynamicFormFieldType.dropdown:\n            return (\n                <>\n                    <div\n                        className={classNames(\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\n                        )}>\n                        <IconChevronDown />\n                    </div>\n                    <select\n                        {...(rest as any)}\n                        className={classNames(\n                            { 'floating-select': isFloatingLabelEnabled },\n                            'form-select optimizedCheckout-form-select',\n                            { 'floating-form-field-input': themeV2 },\n                        )}\n                        data-test={`${id}-select`}\n                        id={id}\n                        name={name}\n                        onChange={onChange}\n                        value={value === null ? '' : value}\n                    >\n                        {placeholder && <option value=\"\">{placeholder}</option>}\n                        {options &&\n                            options.map(({ label, value: optionValue }) => (\n                                <option key={optionValue} value={optionValue}>\n                                    {label}\n                                </option>\n                            ))}\n                    </select>\n                </>\n            );\n\n        case DynamicFormFieldType.radio:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <RadioInput\n                            {...rest}\n                            checked={optionValue === value}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-radio`}\n                            themeV2={themeV2}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.checkbox:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <CheckboxInput\n                            {...rest}\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-checkbox`}\n                            themeV2={themeV2}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.date:\n            return (\n                <ReactDatePicker\n                    {...(rest as any)}\n                    autoComplete=\"off\"\n                    // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\n                    // https://github.com/Hacker0x01/react-datepicker/issues/1357\n                    // onChangeRaw={ rest.onChange }\n                    calendarClassName=\"optimizedCheckout-contentPrimary\"\n                    className={classNames('form-input optimizedCheckout-form-input', {\n                        'floating-input': isFloatingLabelEnabled,\n                        'floating-form-field-input': themeV2,\n                    })}\n                    dateFormat={inputFormat}\n                    maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\n                    minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\n                    name={name}\n                    onChange={handleDateChange}\n                    placeholderText={inputFormat.toUpperCase()}\n                    popperClassName=\"optimizedCheckout-contentPrimary\"\n                    selected={isDate(value) ? value : undefined}\n                />\n            );\n\n        case DynamicFormFieldType.multiline:\n            return (\n                <TextArea\n                    {...(rest as any)}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    testId={`${id}-text`}\n                    themeV2={themeV2}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n\n        default:\n            return (\n                <TextInput\n                    {...rest}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    testId={`${id}-${\n                        fieldType === DynamicFormFieldType.password ? 'password' : 'text'\n                    }`}\n                    themeV2={themeV2}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n    }\n};\n\nexport default memo(withDate(DynamicInput));\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, MouseEvent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './MultiCheckboxControl.scss';\n\nexport interface MultiCheckboxControlProps {\n    testId?: string;\n    onSelectedAll(): void;\n    onSelectedNone(): void;\n    themeV2?: boolean;\n}\n\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\n    testId,\n    onSelectedAll,\n    onSelectedNone,\n    themeV2 = false,\n}) => {\n    const handleSelectAllClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedAll();\n        },\n        [onSelectedAll],\n    );\n\n    const handleSelectNoneClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedNone();\n        },\n        [onSelectedNone],\n    );\n\n    return (\n        <ul className={classNames('multiCheckbox--controls',\n            { 'body-regular': themeV2 })}>\n            <li className=\"multiCheckbox--control\">\n                <TranslatedString id=\"address.select\" />\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-all-button`}\n                    href=\"#\"\n                    onClick={handleSelectAllClick}\n                >\n                    <TranslatedString id=\"address.select_all\" />\n                </a>\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-none-button`}\n                    href=\"#\"\n                    onClick={handleSelectNoneClick}\n                >\n                    <TranslatedString id=\"address.select_none\" />\n                </a>\n            </li>\n        </ul>\n    );\n};\n\nexport default memo(MultiCheckboxControl);\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport { FieldArray, FieldArrayRenderProps, getIn } from 'formik';\nimport { difference, kebabCase, noop, pick } from 'lodash';\nimport React, { ChangeEvent, FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormFieldContainer from './FormFieldContainer';\nimport FormFieldError from './FormFieldError';\nimport MultiCheckboxControl from './MultiCheckboxControl';\n\nexport interface CheckboxGroupFormFieldProps {\n    id: string;\n    label: ReactNode;\n    name: string;\n    options: FormFieldItem[];\n    onChange?(values: string[]): void;\n    themeV2?: boolean;\n}\n\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\n\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\n    form: { values, errors },\n    id,\n    label,\n    name,\n    onChange = noop,\n    options,\n    push,\n    remove,\n    themeV2,\n}) => {\n    const handleSelectAll = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        difference(\n            options.map(({ value }) => value),\n            checkedValues,\n        ).forEach((val) => push(val));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, options, push, values]);\n\n    const handleSelectNone = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        checkedValues.forEach(() => remove(0));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, remove, values]);\n\n    const handleInputChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const checkedValues: string[] = getIn(values, name) || [];\n            const { value, checked } = event.target;\n\n            if (checked) {\n                push(value);\n            } else {\n                remove(checkedValues.indexOf(value));\n            }\n\n            onChange(getIn(values, name));\n        },\n        [name, onChange, push, remove, values],\n    );\n\n    return (\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\n            {label}\n\n            {options.length > 1 && (\n                <MultiCheckboxControl\n                    onSelectedAll={handleSelectAll}\n                    onSelectedNone={handleSelectNone}\n                    testId={id}\n                    themeV2={themeV2}\n                />\n            )}\n\n            <DynamicInput\n                fieldType={DynamicFormFieldType.checkbox}\n                id={id}\n                name={name}\n                onChange={handleInputChange}\n                options={options}\n                themeV2={themeV2}\n                value={getIn(values, name) || []}\n            />\n\n            <FormFieldError\n                errorId={`${id ?? name}-field-error-message`}\n                name={name}\n                testId={`${kebabCase(name)}-field-error-message`}\n            />\n        </FormFieldContainer>\n    );\n};\n\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\n    id,\n    label,\n    name,\n    onChange,\n    options,\n    themeV2,\n}) => {\n    const renderField = useCallback(\n        (renderProps: FieldArrayRenderProps) => (\n            <MultiCheckboxFormField\n                id={id}\n                label={label}\n                name={name}\n                onChange={onChange}\n                options={options}\n                themeV2={themeV2}\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\n            />\n        ),\n        [id, label, name, onChange, options],\n    );\n\n    return <FieldArray name={name} render={renderField} />;\n};\n\nexport default memo(CheckboxGroupFormField);\n","import { FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FieldProps } from 'formik';\nimport { includes } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormField from './FormField';\nimport Label from './Label';\n\nexport interface DynamicFormFieldOption {\n    code: string;\n    name: string;\n}\n\nexport interface DynamicFormFieldProps {\n    field: FormFieldType;\n    inputId?: string;\n    extraClass?: string;\n    autocomplete?: string;\n    parentFieldName?: string;\n    placeholder?: string;\n    label?: ReactNode;\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string | string[]): void;\n    themeV2?: boolean;\n}\n\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\n    field: {\n        fieldType,\n        type,\n        secret,\n        name,\n        label: fieldLabel,\n        required,\n        options,\n        max,\n        min,\n        maxLength,\n    },\n    parentFieldName,\n    onChange,\n    placeholder,\n    inputId,\n    autocomplete,\n    label,\n    extraClass,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const fieldInputId = inputId || name;\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\n    const isFloatingLabelSupportedFieldType = Boolean(\n        isFloatingLabelEnabled &&\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\n                !fieldType),\n    );\n    const labelComponent = useMemo(\n        () => {\n            let labelClassName = '';\n\n            if (themeV2) {\n                if (isFloatingLabelSupportedFieldType) {\n                    labelClassName = 'floating-form-field-label';\n                } else {\n                    labelClassName = 'body-medium';\n                }\n            }\n\n            return (\n                <Label\n                    additionalClassName={labelClassName}\n                    htmlFor={fieldInputId}\n                    id={`${fieldInputId}-label`}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                >\n                    {label || fieldLabel}\n                    {!required && (\n                        <>\n                            {' '}\n                            <small className=\"optimizedCheckout-contentSecondary\">\n                                <TranslatedString id=\"common.optional_text\" />\n                            </small>\n                        </>\n                    )}\n                </Label>\n            )\n        },\n        [fieldInputId, fieldLabel, required, isFloatingLabelSupportedFieldType, label],\n    );\n\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\n        if (fieldType === 'text') {\n            if (type === 'integer') {\n                return DynamicFormFieldType.number;\n            }\n\n            if (includes(name, 'phone') || includes(name, 'tel')) {\n                return DynamicFormFieldType.telephone;\n            }\n\n            return secret ? DynamicFormFieldType.password : DynamicFormFieldType.text;\n        }\n\n        return fieldType as DynamicFormFieldType;\n    }, [fieldType, type, secret, name]);\n\n    const renderInput = useCallback(\n        ({ field }: FieldProps<string>) => (\n            <DynamicInput\n                {...field}\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\n                autoComplete={autocomplete}\n                fieldType={dynamicFormFieldType}\n                id={fieldInputId}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                max={max}\n                maxLength={maxLength || undefined}\n                min={min}\n                options={options && options.items}\n                placeholder={placeholder || (options && options.helperLabel)}\n                rows={options && (options as any).rows}\n                themeV2={themeV2}\n            />\n        ),\n        [\n            fieldInputId,\n            max,\n            maxLength,\n            min,\n            options,\n            placeholder,\n            dynamicFormFieldType,\n            autocomplete,\n        ],\n    );\n\n    return (\n        <div\n            className={classNames(\n                'dynamic-form-field',\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\n                extraClass,\n            )}\n        >\n            {fieldType === DynamicFormFieldType.checkbox ? (\n                <CheckboxGroupFormField\n                    id={fieldInputId}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                    options={(options && options.items) || []}\n                    themeV2={themeV2}\n                />\n            ) : (\n                <FormField\n                    id={fieldInputId}\n                    input={renderInput}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default memo(DynamicFormField);\n","import { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithDateProps {\n    date: {\n        inputFormat: string;\n    };\n}\n\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'withDate',\n    pickProps: (value, key) => key === 'date' && !!value,\n});\n\nexport default withDate;\n","import React, { FunctionComponent } from 'react';\n\nexport const CartSummarySkeleton: FunctionComponent = () => (\n    <aside className=\"layout-cart\">\n        <article className=\"cart optimizedCheckout-orderSummary checkout-page-skeleton checkout-page-skeleton--cart\">\n            <div className=\"item--first\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n            </div>\n            <div className=\"item--product\">\n                <div className=\"figure\" />\n                <div className=\"name\" />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item--coupon\">\n                <div />\n            </div>\n            <div className=\"item--total\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item--tax\">\n                <div />\n            </div>\n            <div className=\"item--last\">\n                <div />\n                <div />\n            </div>\n        </article>\n    </aside>\n);\n"],"names":["IconSize","withIconContainer","OriginalComponent","memo","additionalClassName","size","testId","rest","className","Small","Large","Medium","A","displayNamePrefix","hasSelectedShippingOptions","consignments","length","every","consignment","selectedShippingOption","id","type","CustomError","Error","constructor","data","message","title","name","super","captureStackTrace","this","stack","setDefaultValues","defaultError","defaultTitle","ref","useRef","containerRef","createRef","focusOnError","current","erroredFormField","querySelector","join","focus","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","useCallback","memoizeOne","setSubmitted","setTimeout","renderContent","noValidate","onSubmitCapture","values","navigateToOrderConfirmation","orderId","url","toString","window","location","pathname","replace","Promise","noop","mapCustomFormFieldsFromFormValues","customFieldsObject","customFields","forIn","value","key","fieldValue","isDate","padMonth","padStart","getMonth","padDay","getDate","getFullYear","push","fieldId","ErrorLevelType","height","role","viewBox","width","xmlns","d","fill","ErrorBoundary","Component","state","getDerivedStateFromError","error","componentDidCatch","filter","logger","props","log","render","children","fallback","FormContext","createContext","isSubmitted","FormProvider","initialIsSubmitted","useState","contextValue","useMemo","Provider","isFunction","hasUnassignedLineItems","lineItems","reduce","total","lineItemIds","physicalItems","item","addedByPromotion","memoize","formFields","translate","custom","schema","label","required","fieldType","min","max","maxValue","minValue","nullable","transform","originalValue","isNaN","undefined","checkbox","requiredErrorMessage","query","isMobileView","matchMedia","matches","AlertType","icon","describedBy","useId","Info","Success","Warning","IconError","renderDefaultIcon","getProviderWithCustomCheckout","methodId","PaypalCommerce","PaypalCommerceCreditCards","PayPalCommerceAcceleratedCheckout","Braintree","BraintreeAcceleratedCheckout","description","Toggle","openByDefault","isOpen","toggle","onClick","preventDefault","TranslatedString","displayAdditionalInformation","method","shippingCostAfterDiscount","themeV2","imageUrl","alt","src","transitTime","additionalDescription","cost","ShopperCurrency","amount","isBuyNowCart","cart","lastPathName","split","pop","params","URLSearchParams","search","source","get","NoopCheckoutSupport","isSupported","EmbeddedCheckoutUnsupportedError","prototype","EmbeddedCheckoutSupport","unsupportedMethods","langService","ids","includes","methods","UNSUPPORTED_METHODS","CheckoutPageSkeletonDesktop","CartSummarySkeleton","CheckoutPageSkeletonMobile","isLoading","waitInterval","loginUrl","isWaiting","setIsWaiting","useEffect","waitToken","clearTimeout","LoadingOverlay","hideContentWhenLoading","TranslatedHtml","CustomerViewType","buttonsCount","skeleton","Array","map","_v","i","LoadingSkeleton","renderWhileLoading","SUPPORTED_METHODS","getSupportedMethodIds","methodIds","resolveCheckoutButton","resolveId","resolveComponent","containerId","isShowingWalletButtonsOnTop","deinitialize","initialize","onError","heightOption","buttonHeight","container","localeContext","useContext","LocaleContext","initializeOptions","options","applepay","shippingLabel","language","subtotalLabel","onPaymentAuthorize","paypalCommerceIds","withCheckout","checkoutState","checkoutService","getConfig","getCustomer","isPaymentDataRequired","statuses","isInitializedCustomer","errors","getInitializeCustomerError","config","providers","checkoutSettings","remoteCheckoutProviders","availableMethodIds","customer","isGuest","Boolean","checkEmbeddedSupport","isPaymentStepActive","onUnhandledError","onWalletButtonClick","style","position","left","top","isPayPalCommerce","ResolvedCheckoutButton","deinitializeCustomer","initializeCustomer","analyticsContext","AnalyticsContext","analyticsTracker","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","showSuggestion","setShowSuggestion","bolt","onInit","hasBoltAccount","email","customerSuggestionInit","event","stopPropagation","fn","provider","providerFlow","Button","IconBolt","getCheckout","checkout","providerWithCustomCheckout","handleExecutePaymentMethodCheckout","customerSuggestionExecute","PaymentMethodId","Bolt","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","payments","payment","providerId","getBillingAddress","isSigningOut","billingAddress","links","checkoutLink","logoutLink","isRedirectExperimentEnabled","isExperimentEnabled","isSignedIn","shouldRedirectToStorefrontForAuth","signOut","signOutCustomer","onSignOut","onSignOutError","assign","isCartEmpty","reload","isErrorWithType","Tiny","variant","Secondary","hideText","isInitializing","supportedMethodIds","EMAIL_REGEXP","getEmailValidationSchema","getTranslateCreateCustomerError","passwordRequirements","numeric","alpha","minLength","firstName","lastName","password","concat","getCustomFormFieldsValidationSchema","getAcceptsMarketingEmailsDefault","defaultShouldSubscribe","requiresMarketingConsent","withLanguage","handleSubmit","onSubmit","mapPropsToValues","acceptsMarketingEmails","validationSchema","find","requirements","getCreateCustomerValidationSchema","getPasswordRequirements","fixNewsletterCheckboxExperimentEnabled","createAccountError","isCreatingAccount","onCancel","isFloatingLabelEnabled","createAccountErrorMessage","isRequestError","status","splitMessage","trim","fields","field","updatedItems","items","transformFormFieldsData","Form","Fieldset","Alert","DynamicFormField","autocomplete","extraClass","parentFieldName","disabled","Primary","href","onChange","renderInput","TextInput","autoComplete","labelContent","FormField","input","onSendLoginEmail","isSendingEmail","emailHasBeenRequested","onRequestClose","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","footer","LoadingSpinner","sent_email","TranslatedLink","form","expiry","minutes","Math","round","Modal","additionalBodyClassName","additionalModalClassName","header","ModalHeader","shouldShowCloseButton","isFastlaneHostWindow","hasOwnProperty","getPaymentMethod","paymentMethod","shouldRenderFastlaneWatermark","initializationData","isFastlanePrivacySettingEnabled","braintreeFastlane","paypalFastlane","FastlaneWatermarkComponent","includeAdditionalInfo","then","result","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","isExpressPrivacyPolicy","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","oneOf","Input","checked","String","Label","htmlFor","SubscribeSessionStorage","setSubscribeStatus","shouldSubscribe","sessionStorage","setItem","getSubscribeStatus","getItem","removeSubscribeStatus","removeItem","getShouldSubscribeValue","onContinueAsGuest","privacyPolicyUrl","baseSchema","canSubscribe","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","shouldShowEmailWatermark","setFieldValue","renderField","fieldProps","loginLink","legend","Legend","hidden","BasicFormField","tabIndex","RedirectToStorefrontLogin","isDisabled","onSignIn","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","Login","changeEmailLink","body","mapErrorMessage","SuggestedLogin","CancellableEnforcedLogin","EnforcedLogin","rel","target","setStatus","valSuccess","step","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","onEmailChange","getStyles","getStripeStyles","gatewayId","getStylesFromElement","properties","parentContainer","document","getElementById","getAppliedStyles","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","buttonText","display","Customer","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","setState","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","paymentProviderCustomer","getPaymentProviderCustomer","shouldEncourageSignIn","stripeLinkAuthenticationState","executePaymentMethodCheckoutOrContinue","handleSignIn","credentials","signIn","onSignInError","handleCreateAccount","createAccount","onAccountCreated","mapCreateAccountFromFormValues","showCreateAccount","CreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","Guest","handleChangeEmail","customerEmailEntry","handleShowLogin","StripeUPE","continueWithCheckoutCallback","checkoutPaymentMethodExecuted","payload","componentDidMount","onReady","componentWillUnmount","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","checkoutButtonIds","isContinuingAsGuest","isSubscribed","isWalletButtonsOnTop","shouldRenderStripeForm","isLoadingGuestForm","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isEmbedded","isGuestEnabled","isAccountCreationEnabled","customerPaymentMethodExecuted","withAnalytics","getCustomerAccountFields","getCart","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","features","shopperConfig","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","forgotPasswordLink","guestCheckoutEnabled","signInCustomer","shouldUseStripeLinkByMinimumAmount","dangerouslySetInnerHTML","__html","sanitize","promotions","banners","promotion","banner","index","text","compactView","isShippingDiscountDisplayEnabled","paypalFastlaneAddresses","usePayPalFastlaneAddress","shippingAddress","address","showPayPalFastlaneAddressLabel","StaticAddress","AddressType","Shipping","PoweredByPayPalFastlaneLabel","StaticConsignmentItemList","StaticShippingOption","getShippingCostAfterAutomaticDiscount","consignmentNumber","getShippingCountries","addressWithoutLocalization","localizeAddress","findLineItems","address1","address2","city","localizedProvince","localizedCountry","postalCode","count","getLineItemsCount","ConsignmentLineItemDetail","isMultiShippingSummary","isMultiShippingMode","ShippingOptionExpiredError","getLanguageService","heading","isActive","isEditable","onEdit","summary","isBusy","suggestion","onExpanded","isClosed","setIsClosed","contentRef","timeoutRef","timeoutDelay","getParentContainer","parentElement","classList","contains","focusStep","delay","parseFloat","getComputedStyle","transitionDuration","getChildInput","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","getScrollPosition","scrollTo","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","MobileView","matched","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","CheckoutStepType","some","lineItem","isShippingRequired","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","getStripeLinkAndCheckoutPageIsReloaded","getBillingStepStatus","getBillingAddressFields","countryCode","billingAddressFields","hasAddress","isValidAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","Billing","startsWith","getShippingStepStatus","getShippingAddress","getConsignments","getShippingAddressFields","shippingAddressFields","hasOptions","hasUnassignedItems","isCustomShippingSelected","getPaymentStepStatus","getOrder","order","Payment","getOrderSubmitStatus","isSubmittingOrder","customerStep","shippingStep","billingStep","paymentStep","orderStatus","steps","compact","defaultActiveStep","isPrevStepComplete","slice","prevStep","lazy","retry","CartSummary","CartSummaryDrawer","Checkout","isBillingSameAsShipping","isRedirecting","buttonConfigs","handleToggleMultiShipping","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","trackStepCompleted","navigateToStep","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","trackStepViewed","handleUnhandledError","handleError","errorLogger","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","createAccountUrl","handleBeforeExit","exitCheckout","handleWalletButtonClick","methodName","walletButtonClick","unsubscribeFromConsignments","removeEventListener","createEmbeddedMessenger","embeddedStylesheet","extensionService","loadPaymentMethodByIds","subscribeToConsignments","supportedProviders","configs","getPaymentMethods","preloadExtensions","siteLink","errorFlashMessages","getFlashMessages","messenger","parentOrigin","receiveStyles","styles","append","postFrameLoaded","contentId","postLoaded","checkoutBegin","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","defaultNewsletterSignupOption","isUsingMultiShipping","OrderConfirmationPageSkeleton","errorModal","isCustomError","ErrorModal","onClose","isPending","extensionState","isShowingLoadingIndicator","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","hasCartChanged","LazyContainer","loadingSkeleton","AddressFormSkeleton","cartHasChanged","navigateNextStep","onToggleMultiShipping","setIsMultishippingMode","StaticBillingAddress","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","Extension","region","withExtension","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscribe","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","loadCheckout","useLoadCheckout","checkoutId","setIsLoadingCheckout","useExtensions","fetchDataWithRetry","maxRetries","attemptFetch","attemptSequence","all","include","loadExtensions","resolve","catch","CheckoutPage","sentryConfig","publicPath","sentrySampleRate","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createEmbeddedCheckoutSupport","createErrorLogger","sentry","errorTypes","sampleRate","LocaleProvider","CheckoutProvider","AnalyticsProvider","ExtensionProvider","ThemeProvider","createEmbeddedCheckoutMessenger","currency","toCustomerCurrency","rows","content","itemId","isNil","parentId","toResolvableComponent","resolveIds","Object","createInjectHoc","ContextComponent","pickProps","InnerDecoratedComponent","DecoratedComponent","context","injectedProps","pickBy","isEmpty","mergedProps","displayName","customError","mapAddressToFormValues","addressFormValues","default","defaultValue","fieldName","getValue","shouldSaveAddress","stateOrProvince","stateOrProvinceCode","date","Date","getDefaultValue","year","month","day","Number","errorId","kebabCase","ConsoleErrorLogger","console","customConsole","tags","level","meta","info","warn","NoopErrorLogger","FILENAME_PREFIX","SeverityLevelEnum","SentryErrorLogger","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","RegExp","consoleLogger","dsn","sentryOnLoad","Sentry","init","beforeSend","bind","denyUrls","integrations","globalHandlersIntegration","onerror","onunhandledrejection","rewriteFramesIntegration","lazyLoadIntegration","addIntegration","iteratee","loadSentry","errorCode","computeErrorCode","captureException","mapToSentryLevel","extra","fingerprint","loaderPromise","exec","getScriptLoader","loadScript","attributes","crossorigin","async","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","serviceConfig","AccountService","requestSender","createRequestSender","create","put","response","renderPasswordInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","confirmPassword","onSignUp","isSigningUp","customerCanBeCreated","AccountCreationRequirementsError","AccountCreationFailedError","isDefaultOrderPayment","isGiftCertificatePayment","isStoreCreditPayment","gatewayPayment","detail","instructions","mapFromPayments","code","remaining","used","balance","purchaseDate","getStoreCreditAmount","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","fees","shippingAmount","shipping","discounts","discount","getTotalAutomaticDiscount","getOrderShippingCostAfterAutomaticDiscount","subtotalAmount","shippingAmountBeforeDiscount","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","MandateTextComponent","mandateText","keys","entries","PaymentsWithMandates","paymentsWithMandates","mandate","isPaymentWithMandate","OrderStatusMessage","orderNumber","supportEmail","supportPhoneNumber","hasDigitalItems","isDownloadable","handleClick","throttle","print","OrderSummary","OrderSummaryDrawer","OrderConfirmation","handleErrorModalClose","handleSignUp","hasSignedUp","loadOrder","orderPurchased","isLoadingOrder","paymentInstructions","storeProfile","orderEmail","storePhoneNumber","renderGuestSignUp","shouldShowPasswordForm","customerId","action","renderOrderSummary","renderErrorModal","shopperCurrency","headerLink","storeCurrency","orderAmount","shouldShowErrorCode","OrderConfirmationApp","accountService","newsletter","setCheckoutState","getState","unsubscribeRef","newCheckoutState","getPasswordRequirementsFromConfig","minlength","allSlashes","shouldShowChildren","discountTotal","DEFAULT_OPTIONS","interval","checkoutButtonContainerClass","additionalInitializationOptions","beautifyAmazonButton","amazonButton","shadowRoot","HTMLElement","onComplete","object","setPrototypeOf","hasProto","__proto__","loadingContainerId","InnerField","component","InnerFieldInput","hasError","prevForm","prevField","prevProps","nextForm","nextField","nextProps","componentDidUpdate","getTime","createElement","renderInnerField","handleOnRequestClose","nativeEvent","renderErrorCode","headers","aria","labelledby","shouldBeTranslatedAsHtml","isHtmlError","translationKey","isValidSync","WHITELIST_REGEXP","maxLength","getTranslateAddressError","requiredFieldErrorTranslationIds","company","phone","getFormFieldsValidationSchema","forwardRef","placeholder","paymentWithCustomCheckout","isPayPalFastlaneEnabled","paypalFastlaneCustomer","customerAuthenticationState","authenticationState","addresses","shouldShowPayPalFastlaneLabel","shouldShowPayPalFastlaneShippingForm","CheckoutContext","useCheckout","isResolvableComponent","components","results","_","resolverId","sort","a","b","queries","mobile","mapToPropsOrFactory","mapToProps","isMapToPropsFactory","mappedProps","ButtonVariant","ButtonSize","getClassName","isFullWidth","Action","normalizeAddress","omit","paypalFastlaneAddress","bcAddress","isEqual","isEqualToPayPalFastlaneAddress","getNestedValue","obj","path","acc","formikContext","touched","renderMessage","Consumer","ADD_ATTR","translatedString","parsedString","toCSSRule","selector","mergedStyles","EmbeddedCheckoutStyleParser","parse","rules","secondaryText","secondaryHeading","link","hover","button","active","secondaryButton","select","radio","checklist","discountBanner","loadingBanner","orderSummary","EmbeddedCheckoutStylesheet","embeddedCheckoutStyleParser","_parser","head","appendChild","sheet","CSSStyleSheet","forEach","rule","insertRule","appendStylesheet","toUpperCase","quantity","createAnalyticsService","createFn","createArguments","getStepTracker","createStepTracker","getBodlService","createBodlService","getBraintreeAnalyticTracker","createBraintreeAnalyticTracker","getPayPalCommerceAnalyticTracker","createPayPalCommerceAnalyticTracker","trackCheckoutStarted","currentStep","stepCompleted","trackOrderComplete","showShippingMethods","selectedPaymentMethod","clickPayButton","paymentRejected","paymentComplete","extensionReducer","ExtensionActionType","SHOW_LOADING_INDICATOR","RE_RENDER_SHIPPING_FORM","shippingFormRenderTimestamp","createReloadCheckoutHandler","commandType","ExtensionCommandType","ReloadCheckout","handler","createSetIframeStyleHandler","extension","SetIframeStyle","extensionContainer","iframe","createShowLoadingIndicatorHandler","dispatch","ShowLoadingIndicator","show","createReRenderShippingFormHandler","ReRenderShippingForm","now","createReRenderShippingStepHandler","ReRenderShippingStep","createGetConsignmentHandler","queryType","ExtensionQueryType","GetConsignments","useCache","postMessageToExtension","ExtensionService","handlers","extensions","getExtensions","cartId","URL","searchParams","set","as","renderExtension","getExtensionByRegion","registerHandlers","extensionId","removeListeners","clearExtensionCache","removers","remover","isRegionEnabled","handlerProps","createCommandHandlerFactory","handlerFactory","isCommandHandler","handleExtensionCommand","createQueryHandlerFactory","isQueryHandler","handleExtensionQuery","useReducer","extensionValues","ExtensionContext","appearFocused","isPayPalFastlaneCustomer","filterError","Suspense","element","pseudoElementSelector","declaration","propertyName","getPropertyValue","extensionContext","BigCommercePaymentsCreditCards","BigCommercePaymentsFastLane","OrderConfirmationPageSkeletonDesktop","OrderConfirmationPageSkeletonMobile","MOBILE_MAX_WIDTH","countries","country","states","subdivisions","unmountContentWhenLoading","loadingUI","ThemeContext","useThemeContext","themeContext","DynamicFormFieldType","showPayPalFastlaneLabel","getBillingCountries","useLocale","stripeLinkMinAmount","cartAmount","isStripeLinkMinAmount","parseAnchor","div","innerHTML","anchor","anchorSiblings","outerHTML","EMPTY_ARRAY","freeze","renderItemContent","option","renderProductOptionDetails","SMALL_SCREEN_MAX_WIDTH","currentScript","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","renderOrderConfirmation","FALLBACK_LOCALE","languageService","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","useNewTheme","experimentName","call","ExtensionRegionContainer","extensionRegionToContainerMap","ShippingShippingAddressFormBefore","ShippingShippingAddressFormAfter","ShippingSelectedShippingMethod","PaymentPaymentMethodListBefore","SummaryAfter","SummaryLastItemAfter","closeButtonLabel","additionalHeaderClassName","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","getContextValue","createCurrencyService","inputFormat","inputDateFormat","unsubscribe","withDate","handleDateChange","dateValue","dropdown","IconChevronDown","optionValue","CheckboxInput","isArray","calendarClassName","dateFormat","maxDate","minDate","placeholderText","popperClassName","selected","multiline","TextArea","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","remove","handleSelectAll","checkedValues","difference","val","handleSelectNone","handleInputChange","indexOf","FormFieldContainer","FormFieldError","renderProps","pick","secret","fieldLabel","inputId","fieldInputId","isFloatingLabelSupportedFieldType","labelComponent","labelClassName","dynamicFormFieldType","number","telephone","helperLabel"],"sourceRoot":""}