{"version":3,"file":"checkout-f95e458f.js","mappings":"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","sources":["webpack://checkout/./packages/ui/src/form/Label/Label.tsx","webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/utility/src/navigateToOrderConfirmation.ts","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CheckoutPageSkeleton.tsx","webpack://checkout/./packages/ui/src/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/generated/checkoutButtons/index.ts","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-fastlane-window.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/PayPalFastlaneWatermark.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/SubscribeSessionStorage.ts","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/RedirectToStorefrontLogin.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticMultiConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/ShippingSummary.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutPage.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/hooks/useLoadCheckout.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutIntermediate.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/ui/src/form/TextInput/TextInput.tsx","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/ui/src/form/Input/Input.tsx","webpack://checkout/./packages/core/src/app/payment/getProviderWithCustomCheckout.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/utility/src/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/ui/src/icon/IconChevronDown.tsx","webpack://checkout/./packages/ui/src/form/TextArea/TextArea.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/DynamicInput.tsx","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/getOrderShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/ui/src/form/RadioInput/RadioInput.tsx","webpack://checkout/./packages/core/src/app/shipping/getShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/ui/src/form/FormFieldError/FormFieldError.tsx","webpack://checkout/./packages/ui/src/form/FormField/FormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/ui/src/form/DynamicFormField/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalFastlane.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/PoweredByPayPalFastlaneLabel.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/usePayPalFastlaneAddress.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/MultiCheckboxControl.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/CheckboxGroupFormField.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/DynamicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-address.ts","webpack://checkout/./packages/core/src/app/common/utility/getNestedValue.ts","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveLazyComponent.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingFormHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingStepHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/queryHandlers/createGetConsignmentHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-customer.ts","webpack://checkout/./packages/ui/src/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/checkout-extension/src/useExtensions.tsx","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-bigcommerce-payments-fastlane-method.ts","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/ui/src/form/CheckboxInput/CheckboxInput.tsx","webpack://checkout/./packages/ui/src/button/Button.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/OrderConfirmationPageSkeleton.tsx","webpack://checkout/./packages/ui/src/utils/isMobileView.ts","webpack://checkout/./packages/locale/src/localizeAddress.ts","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/ui/src/loading/LoadingOverlay.tsx","webpack://checkout/./packages/ui/src/context/ThemeContext.tsx","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/shipping/ConsignmentLineItemDetail.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-commerce-fastlane-method.ts","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/ui/src/form/FormFieldContainer/FormFieldContainer.tsx","webpack://checkout/./packages/ui/src/loading/LoadingSpinner.tsx","webpack://checkout/./packages/ui/src/context/ThemeProvider.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-braintree-fastlane-method.ts","webpack://checkout/./packages/core/src/app/common/utility/isExperimentEnabled.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionRegionContainer.ts","webpack://checkout/./packages/checkout-extension/src/Extension.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/ui/src/form/BasicFormField/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CartSummarySkeleton.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport React, { type FunctionComponent, type LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    additionalClassName?: string;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    additionalClassName,\n    ...rest\n}) => (\n    <label\n        {...rest}\n        className={classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label',\n            additionalClassName,\n        )}\n        data-test={testId}\n    >\n        {children}\n    </label>\n);\n\nexport default Label;\n","import classNames from 'classnames';\nimport React, { type ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","import { type Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            (consignment.selectedShippingOption && consignment.selectedShippingOption.id) ||\n            consignment.selectedShippingOption?.type === 'custom',\n    );\n}\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, type FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, type FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { type FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","import { noop } from 'lodash';\n\nimport isBuyNowCart from './isBuyNowCart';\n\nexport default function navigateToOrderConfirmation(orderId?: number): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","import { forIn, isDate, padStart } from 'lodash';\n\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\n    [id: string]: any;\n}): Array<{ fieldId: string; fieldValue: string }> {\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\n\n    forIn(customFieldsObject, (value, key) => {\n        let fieldValue: string;\n\n        if (isDate(value)) {\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\n            const padDay = padStart(value.getDate().toString(), 2, '0');\n\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\n        } else {\n            fieldValue = value;\n        }\n\n        customFields.push({\n            fieldId: key,\n            fieldValue,\n        });\n    });\n\n    return customFields;\n}\n","import type { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import { Component, type ReactNode } from 'react';\n\nimport type ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children?: ReactNode;\n    fallback?: ReactNode;\n    logger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, logger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        // Adding errorCode with value `ErrorBoundary` to collect usage statistics of ErrorBoundary\n        if (logger) {\n            logger.log(error, {\n                errorCode: 'ErrorBoundary',\n            });\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import type CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { type CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.includes(id));\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { type CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport { isMobileView } from '../../utils';\n\nimport { CartSummarySkeleton } from './CartSummarySkeleton';\n\nconst CheckoutPageSkeletonDesktop: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\" data-test=\"checkout-page-skeleton\">\n        <div className=\"layout-main\">\n            <div className=\"checkout-steps checkout-page-skeleton\">\n                <div className=\"title--first\" />\n                <div className=\"textbox\" />\n                <div className=\"subscription\">\n                    <div className=\"checkbox\" />\n                    <div className=\"description\" />\n                </div>\n                <div className=\"terms--1\" />\n                <div className=\"terms--2\" />\n                <div className=\"title\" />\n                <div className=\"title\" />\n                <div className=\"title\" />\n            </div>\n        </div>\n        <CartSummarySkeleton />\n    </div>\n);\n\nconst CheckoutPageSkeletonMobile: FunctionComponent = () => (\n    <div\n        className=\"layout optimizedCheckout-contentPrimary\"\n        data-test=\"checkout-page-skeleton-mobile\"\n    >\n        <div className=\"layout-main \">\n            <div className=\"checkout-page-skeleton\">\n                <div className=\"walletbutton--tagline\" />\n                <div className=\"walletbutton\" />\n                <div className=\"walletbutton--divider\" />\n                <div className=\"mobile-title--first\" />\n                <div className=\"textbox\" />\n                <div className=\"textbox\" />\n                <div className=\"terms--1\" />\n                <div className=\"mobile-title--2\" />\n                <div className=\"divider\" />\n                <div className=\"mobile-title--3\" />\n                <div className=\"divider\" />\n                <div className=\"mobile-title--4\" />\n                <div className=\"divider\" />\n                <div className=\"divider\" />\n            </div>\n            <div className=\"checkout-page-skeleton--cartdrawer\">\n                <div className=\"product\">\n                    <div className=\"animated-grey-box figure\" />\n                    <div className=\"details\">\n                        <div className=\"animated-grey-box name\" />\n                        <div className=\"animated-grey-box description\" />\n                    </div>\n                </div>\n                <div className=\"animated-grey-box more\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst CheckoutPageSkeleton: FunctionComponent = () => {\n    return isMobileView() ? <CheckoutPageSkeletonMobile /> : <CheckoutPageSkeletonDesktop />;\n};\n\nexport default CheckoutPageSkeleton;\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface LoadingNotificationProps {\n    isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingNotification\">\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\n                <div className=\"spinner\" />\n\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\n                    <TranslatedString id=\"common.loading_text\" />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(LoadingNotification);\n","import React, { type ReactElement, useEffect, useState } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { LoadingOverlay } from '@bigcommerce/checkout/ui';\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\nconst EmptyCartMessage = ({ waitInterval, loginUrl }: EmptyCartMessageProps): ReactElement => {\n    const [isWaiting, setIsWaiting] = useState(true);\n\n    useEffect(() => {\n        const waitToken = setTimeout(() => {\n            setIsWaiting(false);\n        }, waitInterval);\n\n        return () => {\n            clearTimeout(waitToken);\n        };\n    }, [waitInterval]);\n\n    return (\n        <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n            <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n        </LoadingOverlay>\n    );\n};\n\nexport default EmptyCartMessage;\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n}\n\nexport default CustomerViewType;\n","import React, { type FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, type LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote walletbuttons-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div key={`skeleton-container-${i}`} />\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","const APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'chasepay',\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n    'googlepaypaypalcommerce',\n    'googlepaytdonlinemart',\n    'stripeocs',\n    'googlepaystripeocs',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[]): string[] => {\n    return methodIds.filter((methodId) => SUPPORTED_METHODS.includes(methodId));\n}\n","import { lazy } from 'react';\n\nconst AmazonPayV2Button = lazy(() => import(/* webpackChunkName: \"amazon-pay-v2-button\" */'@bigcommerce/checkout/amazon-pay-v2-integration').then(module => ({ default: module.AmazonPayV2Button })));\nconst BigCommercePaymentsButton = lazy(() => import(/* webpackChunkName: \"big-commerce-payments-button\" */'@bigcommerce/checkout/bigcommerce-payments-integration').then(module => ({ default: module.BigCommercePaymentsButton })));\nconst BigcommercePaymentsPayLaterButton = lazy(() => import(/* webpackChunkName: \"bigcommerce-payments-pay-later-button\" */'@bigcommerce/checkout/bigcommerce-payments-integration').then(module => ({ default: module.BigcommercePaymentsPayLaterButton })));\nconst CheckoutButton = lazy(() => import(/* webpackChunkName: \"checkout-button\" */'@bigcommerce/checkout/checkout-button-integration').then(module => ({ default: module.CheckoutButton })));\nconst GooglePayButton = lazy(() => import(/* webpackChunkName: \"google-pay-button\" */'@bigcommerce/checkout/google-pay-integration').then(module => ({ default: module.GooglePayButton })));\nconst PayPalCommerceCreditButton = lazy(() => import(/* webpackChunkName: \"pay-pal-commerce-credit-button\" */'@bigcommerce/checkout/paypal-commerce-integration').then(module => ({ default: module.PayPalCommerceCreditButton })));\nconst PayPalCommerceButton = lazy(() => import(/* webpackChunkName: \"pay-pal-commerce-button\" */'@bigcommerce/checkout/paypal-commerce-integration').then(module => ({ default: module.PayPalCommerceButton })));\nconst StripeLinkV2Button = lazy(() => import(/* webpackChunkName: \"stripe-link-v2-button\" */'@bigcommerce/checkout/stripe-integration').then(module => ({ default: module.StripeLinkV2Button })));\n\nexport {\n  AmazonPayV2Button,\n  BigCommercePaymentsButton,\n  BigcommercePaymentsPayLaterButton,\n  CheckoutButton,\n  GooglePayButton,\n  PayPalCommerceCreditButton,\n  PayPalCommerceButton,\n  StripeLinkV2Button,\n};\n\nexport const ComponentRegistry = {\n  'AmazonPayV2Button': [\n    { \"id\": \"amazonpay\" }\n  ],\n  'BigCommercePaymentsButton': [\n    { \"id\": \"bigcommerce_payments\" }\n  ],\n  'BigcommercePaymentsPayLaterButton': [\n    { \"id\": \"bigcommerce_payments_paylater\" }\n  ],\n  'GooglePayButton': [\n    { \"id\": \"googlepayadyenv2\" },\n    { \"id\": \"googlepayadyenv3\" },\n    { \"id\": \"googlepayauthorizenet\" },\n    { \"id\": \"googlepaybnz\" },\n    { \"id\": \"googlepaybraintree\" },\n    { \"id\": \"googlepaypaypalcommerce\" },\n    { \"id\": \"googlepaycheckoutcom\" },\n    { \"id\": \"googlepaycybersourcev2\" },\n    { \"id\": \"googlepayorbital\" },\n    { \"id\": \"googlepaystripe\" },\n    { \"id\": \"googlepaystripeupe\" },\n    { \"id\": \"googlepayworldpayaccess\" },\n    { \"id\": \"googlepaytdonlinemart\" },\n    { \"id\": \"googlepaystripeocs\" }\n  ],\n  'PayPalCommerceButton': [\n    { \"id\": \"paypalcommerce\" }\n  ],\n  'PayPalCommerceCreditButton': [\n    { \"id\": \"paypalcommercecredit\" }\n  ],\n  'StripeLinkV2Button': [\n    { \"id\": \"stripeocs\" }\n  ]\n} as const;\n\n    \n","import { type ComponentType } from 'react';\n\nimport {\n    type CheckoutButtonProps,\n    type CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveLazyComponent } from '../common/resolver';\nimport * as lazyCheckoutButtons from '../generated/checkoutButtons';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId\n): ComponentType<CheckoutButtonProps> | undefined {\n    const { ComponentRegistry, ...components } = lazyCheckoutButtons;\n\n    return resolveLazyComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        components,\n        ComponentRegistry,\n    );\n}\n","import { type CustomerInitializeOptions, type CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\nimport React, { type FunctionComponent, lazy, Suspense } from \"react\";\n\nimport CheckoutButton from \"./CheckoutButton\";\n\nconst ApplePayButton = lazy(() => import(/* webpackChunkName: \"apple-pay-button\" */'./customWalletButton/ApplePayButton'));\n\ninterface CheckoutButtonV1ResolverProps {\n    methodId: string;\n    deinitialize(options: CustomerRequestOptions): void;\n    isShowingWalletButtonsOnTop?: boolean;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodName: string): void;\n}\n\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\n    isShowingWalletButtonsOnTop= false,\n    onError,\n    methodId,\n    ...rest\n}) => {\n    switch (methodId) {\n        case 'applepay':\n            return <Suspense>\n                <ApplePayButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            </Suspense>;\n    }\n\n    return <CheckoutButton\n            containerId={`${methodId}CheckoutButton`}\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n            key={methodId}\n            methodId={methodId}\n            onError={onError}\n            {...rest}\n        />;\n};\n\nexport default CheckoutButtonV1Resolver;\n","import { type CheckoutSelectors, type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, memo, Suspense } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext, WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\ninterface CheckoutButtonContainerProps {\n    isPaymentStepActive: boolean;\n    checkEmbeddedSupport(methodIds: string[]): void;\n    onUnhandledError(error: Error): void;\n    onWalletButtonClick(methodId: string): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n    availableMethodIds: string[];\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n    isLoading: boolean;\n}\n\nconst paypalCommerceIds = [\n    'paypalcommerce',\n    'paypalcommercecredit',\n    'paypalcommercevenmo',\n];\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\n    {\n        availableMethodIds,\n        checkoutService,\n        checkoutState,\n        checkEmbeddedSupport,\n        isLoading,\n        isPaymentStepActive,\n        onUnhandledError,\n        onWalletButtonClick,\n    }) => {\n    const { language } = useLocale();\n    const { themeV2 } = useThemeContext();\n\n    try {\n        checkEmbeddedSupport(availableMethodIds);\n    } catch (error) {\n        return null;\n    }\n\n    const renderButtons = () => availableMethodIds.map((methodId) => {\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n            return null;\n        }\n\n        const ResolvedCheckoutButton = resolveCheckoutButton(\n            { id: methodId },\n        );\n\n        if (!ResolvedCheckoutButton) {\n            return <CheckoutButtonV1Resolver\n                deinitialize={checkoutService.deinitializeCustomer}\n                initialize={checkoutService.initializeCustomer}\n                isShowingWalletButtonsOnTop={true}\n                key={methodId}\n                methodId={methodId}\n                onClick={onWalletButtonClick}\n                onError={onUnhandledError}\n            />\n        }\n\n        return <Suspense key={methodId}> \n            <ResolvedCheckoutButton\n                checkoutService={checkoutService}\n                checkoutState={checkoutState}\n                containerId={`${methodId}CheckoutButton`}\n                language={language}\n                methodId={methodId}\n                onUnhandledError={onUnhandledError}\n                onWalletButtonClick={onWalletButtonClick}\n            />\n        </Suspense>;\n    });\n\n    return (\n        <div className='checkout-button-container'\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\n        >\n            <p className={classNames({\n                'sub-header': themeV2,\n            })}>\n                <TranslatedString id=\"remote.start_with_text\" />\n            </p>\n            <div className='checkout-buttons-auto-layout'>\n                <WalletButtonsContainerSkeleton buttonsCount={availableMethodIds.length} isLoading={isLoading}>\n                    <div className=\"checkoutRemote\">\n                        {renderButtons()}\n                    </div>\n                </WalletButtonsContainerSkeleton>\n            </div>\n            <div className='checkout-separator'>\n                <span className={classNames({'sub-header': themeV2})}>\n                    <TranslatedString id='remote.or_text' />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n    checkoutState,\n    checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n    const {\n        data: {\n            getConfig,\n            getCustomer,\n            isPaymentDataRequired,\n        },\n        statuses: {\n            isInitializedCustomer,\n        },\n        errors: {\n            getInitializeCustomerError,\n        }\n     } = checkoutState;\n    const config = getConfig();\n    const providers = config?.checkoutSettings.remoteCheckoutProviders ?? [];\n\n    const availableMethodIds = getSupportedMethodIds(providers);\n    const customer = getCustomer();\n\n    if (!isPaymentDataRequired()) {\n        return null;\n    }\n\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n        return null;\n    }\n\n    const isLoading = availableMethodIds.filter(\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\n    ).length !== availableMethodIds.length;\n\n    return {\n        checkoutService,\n        checkoutState,\n        availableMethodIds,\n        isLoading,\n    }\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import {\n    type CheckoutSelectors,\n    type CustomerInitializeOptions,\n    type CustomerRequestOptions,\n    type ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({hasBoltAccount});\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { type SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    type CheckoutSelectors,\n    type CustomerInitializeOptions,\n    type CustomerRequestOptions,\n    type ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { type Checkout, type Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './getSupportedMethods';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.includes(methodId);\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => !SUPPORTED_METHODS.includes(payment.providerId),\n    );\n}\n","import { type CheckoutSelectors, type CustomerRequestOptions, type CustomError } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\nimport { isErrorWithType } from '../common/error';\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\n\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\n\nexport interface CustomerInfoProps {\n    onSignOut?(event: CustomerSignOutEvent): void;\n    onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n    isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n    checkoutLink: string;\n    email: string;\n    methodId: string;\n    isSignedIn: boolean;\n    isSigningOut: boolean;\n    logoutLink: string;\n    shouldRedirectToStorefrontForAuth: boolean;\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n    checkoutLink,\n    email,\n    methodId,\n    isSignedIn,\n    isSigningOut,\n    logoutLink,\n    shouldRedirectToStorefrontForAuth,\n    onSignOut = noop,\n    onSignOutError = noop,\n    signOut,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const handleSignOut: () => Promise<void> = async () => {\n        try {\n            if (shouldRedirectToStorefrontForAuth) {\n                window.location.assign(`${logoutLink}?redirectTo=${checkoutLink}`);\n\n                return;\n            }\n\n            if (isSupportedSignoutMethod(methodId)) {\n                await signOut({ methodId });\n                onSignOut({ isCartEmpty: false });\n                window.location.reload();\n            } else {\n                await signOut();\n                onSignOut({ isCartEmpty: false });\n            }\n        } catch (error) {\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\n                onSignOut({ isCartEmpty: true });\n            } else {\n                onSignOutError(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\n            <div\n                className={classNames('customerView-body',\n                    { 'body-regular': themeV2 },\n                )}\n                data-test=\"customer-info\"\n            >\n                {email}\n            </div>\n\n            <div className=\"customerView-actions\">\n                {isSignedIn && (\n                    <Button\n                        className={themeV2 ? 'body-regular' : ''}\n                        isLoading={isSigningOut}\n                        onClick={handleSignOut}\n                        size={ButtonSize.Tiny}\n                        testId=\"sign-out-link\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"customer.sign_out_action\" />\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer, getConfig },\n        statuses: { isSigningOut },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const config = getConfig();\n\n    if (!billingAddress || !checkout || !customer || !config) {\n        return null;\n    }\n\n    const { checkoutSettings, links: { checkoutLink, logoutLink } } = config;\n\n    const methodId =\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n    return {\n        email: billingAddress.email || customer.email,\n        methodId,\n        isSignedIn: canSignOut(customer, checkout, methodId),\n        isSigningOut: isSigningOut(),\n        logoutLink,\n        checkoutLink,\n        shouldRedirectToStorefrontForAuth: checkoutSettings.shouldRedirectToStorefrontForAuth,\n        signOut: checkoutService.signOutCustomer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import {\n    type CheckoutSelectors,\n    type CheckoutService,\n    type CustomerInitializeOptions,\n    type CustomerRequestOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { LazyContainer } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\nexport interface CheckoutButtonListProps {\n    hideText?: boolean;\n    isInitializing?: boolean;\n    methodIds?: string[];\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onClick?(methodId: string): void;\n    onError?(error: Error): void;\n}\n\ninterface WithCheckoutCheckoutButtonListProps {\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n}\n\nconst CheckoutButtonList: FunctionComponent<WithCheckoutCheckoutButtonListProps & CheckoutButtonListProps> = ({\n    checkoutService,\n    checkoutState,\n    hideText = false,\n    isInitializing = false,\n    methodIds = [],\n    checkEmbeddedSupport,\n    deinitialize,\n    initialize,\n    onClick = noop,\n    onError,\n}) => {\n    const { language } = useLocale();\n    const supportedMethodIds = getSupportedMethodIds(methodIds);\n\n    if (supportedMethodIds.length === 0) {\n        return null;\n    }\n\n    if (checkEmbeddedSupport) {\n        try {\n            checkEmbeddedSupport(supportedMethodIds);\n        } catch (error) {\n            if (error instanceof Error && onError) {\n                onError(error);\n            } else {\n                throw error;\n            }\n\n            return null;\n        }\n    }\n\n    const renderButtons = () => {\n        return supportedMethodIds.map((methodId) => {\n            const ResolvedCheckoutButton = resolveCheckoutButton(\n                { id: methodId },\n            );\n\n            if (!ResolvedCheckoutButton) {\n                return <CheckoutButtonV1Resolver\n                    deinitialize={deinitialize}\n                    initialize={initialize}\n                    isShowingWalletButtonsOnTop={false}\n                    key={methodId}\n                    methodId={methodId}\n                    onClick={onClick}\n                    onError={onClick}\n                />\n            }\n\n            return <LazyContainer key={methodId}>\n                <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onClick}\n                    onWalletButtonClick={onClick}\n                />\n            </LazyContainer>;\n        });\n    };\n\n    return (\n        <>\n            {!isInitializing && !hideText && (\n                <p>\n                    <TranslatedString id=\"remote.continue_with_text\" />\n                </p>\n            )}\n\n            <div className=\"checkoutRemote\">\n                {renderButtons()}\n            </div>\n        </>\n    );\n};\n\nfunction mapToCheckoutButtonListProps({\n  checkoutState,\n  checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonListProps | null {\n    return {\n        checkoutService,\n        checkoutState,\n    };\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonListProps)(CheckoutButtonList));\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\n// we need to keep this regex for login validation as accounts might have been created using this regex\nexport const EMAIL_REGEXP =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { object, type ObjectSchema, string } from 'yup';\n\nimport { EMAIL_REGEXP } from './validationPatterns';\n\nexport interface EmailValidationSchemaOptions {\n    language: LanguageService;\n}\n\nexport default function getEmailValidationSchema({\n    language,\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\n    return object({\n        email: string()\n            .max(256)\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\n            .required(language.translate('customer.email_required_error')),\n    });\n}\n","import { type FormField, type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport { object, type ObjectSchema, string } from 'yup';\n\nimport {\n    type CustomFormFieldValues,\n    getCustomFormFieldsValidationSchema,\n    type TranslateValidationErrorFunction,\n} from '../formFields';\n\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport { type PasswordRequirements } from './getPasswordRequirements';\n\nexport type CreateAccountFormValues = {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    acceptsMarketingEmails?: string[];\n    token?: string;\n} & CustomFormFieldValues;\n\nexport interface CreateCustomerValidationSchema {\n    formFields: FormField[];\n    language: LanguageService;\n    passwordRequirements: PasswordRequirements;\n}\n\n/* istanbul ignore next */ // Currently no limitation on new customer's name\nfunction getTranslateCreateCustomerError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    return (type, { label, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            return language.translate('customer.required_error', { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate('customer.max_error', { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate('customer.min_error', { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate('customer.invalid_characters_error', { label });\n        }\n    };\n}\n\nexport default memoize(function getCreateCustomerValidationSchema({\n    formFields,\n    language,\n    passwordRequirements: { description, numeric, alpha, minLength },\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\n    return object({\n        firstName: string().required(language.translate('address.first_name_required_error')),\n        lastName: string().required(language.translate('address.last_name_required_error')),\n        password: string()\n            .required(language.translate('customer.password_required_error') || description)\n            .matches(\n                numeric,\n                language.translate('customer.password_number_required_error') || description,\n            )\n            .matches(\n                alpha,\n                language.translate('customer.password_letter_required_error') || description,\n            )\n            .min(\n                minLength,\n                language.translate('customer.password_under_minimum_length_error') || description,\n            )\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\n    })\n        .concat(getEmailValidationSchema({ language }))\n        .concat(\n            getCustomFormFieldsValidationSchema({\n                formFields,\n                translate: getTranslateCreateCustomerError(language),\n            }),\n        );\n});\n","/* istanbul ignore file */\n\n// TODO: CHECKOUT-9010 Cover 'Customer registration failure due to using an existing email' in functional tests repo\nimport { type FormField } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { type FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, useMemo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { DynamicFormField , useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { isRequestError } from '../common/error';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form } from '../ui/form';\n\nimport getCreateCustomerValidationSchema, {\n    type CreateAccountFormValues,\n} from './getCreateCustomerValidationSchema';\nimport getPasswordRequirements from './getPasswordRequirements';\n\nimport './CreateAccountForm.scss';\n\nexport interface CreateAccountFormProps {\n    formFields: FormField[];\n    createAccountError?: Error;\n    isCreatingAccount?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onSubmit(values: CreateAccountFormValues): void;\n}\n\nfunction getAcceptsMarketingEmailsDefault(defaultShouldSubscribe: boolean, requiresMarketingConsent: boolean): string[] {\n    if (defaultShouldSubscribe) {\n        return ['1'];\n    }\n\n    return requiresMarketingConsent ? [] : ['0'];\n}\n\nfunction transformFormFieldsData(formFields: FormField[], defaultShouldSubscribe: boolean): FormField[] {\n    return formFields.map(field => {\n        if (field.name === 'acceptsMarketingEmails') {\n            const { options } = field;\n            const items = options?.items || [];\n\n            const updatedItems = items.map(item => {\n                return {\n                    value: defaultShouldSubscribe ? '1' : item.value,\n                    label: item.label,\n                }\n            });\n\n            return {\n                ...field,\n                options: {\n                    items: updatedItems,\n                }\n            }\n        }\n\n        return field;\n    });\n}\n\nconst CreateAccountForm: FunctionComponent<\n    CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\n> = ({ formFields, createAccountError, isCreatingAccount, isExecutingPaymentMethodCheckout, onCancel, isFloatingLabelEnabled, defaultShouldSubscribe }) => {\n    const { themeV2 } = useThemeContext();\n    const createAccountErrorMessage = useMemo(() => {\n        if (!createAccountError) {\n            return;\n        }\n\n        if (isRequestError(createAccountError) && createAccountError.status === 409) {\n            const splitMessage = createAccountError.message.split(':');\n\n            if (splitMessage.length > 1) {\n                return (\n                    <TranslatedString\n                        data={{ email: splitMessage[1].trim() }}\n                        id=\"customer.email_in_use_text\"\n                    />\n                );\n            }\n\n            return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\n        }\n\n        return createAccountError.message;\n    }, [createAccountError]);\n\n    const fields = transformFormFieldsData(formFields, defaultShouldSubscribe);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset>\n                {createAccountErrorMessage && (\n                    <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\n                )}\n                <div className=\"create-account-form\">\n                    {fields.map((field) => (\n                        <DynamicFormField\n                            autocomplete={field.name}\n                            extraClass={`dynamic-form-field--${field.name}`}\n                            field={field}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            key={field.id}\n                            parentFieldName={field.custom ? 'customFields' : undefined}\n                            themeV2={themeV2}\n                        />\n                    ))}\n                </div>\n            </Fieldset>\n\n            <div className=\"form-actions\">\n                <Button\n                    className={themeV2 ? 'body-bold' : ''}\n                    disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    id=\"checkout-customer-create\"\n                    isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    testId=\"customer-continue-create\"\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString id=\"customer.create_account_action\" />\n                </Button>\n\n                <a\n                    className={classNames('button optimizedCheckout-buttonSecondary',\n                        { 'body-bold': themeV2 })}\n                    data-test=\"customer-cancel-button\"\n                    href=\"#\"\n                    id=\"checkout-customer-cancel\"\n                    onClick={preventDefault(onCancel)}\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </a>\n            </div>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\n        handleSubmit: (values, { props: { onSubmit = noop } }) => {\n            onSubmit(values);\n        },\n        mapPropsToValues: ({ defaultShouldSubscribe, requiresMarketingConsent }) => ({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            customFields: {},\n            acceptsMarketingEmails: getAcceptsMarketingEmailsDefault(defaultShouldSubscribe, requiresMarketingConsent),\n        }),\n        validationSchema: ({\n            language,\n            formFields,\n        }: CreateAccountFormProps & WithLanguageProps) => {\n            const passwordRequirements = formFields.find(\n                ({ requirements }) => requirements,\n            )?.requirements;\n\n            if (!passwordRequirements) {\n                throw new Error('Password requirements missing');\n            }\n\n            const schema = getCreateCustomerValidationSchema({\n                language,\n                formFields,\n                passwordRequirements: getPasswordRequirements(passwordRequirements),\n            });\n\n            return schema;\n        },\n    })(CreateAccountForm),\n);\n","import React, { type FunctionComponent, type MouseEventHandler } from 'react';\n\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { useLocale } from './LocaleContext';\nimport { type TranslatedStringProps } from './TranslatedString';\n\nexport type TranslatedLinkProps = TranslatedStringProps & {\n    testId?: string;\n    onClick: MouseEventHandler;\n};\n\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\n    const { language } = useLocale();\n    const translatedString = language.translate(id, data);\n    const parsedString = parseAnchor(translatedString);\n\n    return parsedString.length ? (\n        <>\n            {parsedString[0]}\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\n                {parsedString[1]}\n            </a>\n            {parsedString[2]}\n        </>\n    ) : (\n        <>{translatedString}</>\n    );\n};\n\nexport default TranslatedLink;\n","import { type FieldProps } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface EmailFieldProps {\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string): void;\n}\n\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <TextInput\n                {...props.field}\n                autoComplete={props.field.name}\n                id={props.field.name}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                themeV2={themeV2}\n                type=\"email\"\n            />\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\n\n    return (\n        <FormField\n            input={renderInput}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            labelContent={labelContent}\n            name=\"email\"\n            onChange={onChange}\n            themeV2={themeV2}\n        />\n    );\n};\n\nexport default memo(EmailField);\n","import { type SignInEmail } from '@bigcommerce/checkout-sdk';\nimport { type FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo, useMemo } from 'react';\n\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    type WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { LoadingSpinner } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Form } from '../ui/form';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\n\nexport interface EmailLoginFormProps {\n    email?: string;\n    isOpen: boolean;\n    isSendingEmail?: boolean;\n    emailHasBeenRequested?: boolean;\n    sentEmail?: SignInEmail;\n    sentEmailError?: any;\n    isFloatingLabelEnabled?: boolean;\n    onRequestClose?(): void;\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\n}\n\nexport interface EmailLoginFormValues {\n    email: string;\n}\n\nconst EmailLoginForm: FunctionComponent<\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\n> = ({\n    email,\n    isOpen,\n    isSendingEmail = false,\n    emailHasBeenRequested,\n    onRequestClose = noop,\n    sentEmailError,\n    sentEmail,\n    submitForm,\n    isFloatingLabelEnabled,\n    values: { email: formEmail },\n}) => {\n    const modalHeaderStringId = useMemo(() => {\n        if (emailHasBeenRequested) {\n            if (sentEmailError) {\n                return 'common.error_heading';\n            }\n\n            return 'login_email.sent_header';\n        }\n\n        if (email) {\n            return 'login_email.header_with_email';\n        }\n\n        return 'login_email.header';\n    }, [emailHasBeenRequested, sentEmailError, email]);\n\n    const okButton = useMemo(\n        () => (\n            <div className=\"modal-footer\">\n                <Button onClick={onRequestClose}>\n                    <TranslatedString id=\"common.ok_action\" />\n                </Button>\n            </div>\n        ),\n        [onRequestClose],\n    );\n\n    const footer = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return okButton;\n        }\n\n        if (emailHasBeenRequested && !sentEmailError) {\n            if (isSendingEmail) {\n                return <LoadingSpinner isLoading />;\n            }\n\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\n                return okButton;\n            }\n\n            return (\n                <p>\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\n                </p>\n            );\n        }\n\n        return (\n            <div className=\"modal-footer\">\n                <Button\n                    className=\"optimizedCheckout-buttonSecondary\"\n                    onClick={onRequestClose}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </Button>\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\n                    <TranslatedString id=\"login_email.send\" />\n                </Button>\n            </div>\n        );\n    }, [\n        sentEmailError,\n        emailHasBeenRequested,\n        okButton,\n        submitForm,\n        isSendingEmail,\n        onRequestClose,\n        sentEmail,\n    ]);\n\n    const error = useMemo(() => {\n        if (!sentEmailError) {\n            return null;\n        }\n\n        const { status } = sentEmailError;\n\n        return (\n            <Alert type={AlertType.Error}>\n                {status === 429 ? (\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\n                ) : (\n                    <TranslatedString\n                        id={\n                            status === 404\n                                ? 'login_email.error_not_found'\n                                : 'login_email.error_server'\n                        }\n                    />\n                )}\n            </Alert>\n        );\n    }, [sentEmailError]);\n\n    const form = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return null;\n        }\n\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\n            const { expiry, sent_email } = sentEmail;\n\n            return (\n                <p>\n                    <TranslatedHtml\n                        data={{\n                            minutes: Math.round(expiry / 60),\n                        }}\n                        id={\n                            sent_email === 'sign_in'\n                                ? 'login_email.sent_text'\n                                : 'customer.reset_password_before_login_error'\n                        }\n                    />\n                </p>\n            );\n        }\n\n        if (emailHasBeenRequested && !sentEmail) {\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\n        }\n\n        return (\n            <>\n                <p>\n                    <TranslatedString id=\"login_email.text\" />\n                </p>\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n            </>\n        );\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\n\n    return (\n        <Modal\n            additionalBodyClassName=\"modal--withText\"\n            additionalModalClassName=\"modal--medium\"\n            header={\n                <ModalHeader>\n                    <TranslatedString id={modalHeaderStringId} />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={true}\n        >\n            <Form>\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\n                {error}\n                {form}\n                {footer}\n            </Form>\n        </Modal>\n    );\n};\n\nexport default withLanguage(\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n        }),\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\n            onSendLoginEmail(values);\n        },\n        validationSchema: ({ language }: WithLanguageProps) =>\n            getEmailValidationSchema({ language }),\n    })(memo(EmailLoginForm)),\n);\n","import { type FastlaneHostWindow } from './types';\n\nexport default function isFastlaneHostWindow(window: Window): window is FastlaneHostWindow {\n    /* eslint-disable no-prototype-builtins */\n    return window.hasOwnProperty('paypalFastlane') || window.hasOwnProperty('braintreeFastlane');\n}\n","import React, { type FunctionComponent, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isFastlaneHostWindow from './is-fastlane-window';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\nimport { type FastlanePrivacySettings } from './types';\n\nimport './PayPalFastlaneWatermark.scss';\n\nconst PayPalFastlaneWatermark: FunctionComponent = () => {\n    const { checkoutState } = useCheckout();\n    const { getPaymentMethod, getConfig } = checkoutState.data;\n    const providerWithCustomCheckout =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const paymentMethod =\n        !!providerWithCustomCheckout &&\n        isPayPalFastlaneMethod(providerWithCustomCheckout) &&\n        getPaymentMethod(providerWithCustomCheckout);\n\n    const shouldRenderFastlaneWatermark =\n        isFastlaneHostWindow(window) &&\n        !!paymentMethod &&\n        !!paymentMethod.initializationData?.isFastlanePrivacySettingEnabled;\n\n    useEffect(() => {\n        if (shouldRenderFastlaneWatermark && isFastlaneHostWindow(window)) {\n            const fastlane = isBraintreeFastlaneMethod(providerWithCustomCheckout)\n                ? window.braintreeFastlane\n                : window.paypalFastlane;\n\n            void fastlane\n                .FastlaneWatermarkComponent({\n                    includeAdditionalInfo: true,\n                })\n                .then((result: FastlanePrivacySettings) => {\n                    result.render('#paypalFastlaneWatermark');\n                });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (shouldRenderFastlaneWatermark) {\n        return (\n            <div className=\"paypalFastlaneWatermark-container\">\n                <div data-test=\"paypalFastlaneWatermark\" id=\"paypalFastlaneWatermark\" />\n            </div>\n        );\n    }\n\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <></>;\n};\n\nexport default PayPalFastlaneWatermark;\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { CheckboxFormField, Fieldset } from '../ui/form';\n\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <CheckboxFormField\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\n        name=\"privacyPolicy\"\n        testId=\"privacy-policy-checkbox\"\n        themeV2={themeV2}\n    />\n);\n\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\n        <PrivacyPolicyCheckboxFieldLink themeV2={themeV2} url={url} />\n    </Fieldset>\n);\n\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <p className={themeV2 ? 'body-regular' : ''}>\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\n    </p>\n);\n\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\n    url,\n    isExpressPrivacyPolicy,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    if (isExpressPrivacyPolicy) {\n        return <PrivacyPolicyAutoConsent themeV2={themeV2} url={url} />;\n    }\n\n    return <PrivacyPolicyFieldset themeV2={themeV2} url={url} />;\n};\n\nexport default memo(PrivacyPolicyField);\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { boolean, type BooleanSchema, object, type ObjectSchema } from 'yup';\n\nexport interface PrivacyPolicyValidatonSchemaProps {\n    isRequired: boolean;\n    language: LanguageService;\n}\n\nexport default function getPrivacyPolicyValidationSchema({\n    isRequired,\n    language,\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\n    const schemaFields: {\n        privacyPolicy?: BooleanSchema;\n    } = {};\n\n    if (isRequired) {\n        schemaFields.privacyPolicy = boolean().oneOf(\n            [true],\n            language.translate('privacy_policy.required_error'),\n        );\n    }\n\n    return object(schemaFields);\n}\n","import { type FieldProps } from 'formik';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Input, Label } from '../ui/form';\n\nexport type SubscribeFieldProps = FieldProps<boolean> & {\n    requiresMarketingConsent: boolean;\n};\n\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\n    field,\n    requiresMarketingConsent,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <>\n            <Input\n                {...field}\n                checked={field.value}\n                className=\"form-checkbox\"\n                id={field.name}\n                testId=\"should-subscribe-checkbox\"\n                type=\"checkbox\"\n                value={String(field.value)}\n            />\n\n            <Label\n                additionalClassName={themeV2 ? 'body-regular' : ''}\n                htmlFor={field.name}\n            >\n                <TranslatedHtml\n                    id={\n                        requiresMarketingConsent\n                            ? 'customer.guest_marketing_consent'\n                            : 'customer.guest_subscribe_to_newsletter_text'\n                    }\n                />\n            </Label>\n        </>\n    );\n}\n\nexport default memo(SubscribeField);\n","export class SubscribeSessionStorage {\n    static key = 'shouldSubscribe';\n\n    static setSubscribeStatus(shouldSubscribe: boolean) {\n        sessionStorage.setItem(this.key, `${shouldSubscribe}`)\n    }\n\n    static getSubscribeStatus(): boolean {\n        const value = sessionStorage.getItem(this.key);\n\n        return value === 'true';\n    }\n\n    static removeSubscribeStatus() {\n        sessionStorage.removeItem(this.key);\n    }\n}\n","import classNames from 'classnames';\nimport { type FieldProps, type FormikProps, withFormik } from 'formik';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback, useEffect } from 'react';\nimport { object, string } from 'yup';\n\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { PayPalFastlaneWatermark } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport EmailField from './EmailField';\nimport SubscribeField from './SubscribeField';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nfunction getShouldSubscribeValue(requiresMarketingConsent: boolean, defaultShouldSubscribe: boolean) {\n    if (SubscribeSessionStorage.getSubscribeStatus()) {\n        return true;\n    }\n\n    return requiresMarketingConsent ? false : defaultShouldSubscribe\n}\n\nexport interface GuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    continueAsGuestButtonLabelId: string;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    isLoading: boolean;\n    privacyPolicyUrl?: string;\n    isExpressPrivacyPolicy: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldShowEmailWatermark: boolean;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    onShowLogin(): void;\n}\n\nexport interface GuestFormValues {\n    email: string;\n    shouldSubscribe: boolean;\n}\n\nconst GuestForm: FunctionComponent<\n    GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\n> = ({\n    canSubscribe,\n    checkoutButtons,\n    continueAsGuestButtonLabelId,\n    defaultShouldSubscribe,\n    isLoading,\n    onChangeEmail,\n    onShowLogin,\n    privacyPolicyUrl,\n    requiresMarketingConsent,\n    isExpressPrivacyPolicy,\n    isFloatingLabelEnabled,\n    shouldShowEmailWatermark,\n    setFieldValue,\n}) => {\n    const {\n        checkoutState: {\n            data: { getConfig }\n        }\n    } = useCheckout();\n    const { themeV2 } = useThemeContext();\n\n    const config = getConfig();\n\n    const renderField = useCallback(\n        (fieldProps: FieldProps<boolean>) => (\n            <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\n        ),\n        [requiresMarketingConsent],\n    );\n\n    useEffect(() => {\n        void setFieldValue(\n            'shouldSubscribe',\n            getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            );\n    }, [requiresMarketingConsent, defaultShouldSubscribe]);\n\n    if (!config) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            shouldRedirectToStorefrontForAuth,\n        },\n        links: {\n            checkoutLink,\n            loginLink,\n        }\n    } = config;\n\n    const handleLogin: () => void = () => {\n        if (shouldRedirectToStorefrontForAuth) {\n            window.location.assign(`${loginLink}?redirectTo=${checkoutLink}`);\n\n            return;\n        }\n\n        return onShowLogin();\n    }\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-guest\"\n            testId=\"checkout-customer-guest\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.guest_customer_text\" />\n                    </Legend>\n                }\n            >\n                <div className=\"customerEmail-container\">\n                    <div className=\"customerEmail-body\">\n                        <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail}/>\n\n                        {shouldShowEmailWatermark && <PayPalFastlaneWatermark />}\n\n                        {(canSubscribe || requiresMarketingConsent) && (\n                            <BasicFormField name=\"shouldSubscribe\" render={renderField} />\n                        )}\n                    </div>\n\n                    <div\n                        className={classNames('form-actions customerEmail-action', {\n                            'customerEmail-floating--enabled': isFloatingLabelEnabled,\n                        })}\n                    >\n                        <Button\n                            className={classNames('customerEmail-button', {\n                                'body-bold': themeV2,\n                            })}\n                            id=\"checkout-customer-continue\"\n                            isLoading={isLoading}\n                            testId=\"customer-continue-as-guest-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </Button>\n                    </div>\n                </div>\n\n                {privacyPolicyUrl && (\n                    <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                )}\n\n                {!isLoading && (\n                    <p className={classNames('customer-login-link',\n                        { 'body-regular': themeV2 })}\n                    >\n                        <TranslatedString id=\"customer.login_text\" />{' '}\n                        <a\n                            data-test=\"customer-continue-button\"\n                            id=\"checkout-customer-login\"\n                            onClick={handleLogin}\n                            role=\"button\"\n                            tabIndex={0}\n                        >\n                            <TranslatedString id=\"customer.login_action\" />\n                        </a>\n                    </p>\n                )}\n\n                {checkoutButtons}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\n        mapPropsToValues: ({\n            email = '',\n            defaultShouldSubscribe = false,\n            requiresMarketingConsent,\n        }) => ({\n            email,\n            shouldSubscribe: getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            privacyPolicy: false,\n        }),\n        handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n            onContinueAsGuest(values);\n        },\n        validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: GuestFormProps & WithLanguageProps) => {\n            const email = string()\n                .email(language.translate('customer.email_invalid_error'))\n                .max(256)\n                .required(language.translate('customer.email_required_error'));\n\n            const baseSchema = object({ email });\n\n            if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                return baseSchema.concat(\n                    getPrivacyPolicyValidationSchema({\n                        isRequired: !!privacyPolicyUrl,\n                        language,\n                    }),\n                );\n            }\n\n            return baseSchema;\n        },\n    })(memo(GuestForm)),\n);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEye: FunctionComponent = () => (\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEye);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEyeSlash: FunctionComponent = () => (\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEyeSlash);\n","import { type FieldProps } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { FormField, TextInput } from '../ui/form';\nimport Label from '../ui/form/Label';\nimport { IconEye, IconEyeSlash } from '../ui/icon';\nimport { Toggle } from '../ui/toggle';\n\ninterface WithFloatingLabel {\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <Toggle openByDefault={false}>\n                {({ isOpen, toggle }) => (\n                    <div className=\"form-field-password\">\n                        <TextInput\n                            {...props.field}\n                            additionalClassName=\"form-input--withIcon\"\n                            id={props.field.name}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            themeV2={themeV2}\n                            type={isOpen ? 'text' : 'password'}\n                        />\n                        {isFloatingLabelEnabled && (\n                            <Label\n                                additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                                htmlFor={props.field.name}\n                                id={`${props.field.name}-label`}\n                                isFloatingLabelEnabled={true}\n                            >\n                                <TranslatedString id=\"customer.password_label\" />\n                            </Label>\n                        )}\n                        <a\n                            className=\"form-toggle-password form-input-icon\"\n                            href=\"#\"\n                            onClick={toggle}\n                        >\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\n                        </a>\n                    </div>\n                )}\n            </Toggle>\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\n\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\n};\n\nexport default memo(PasswordField);\n","import React from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { Button, ButtonVariant, useThemeContext } from '@bigcommerce/checkout/ui';\n\ninterface RedirectToStorefrontLoginProps {\n    isDisabled: boolean;\n    isLoading: boolean;\n}\n\nexport const RedirectToStorefrontLogin: React.FC<RedirectToStorefrontLoginProps> = ({\n    isDisabled,\n    isLoading,\n}) => {\n    const { themeV2 } = useThemeContext();\n    const { checkoutState: { data: { getConfig } } } = useCheckout();\n\n    const config = getConfig();\n\n    if (!config) {\n        return null;\n    }\n\n    const { checkoutLink, loginLink } = config.links;\n\n    const handleRedirect = () => {\n        return window.location.assign(`${loginLink}?redirectTo=${checkoutLink}`);\n    }\n\n    return (\n        <Button\n            className={themeV2 ? 'body-bold' : ''}\n            disabled={isDisabled}\n            id=\"checkout-customer-continue\"\n            isLoading={isLoading}\n            onClick={handleRedirect}\n            testId=\"customer-continue-button\"\n            variant={ButtonVariant.Primary}\n        >\n            <TranslatedString id=\"customer.sign_in_action\" />\n        </Button>\n    );\n};\n","import classNames from 'classnames';\nimport { type FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    type WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport CustomerViewType from './CustomerViewType';\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport mapErrorMessage from './mapErrorMessage';\nimport PasswordField from './PasswordField';\nimport { RedirectToStorefrontLogin } from './RedirectToStorefrontLogin';\n\nexport interface LoginFormProps {\n    isBuyNowCart: boolean;\n    canCancel?: boolean;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    forgotPasswordUrl: string;\n    isSignInEmailEnabled?: boolean;\n    isSendingSignInEmail?: boolean;\n    isSigningIn?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    signInError?: Error;\n    signInEmailError?: Error;\n    viewType?: Omit<CustomerViewType, 'guest'>;\n    passwordlessLogin?: boolean;\n    shouldShowCreateAccountLink?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldRedirectToStorefrontForAuth: boolean;\n    onCancel?(): void;\n    onCreateAccount?(): void;\n    onChangeEmail?(email: string): void;\n    onSignIn(data: LoginFormValues): void;\n    onSendLoginEmail?(): void;\n    onContinueAsGuest?(): void;\n}\n\nexport interface LoginFormValues {\n    email: string;\n    password: string;\n}\n\nconst LoginForm: FunctionComponent<\n    LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\n> = ({\n    isBuyNowCart,\n    canCancel,\n    continueAsGuestButtonLabelId,\n    forgotPasswordUrl,\n    email,\n    isSignInEmailEnabled,\n    isSigningIn,\n    isExecutingPaymentMethodCheckout,\n    language,\n    onCancel = noop,\n    onChangeEmail,\n    onContinueAsGuest,\n    onCreateAccount = noop,\n    onSendLoginEmail = noop,\n    signInError,\n    shouldShowCreateAccountLink,\n    isFloatingLabelEnabled,\n    shouldRedirectToStorefrontForAuth,\n    viewType = CustomerViewType.Login,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const changeEmailLink = useCallback(() => {\n        if (!email) {\n            return null;\n        }\n\n        return (\n            <p className=\"optimizedCheckout-contentSecondary\">\n                <TranslatedLink\n                    data={{ email }}\n                    id=\"customer.guest_could_login_change_email\"\n                    onClick={onCancel}\n                    testId=\"change-email\"\n                />\n            </p>\n        );\n    }, [email, onCancel]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.returning_customer_text\" />\n                    </Legend>\n                }\n            >\n                {signInError && (\n                    <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\n                        {mapErrorMessage(signInError, (key) => language.translate(key))}\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.SuggestedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.CancellableEnforcedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.EnforcedLogin && (\n                    <Alert type={AlertType.Error}>\n                        <TranslatedLink\n                            id=\"customer.guest_temporary_disabled\"\n                            onClick={onCreateAccount}\n                        />\n                    </Alert>\n                )}\n\n                {(viewType === CustomerViewType.Login ||\n                    viewType === CustomerViewType.EnforcedLogin) && (\n                    <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n                )}\n\n                {!shouldRedirectToStorefrontForAuth && <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />}\n\n                <p className={classNames('form-legend-container', { 'body-cta': themeV2 })}>\n                    <span>\n                        { isSignInEmailEnabled && !isBuyNowCart &&\n                            <TranslatedLink\n                                id=\"login_email.link\"\n                                onClick={ onSendLoginEmail }\n                                testId=\"customer-signin-link\"\n                            />\n                        }\n                        { !isSignInEmailEnabled && !shouldRedirectToStorefrontForAuth &&\n                            <a\n                                data-test=\"forgot-password-link\"\n                                href={ forgotPasswordUrl }\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <TranslatedString id=\"customer.forgot_password_action\" />\n                            </a>\n                        }\n                    </span>\n                    { viewType === CustomerViewType.Login && shouldShowCreateAccountLink &&\n                        <span>\n                            <TranslatedLink\n                                id=\"customer.create_account_to_continue_text\"\n                                onClick={onCreateAccount}\n                            />\n                        </span>\n                    }\n                </p>\n\n                <div className=\"form-actions\">\n                    {shouldRedirectToStorefrontForAuth ?\n                        <RedirectToStorefrontLogin\n                            isDisabled={Boolean(isSigningIn || isExecutingPaymentMethodCheckout)}\n                            isLoading={Boolean(isSigningIn || isExecutingPaymentMethodCheckout)}\n                        />\n                        :\n                        <Button\n                            className={themeV2 ? 'body-bold' : ''}\n                            disabled={isSigningIn || isExecutingPaymentMethodCheckout}\n                            id=\"checkout-customer-continue\"\n                            isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\n                            testId=\"customer-continue-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                    >\n                        <TranslatedString id=\"customer.sign_in_action\" />\n                    </Button>}\n\n                    {viewType === CustomerViewType.SuggestedLogin && (\n                        <a\n                            className={classNames('button optimizedCheckout-buttonSecondary',\n                                { 'body-bold': themeV2 })}\n                            data-test=\"customer-guest-continue\"\n                            href=\"#\"\n                            id=\"checkout-guest-continue\"\n                            onClick={preventDefault(onContinueAsGuest)}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </a>\n                    )}\n\n                    {canCancel &&\n                        viewType !== CustomerViewType.EnforcedLogin &&\n                        viewType !== CustomerViewType.SuggestedLogin && (\n                            <a\n                            className={classNames('button optimizedCheckout-buttonSecondary',\n                                { 'body-bold': themeV2 })}\n                                data-test=\"customer-cancel-button\"\n                                href=\"#\"\n                                id=\"checkout-customer-cancel\"\n                                onClick={preventDefault(onCancel)}\n                            >\n                                <TranslatedString\n                                    id={\n                                        viewType === CustomerViewType.CancellableEnforcedLogin\n                                            ? 'login_email.use_another_email'\n                                            : 'common.cancel_action'\n                                    }\n                                />\n                            </a>\n                        )}\n                </div>\n\n                {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n            password: '',\n        }),\n        handleSubmit: (values, { props: { onSignIn } }) => {\n            onSignIn(values);\n        },\n        validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\n            getEmailValidationSchema({ language }).concat(\n                object({\n                    password: string().required(\n                        language.translate('customer.password_required_error'),\n                    ),\n                }),\n            ),\n    })(memo(LoginForm)),\n);\n","export default function mapErrorMessage(\n    error: any, // TODO: Export `RequestError`\n    translate: (key: string) => string,\n): string {\n    const type = error.body && error.body.type;\n\n    switch (type) {\n        case 'throttled_login':\n            return translate('customer.sign_in_throttled_error');\n\n        case 'reset_password_before_login':\n            return translate('customer.reset_password_before_login_error');\n\n        default:\n            return translate('customer.sign_in_error');\n    }\n}\n","import { type CustomerInitializeOptions, type CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { type FieldProps, type FormikProps, withFormik } from 'formik';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback, useEffect, useState } from 'react';\nimport { object } from 'yup';\n\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport type CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport { type GuestFormValues } from './GuestForm';\nimport SubscribeField from './SubscribeField';\n\nexport interface StripeGuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    step: CheckoutStepStatus;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    isLoading: boolean;\n    isExpressPrivacyPolicy: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onShowLogin(): void;\n}\n\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\n    continueAsGuestButtonLabelId,\n    isLoading,\n    initialize,\n    isExpressPrivacyPolicy,\n    deinitialize,\n    onChangeEmail,\n    onShowLogin,\n    onContinueAsGuest,\n    canSubscribe,\n    checkoutButtons,\n    defaultShouldSubscribe,\n    requiresMarketingConsent,\n    privacyPolicyUrl,\n    step,\n    status,\n    setFieldValue,\n}) => {\n\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\n    const [emailValue, setEmailValue] = useState('');\n    const [authentication, setAuthentication] = useState(false);\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\n    const [isNewAuth, setIsNewAuth] = useState(false);\n    const handleOnClickSubmitButton = () => {\n        onContinueAsGuest({\n            email: emailValue,\n            shouldSubscribe: !!status?.shouldSubscribe,\n        });\n    };\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\n        setFieldValue('email', email);\n        onChangeEmail(email);\n        setEmailValue(email);\n        setContinueAsAGuestButton(!email);\n        setAuthentication(authenticated);\n\n        if(!authenticated){\n            setIsNewAuth(true);\n        }\n    }, [setContinueAsAGuestButton, onChangeEmail]);\n\n    useEffect(() => {\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\n            handleOnClickSubmitButton();\n        }\n    }, [emailValue, authentication, isNewAuth]);\n\n    useEffect(() => {\n        if (status?.valSuccess) {\n            handleOnClickSubmitButton();\n        }\n    }, [status?.valSuccess]);\n\n    const handleLoading = useCallback((mounted: boolean) => {\n        setIsStripeLoading(mounted);\n    }, []);\n\n    const stripeDeinitialize = () => {\n        deinitialize({\n            methodId: 'stripeupe',\n        });\n    };\n\n    const stripeInitialize = () => {\n        initialize( {\n            methodId: 'stripeupe',\n            stripeupe: {\n                container: 'stripeupeLink',\n                onEmailChange: setEmailCallback,\n                isLoading: handleLoading,\n                getStyles: getStripeStyles,\n                gatewayId: 'stripeupe',\n                methodId: 'card',\n            },\n        })};\n\n    useEffect(() => {\n        stripeInitialize();\n\n        return () => stripeDeinitialize();\n    }, []);\n\n    useEffect(() => {\n        void setFieldValue(\n            'shouldSubscribe',\n            requiresMarketingConsent ? false : defaultShouldSubscribe,\n        );\n    }, [requiresMarketingConsent, defaultShouldSubscribe]);\n\n    const getStylesFromElement = (\n        id: string,\n        properties: string[]) => {\n        const parentContainer = document.getElementById(id);\n\n        if (parentContainer) {\n            return getAppliedStyles(parentContainer, properties);\n        }\n\n            return undefined;\n\n    };\n\n    const containerId = 'stripe-card-component-field';\n\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\n\n        return formLabel && formInput && formError ? {\n            labelText: formLabel.color,\n            fieldText: formInput.color,\n            fieldPlaceholderText: formInput.color,\n            fieldErrorText: formError.color,\n            fieldBackground: formInput['background-color'],\n            fieldInnerShadow: formInput['box-shadow'],\n            fieldBorder: formInput['border-color'],\n        } : undefined;\n    }, [])\n\n    const renderCheckoutThemeStylesForStripeUPE = () => {\n        return (\n            <div\n                className=\"optimizedCheckout-form-input\"\n                id={ `${containerId}--input` }\n            >\n                <div\n                    className=\"form-field--error\"\n                >\n                    <div\n                        className=\"optimizedCheckout-form-label\"\n                        id={ `${containerId}--error` }\n                    />\n                </div>\n                <div\n                    className=\"optimizedCheckout-form-label\"\n                    id={ `${containerId}--label` }\n                />\n            </div>\n        );\n    };\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\n\n    return (\n        <>\n            <Form\n                className=\"checkout-form\"\n                id=\"checkout-customer-guest\"\n                testId=\"checkout-customer-guest\"\n            >\n                <div className=\"checkout-form\" style={ {display: isStripeLoading ? 'none' : undefined} }>\n                    <Fieldset\n                        legend={ !authentication &&\n                            <Legend hidden>\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\n                            </Legend>\n                        }\n                    >\n                        <div className=\"customerEmail-container\">\n                            <div className=\"customerEmail-body\">\n                                <div id=\"stripeupeLink\"/>\n                                <br/>\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\n                                    name=\"shouldSubscribe\"\n                                    render={ renderField }\n                                /> }\n                            </div>\n\n                            <div className=\"form-actions customerEmail-action\">\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\n                                    className=\"stripeCustomerEmail-button\"\n                                    disabled={ continueAsAGuestButton }\n                                    id=\"stripe-checkout-customer-continue\"\n                                    isLoading={ isLoading }\n                                    testId=\"stripe-customer-continue-as-guest-button\"\n                                    type=\"submit\"\n                                    variant={ ButtonVariant.Primary }\n                                >\n                                    <TranslatedString id={ buttonText }/>\n                                </Button> }\n                            </div>\n                        </div>\n\n                        {privacyPolicyUrl && (\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                        )}\n\n                        {\n                            !isLoading && <p>\n                                <TranslatedString id=\"customer.login_text\"/>\n                                { ' ' }\n                                <a\n                                    data-test=\"customer-continue-button\"\n                                    id=\"checkout-customer-login\"\n                                    onClick={ onShowLogin }\n                                    role=\"button\"\n                                    tabIndex={0}\n                                >\n                                    <TranslatedString id=\"customer.login_action\"/>\n                                </a>\n                            </p>\n                        }\n                        { !authentication && checkoutButtons }\n                    </Fieldset>\n                </div>\n                { renderCheckoutThemeStylesForStripeUPE() }\n            </Form>\n        </>\n    );\n};\n\nexport default withLanguage(\n    withFormik<StripeGuestFormProps, GuestFormValues>({\n            mapPropsToValues: ({\n                email = '',\n                defaultShouldSubscribe = false,\n                requiresMarketingConsent,\n            }) => ({\n                email,\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n                privacyPolicy: false,\n            }),\n            handleSubmit: ( values, { setStatus }) => {\n                setStatus({\n                    valSuccess: true,\n                    shouldSubscribe: values.shouldSubscribe,\n                  });\n            },\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                    return getPrivacyPolicyValidationSchema({\n                            isRequired: !!privacyPolicyUrl,\n                            language,\n                        })\n                }\n\n                return object({});\n            },\n        })(memo(StripeGuestForm))\n)\n\n","import {\n    type CheckoutPaymentMethodExecutedOptions,\n    type CheckoutSelectors,\n    type CustomerAccountRequestBody,\n    type CustomerCredentials,\n    type CustomerInitializeOptions,\n    type CustomerRequestOptions,\n    type ExecutePaymentMethodCheckoutOptions,\n    type FormField,\n    type GuestCredentials,\n    type SignInEmail,\n    type StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { Component, type ReactNode } from 'react';\n\nimport { type AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneMethod } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport type CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { isErrorWithType } from '../common/error';\nimport { isFloatingLabelEnabled } from '../common/utility';\nimport getProviderWithCustomCheckout from '../payment/getProviderWithCustomCheckout';\nimport { PaymentMethodId } from '../payment/paymentMethod';\n\nimport CheckoutButtonList from './CheckoutButtonList';\nimport CreateAccountForm from './CreateAccountForm';\nimport CustomerViewType from './CustomerViewType';\nimport EmailLoginForm, { type EmailLoginFormValues } from './EmailLoginForm';\nimport { type CreateAccountFormValues } from './getCreateCustomerValidationSchema';\nimport GuestForm, { type GuestFormValues } from './GuestForm';\nimport LoginForm from './LoginForm';\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\nimport StripeGuestForm from './StripeGuestForm';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nexport interface CustomerProps {\n    viewType: CustomerViewType;\n    step: CheckoutStepStatus;\n    isEmbedded?: boolean;\n    isSubscribed: boolean;\n    isWalletButtonsOnTop: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    onChangeViewType?(viewType: CustomerViewType): void;\n    onAccountCreated?(): void;\n    onContinueAsGuest?(): void;\n    onContinueAsGuestError?(error: Error): void;\n    onReady?(): void;\n    onSubscribeToNewsletter(subscribe: boolean): void;\n    onSignIn?(): void;\n    onSignInError?(error: Error): void;\n    onUnhandledError?(error: Error): void;\n    onWalletButtonClick?(methodName: string): void;\n}\n\nexport interface WithCheckoutCustomerProps {\n    canSubscribe: boolean;\n    customerAccountFields: FormField[];\n    checkoutButtonIds: string[];\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    firstName?: string;\n    forgotPasswordUrl: string;\n    isContinuingAsGuest: boolean;\n    isCreatingAccount: boolean;\n    isExecutingPaymentMethodCheckout: boolean;\n    isGuestEnabled: boolean;\n    hasBillingId: boolean;\n    isInitializing: boolean;\n    isSendingSignInEmail: boolean;\n    isSignInEmailEnabled: boolean;\n    isSigningIn: boolean;\n    privacyPolicyUrl?: string;\n    providerWithCustomCheckout?: string;\n    requiresMarketingConsent: boolean;\n    signInEmail?: SignInEmail;\n    signInEmailError?: Error;\n    isBuyNowCart: boolean;\n    isAccountCreationEnabled: boolean;\n    isPaymentDataRequired: boolean;\n    createAccountError?: Error;\n    signInError?: Error;\n    isFloatingLabelEnabled?: boolean;\n    isExpressPrivacyPolicy: boolean;\n    shouldRedirectToStorefrontForAuth: boolean;\n    clearError(error: Error): Promise<CheckoutSelectors>;\n    continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\n    signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\n    createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n    shouldRenderStripeForm: boolean;\n}\n\nexport interface CustomerState {\n    isEmailLoginFormOpen: boolean;\n    isReady: boolean;\n    hasRequestedLoginEmail: boolean;\n}\n\nclass Customer extends Component<CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps, CustomerState> {\n    state: CustomerState = {\n        isEmailLoginFormOpen: false,\n        isReady: false,\n        hasRequestedLoginEmail: false,\n    };\n\n    private draftEmail?: string;\n\n    async componentDidMount(): Promise<void> {\n        const {\n            initializeCustomer,\n            email,\n            onReady = noop,\n            onUnhandledError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        this.draftEmail = email;\n\n        try {\n            if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n                await initializeCustomer({methodId: providerWithCustomCheckout});\n            }\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        this.setState({ isReady: true });\n\n        onReady();\n    }\n\n    async componentWillUnmount(): Promise<void> {\n        const {\n            deinitializeCustomer = noop,\n            providerWithCustomCheckout,\n            onUnhandledError = noop,\n        } = this.props;\n\n        try {\n            await deinitializeCustomer({ methodId: providerWithCustomCheckout });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { viewType } = this.props;\n        const { isEmailLoginFormOpen, isReady } = this.state;\n        const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\n        const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\n        const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\n\n        if (!isReady) {\n            return null;\n        }\n\n        return (\n            <>\n                {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\n                {shouldRenderLoginForm && this.renderLoginForm()}\n                {shouldRenderGuestForm && this.renderGuestForm()}\n                {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\n            </>\n        );\n    }\n\n    private renderGuestForm(): ReactNode {\n        const {\n            canSubscribe,\n            checkEmbeddedSupport,\n            checkoutButtonIds,\n            deinitializeCustomer,\n            email,\n            initializeCustomer,\n            isContinuingAsGuest = false,\n            isExecutingPaymentMethodCheckout = false,\n            isInitializing = false,\n            isSubscribed,\n            isWalletButtonsOnTop,\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            onUnhandledError = noop,\n            onWalletButtonClick = noop,\n            step,\n            isFloatingLabelEnabled,\n            isExpressPrivacyPolicy,\n            isPaymentDataRequired,\n            shouldRenderStripeForm,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        const checkoutButtons = isWalletButtonsOnTop || !isPaymentDataRequired\n          ? null\n          : <CheckoutButtonList\n            checkEmbeddedSupport={checkEmbeddedSupport}\n            deinitialize={deinitializeCustomer}\n            initialize={initializeCustomer}\n            isInitializing={isInitializing}\n            methodIds={checkoutButtonIds}\n            onClick={onWalletButtonClick}\n            onError={onUnhandledError}\n          />;\n\n        const isLoadingGuestForm = isContinuingAsGuest || isExecutingPaymentMethodCheckout;\n\n        return (\n            shouldRenderStripeForm ?\n                <StripeGuestForm\n                    canSubscribe={canSubscribe}\n                    checkoutButtons={checkoutButtons}\n                    continueAsGuestButtonLabelId=\"customer.continue\"\n                    defaultShouldSubscribe={isSubscribed}\n                    deinitialize={deinitializeCustomer}\n                    email={this.draftEmail || email}\n                    initialize={initializeCustomer}\n                    isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                    isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\n                    onChangeEmail={this.handleChangeEmail}\n                    onContinueAsGuest={this.handleContinueAsGuest}\n                    onShowLogin={this.handleShowLogin}\n                    privacyPolicyUrl={privacyPolicyUrl}\n                    requiresMarketingConsent={requiresMarketingConsent}\n                    step={step}\n                />\n                :\n            <GuestForm\n                canSubscribe={canSubscribe}\n                checkoutButtons={checkoutButtons}\n                continueAsGuestButtonLabelId=\"customer.continue\"\n                defaultShouldSubscribe={isSubscribed}\n                email={this.draftEmail || email}\n                isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isLoading={isLoadingGuestForm}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.handleContinueAsGuest}\n                onShowLogin={this.handleShowLogin}\n                privacyPolicyUrl={privacyPolicyUrl}\n                requiresMarketingConsent={requiresMarketingConsent}\n                shouldShowEmailWatermark={isPayPalFastlaneMethod(providerWithCustomCheckout)}\n            />\n        );\n    }\n\n    private renderEmailLoginLinkForm(): ReactNode {\n        const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\n\n        const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\n            this.props;\n\n        return (\n            <EmailLoginForm\n                email={this.draftEmail}\n                emailHasBeenRequested={hasRequestedLoginEmail}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isOpen={isEmailLoginFormOpen}\n                isSendingEmail={isSendingSignInEmail}\n                onRequestClose={this.closeEmailLoginFormForm}\n                onSendLoginEmail={this.handleSendLoginEmail}\n                sentEmail={signInEmail}\n                sentEmailError={signInEmailError}\n            />\n        );\n    }\n\n    private closeEmailLoginFormForm: () => void = () => {\n        this.setState({\n            isEmailLoginFormOpen: false,\n            hasRequestedLoginEmail: false,\n        });\n    };\n\n    private renderCreateAccountForm(): ReactNode {\n        const {\n            customerAccountFields,\n            isExecutingPaymentMethodCheckout,\n            isCreatingAccount,\n            createAccountError,\n            requiresMarketingConsent,\n            isFloatingLabelEnabled,\n            defaultShouldSubscribe,\n        } = this.props;\n\n        return (\n            <CreateAccountForm\n                createAccountError={createAccountError}\n                defaultShouldSubscribe={defaultShouldSubscribe}\n                formFields={customerAccountFields}\n                isCreatingAccount={isCreatingAccount}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                onCancel={this.handleCancelCreateAccount}\n                onSubmit={this.handleCreateAccount}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderLoginForm(): ReactNode {\n        const {\n            isBuyNowCart,\n            isEmbedded,\n            email,\n            forgotPasswordUrl,\n            isSignInEmailEnabled,\n            isGuestEnabled,\n            isSendingSignInEmail,\n            isSigningIn,\n            isExecutingPaymentMethodCheckout,\n            isAccountCreationEnabled,\n            signInError,\n            isFloatingLabelEnabled,\n            viewType,\n            shouldRedirectToStorefrontForAuth,\n        } = this.props;\n\n        return (\n            <LoginForm\n                canCancel={isGuestEnabled}\n                continueAsGuestButtonLabelId=\"customer.continue_as_guest_action\"\n                email={this.draftEmail || email}\n                forgotPasswordUrl={forgotPasswordUrl}\n                isBuyNowCart={isBuyNowCart}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isSendingSignInEmail={isSendingSignInEmail}\n                isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\n                isSigningIn={isSigningIn}\n                onCancel={this.handleCancelSignIn}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\n                onCreateAccount={this.showCreateAccount}\n                onSendLoginEmail={this.handleEmailLoginClicked}\n                onSignIn={this.handleSignIn}\n                shouldRedirectToStorefrontForAuth={shouldRedirectToStorefrontForAuth}\n                shouldShowCreateAccountLink={isAccountCreationEnabled}\n                signInError={signInError}\n                viewType={viewType}\n            />\n        );\n    }\n\n    private handleEmailLoginClicked: () => void = async () => {\n        const { viewType } = this.props;\n\n        try {\n            if (viewType !== CustomerViewType.Login && this.draftEmail) {\n                await this.handleSendLoginEmail({ email: this.draftEmail });\n            }\n        } finally {\n            this.setState({\n                isEmailLoginFormOpen: true,\n            });\n        }\n    };\n\n    private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\n        values,\n    ) => {\n        const { sendLoginEmail } = this.props;\n\n        try {\n            await sendLoginEmail(values);\n        } catch (error) {\n        // Need to write catch block since one test covers the case when `sendLoginEmail` fails\n        } finally {\n            this.setState({\n                hasRequestedLoginEmail: true,\n            });\n        }\n    };\n\n    private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\n        formValues,\n    ) => {\n        const {\n            canSubscribe,\n            continueAsGuest,\n            hasBillingId,\n            defaultShouldSubscribe,\n            onChangeViewType = noop,\n            onContinueAsGuest = noop,\n            onContinueAsGuestError = noop,\n            onSubscribeToNewsletter,\n        } = this.props;\n\n        const email = formValues.email.trim();\n        const updateSubscriptionWhenUnchecked =\n            hasBillingId || defaultShouldSubscribe ? false : undefined;\n\n        try {\n            const { data } = await continueAsGuest({\n                email,\n                acceptsMarketingNewsletter:\n                    canSubscribe && formValues.shouldSubscribe\n                        ? true\n                        : updateSubscriptionWhenUnchecked,\n                acceptsAbandonedCartEmails: formValues.shouldSubscribe\n                    ? true\n                    : updateSubscriptionWhenUnchecked,\n            });\n\n            onSubscribeToNewsletter(formValues.shouldSubscribe);\n\n            SubscribeSessionStorage.setSubscribeStatus(formValues.shouldSubscribe);\n\n            const customer = data.getCustomer();\n\n            const paymentProviderCustomer = data.getPaymentProviderCustomer();\n\n            if (customer && customer.shouldEncourageSignIn && customer.isGuest && !paymentProviderCustomer?.stripeLinkAuthenticationState) {\n                return onChangeViewType(CustomerViewType.SuggestedLogin);\n            }\n\n            await this.executePaymentMethodCheckoutOrContinue();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            if (\n                isErrorWithType(error) &&\n                (error.type === 'update_subscriptions' ||\n                    error.type === 'payment_method_client_invalid')\n            ) {\n                this.draftEmail = undefined;\n\n                onContinueAsGuest();\n            }\n\n            if (isErrorWithType(error) && error.status === 429) {\n                return onChangeViewType(CustomerViewType.EnforcedLogin);\n            }\n\n            if (isErrorWithType(error) && error.status === 403) {\n                return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\n            }\n\n            onContinueAsGuestError(error);\n        }\n    };\n\n    private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\n        credentials,\n    ) => {\n        const {\n            signIn,\n            onSignIn = noop,\n            onSignInError = noop,\n        } = this.props;\n\n        try {\n            await signIn(credentials);\n\n            onSignIn();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            onSignInError(error);\n        }\n    };\n\n    private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\n        const {\n            createAccount = noop,\n            onAccountCreated = noop,\n        } = this.props;\n\n        await createAccount(mapCreateAccountFromFormValues(values));\n\n        onAccountCreated();\n    };\n\n    private showCreateAccount: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.CreateAccount);\n    };\n\n    private handleCancelCreateAccount: () => void = () => {\n        const { clearError, onChangeViewType = noop, createAccountError } = this.props;\n\n        if (createAccountError) {\n            clearError(createAccountError);\n        }\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private handleCancelSignIn: () => void = () => {\n        const { clearError, onChangeViewType = noop, signInError } = this.props;\n\n        if (signInError) {\n            clearError(signInError);\n        }\n\n        onChangeViewType(CustomerViewType.Guest);\n    };\n\n    private handleChangeEmail: (email: string) => void = (email) => {\n        const { analyticsTracker } = this.props;\n\n        this.draftEmail = email;\n        analyticsTracker.customerEmailEntry(email);\n    };\n\n    private handleShowLogin: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private executePaymentMethodCheckoutOrContinue: () => void = async () => {\n        const {\n            executePaymentMethodCheckout,\n            onContinueAsGuest = noop,\n            providerWithCustomCheckout\n        } = this.props;\n\n        if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onContinueAsGuest,\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n            });\n        } else {\n            onContinueAsGuest();\n        }\n    };\n\n    private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.customerPaymentMethodExecuted(payload);\n    }\n}\n\nexport function mapToWithCheckoutCustomerProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\n    const {\n        data: {\n            getBillingAddress,\n            getCustomerAccountFields,\n            getCheckout,\n            getCustomer,\n            getCart,\n            getSignInEmail,\n            getConfig,\n            isPaymentDataRequired,\n        },\n        errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\n        statuses: {\n            isContinuingAsGuest,\n            isExecutingPaymentMethodCheckout,\n            isInitializingCustomer,\n            isSigningIn,\n            isSendingSignInEmail,\n            isCreatingCustomerAccount,\n        },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const cart = getCart();\n    const signInEmail = getSignInEmail();\n    const config = getConfig();\n\n    if (!checkout || !config || !cart) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            isSignInEmailEnabled,\n            isAccountCreationEnabled,\n            isExpressPrivacyPolicy,\n            shouldRedirectToStorefrontForAuth\n        },\n    } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\n\n    const providerWithCustomCheckout = getProviderWithCustomCheckout(\n        config.checkoutSettings.providerWithCustomCheckout,\n    );\n\n    return {\n        customerAccountFields: getCustomerAccountFields(),\n        canSubscribe: config.shopperConfig.showNewsletterSignup,\n        checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\n        clearError: checkoutService.clearError,\n        createAccount: checkoutService.createCustomerAccount,\n        continueAsGuest: checkoutService.continueAsGuest,\n        sendLoginEmail: checkoutService.sendSignInEmail,\n        defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        email: billingAddress?.email || customer?.email,\n        firstName: customer?.firstName,\n        forgotPasswordUrl: config.links.forgotPasswordLink,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isCreatingAccount: isCreatingCustomerAccount(),\n        createAccountError: getCreateCustomerAccountError(),\n        hasBillingId: !!billingAddress?.id,\n        isBuyNowCart: cart.source === 'BUY_NOW',\n        isContinuingAsGuest: isContinuingAsGuest(),\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        isInitializing: isInitializingCustomer(),\n        isSignInEmailEnabled,\n        isAccountCreationEnabled,\n        isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\n        isSigningIn: isSigningIn(),\n        isSendingSignInEmail: isSendingSignInEmail(),\n        signInEmail,\n        signInEmailError: getSignInEmailError(),\n        privacyPolicyUrl,\n        providerWithCustomCheckout,\n        requiresMarketingConsent,\n        signIn: checkoutService.signInCustomer,\n        signInError: getSignInError(),\n        isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\n        isExpressPrivacyPolicy,\n        isPaymentDataRequired: isPaymentDataRequired(),\n        shouldRenderStripeForm: providerWithCustomCheckout === PaymentMethodId.StripeUPE && shouldUseStripeLinkByMinimumAmount(cart),\n        shouldRedirectToStorefrontForAuth,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\n","import { type CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\n\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\n\nimport { type CreateAccountFormValues } from './getCreateCustomerValidationSchema';\n\nexport default function mapCreateAccountFromFormValues({\n    acceptsMarketingEmails,\n    customFields,\n    ...values\n}: CreateAccountFormValues): CustomerAccountRequestBody {\n    return {\n        ...values,\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\n    };\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { type Banner, type Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\n\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\nimport './StaticConsignment.scss';\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\n\ninterface StaticConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    compactView?: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\n    consignment,\n    cart,\n    compactView,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const { shippingAddress: address, selectedShippingOption } = consignment;\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    return (\n        <div className=\"staticConsignment\">\n            <StaticAddress address={address} type={AddressType.Shipping} />\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticConsignment);\n","import { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { localizeAddress, TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport ConsignmentLineItemDetail from './ConsignmentLineItemDetail';\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\n\nimport './StaticMultiConsignment.scss';\n\ninterface StaticMultiConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    consignmentNumber: number;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticMultiConsignment: FunctionComponent<StaticMultiConsignmentProps> = ({\n    consignment,\n    cart,\n    consignmentNumber,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const {\n        checkoutState: {\n            data: { getShippingCountries },\n        },\n    } = useCheckout();\n    const { themeV2 } = useThemeContext();\n\n    const { shippingAddress: addressWithoutLocalization, selectedShippingOption } = consignment;\n    const address = localizeAddress(addressWithoutLocalization, getShippingCountries());\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticMultiConsignment\">\n            <h3 className={classNames('staticMultiConsignment-header',\n                { 'body-bold': themeV2 })}>\n                <TranslatedString data={{ consignmentNumber }} id=\"shipping.multishipping_consignment_index_heading\" />\n            </h3>\n\n            <div className=\"checkout-address--static\">\n                <p className={classNames('address-entry',\n                    { 'sub-text': themeV2 })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n                <div className=\"address-details\">\n                    <p className={classNames('street-address address-entry',\n                        { 'sub-text': themeV2 })}>\n                        <span className=\"address-line-1\">{address.address1}</span>\n                        {address.address2 && (\n                            <span className=\"address-line-2\">{`, ${address.address2}`}</span>\n                        )}\n                    </p>\n\n                    <p className={classNames('address-entry',\n                        { 'sub-text': themeV2 })}>\n                        {address.city && <span className=\"locality\">{address.city}</span>}\n                        {address.localizedProvince && (\n                            <span className=\"region\">{`, ${address.localizedProvince}`}</span>\n                        )}\n                        {address.localizedCountry && (\n                            <span className=\"country-name\">{`, ${address.localizedCountry}`}</span>\n                        )}\n                        {address.postalCode && (\n                            <span className=\"postal-code\">{` ${address.postalCode}`}</span>\n                        )}\n                    </p>\n                </div>\n            </div>\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            <div className=\"staticConsignment-items\">\n                <span className={themeV2 ? 'body-bold' : ''}>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n                </span>\n\n                <ConsignmentLineItemDetail isMultiShippingSummary lineItems={lineItems} />\n        </div>\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticMultiConsignment);\n","\nimport { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport StaticConsignment from './StaticConsignment';\nimport StaticMultiConsignment from './StaticMultiConsignment';\n\ninterface ShippingSummaryProps {\n    isShippingDiscountDisplayEnabled: boolean;\n    isMultiShippingMode: boolean;\n    consignments: Consignment[];\n    cart: Cart;\n}\n\nconst ShippingSummary: FunctionComponent<ShippingSummaryProps> = ({\n    isShippingDiscountDisplayEnabled,\n    isMultiShippingMode,\n    consignments,\n    cart\n}) => {\n    if (isMultiShippingMode) {\n        return (\n            <>\n                {consignments.map((consignment, index) => (\n                    <div className=\"staticMultiConsignmentContainer\" key={consignment.id}>\n                        <StaticMultiConsignment\n                            cart={cart}\n                            consignment={consignment}\n                            consignmentNumber={index + 1}\n                            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                        />\n                    </div>\n                ))}\n            </>\n        );\n    }\n\n    return (\n        <>\n            {consignments.map((consignment) => (\n                <div className=\"staticConsignmentContainer\" key={consignment.id}>\n                    <StaticConsignment\n                        cart={cart}\n                        compactView={consignments.length < 2}\n                        consignment={consignment}\n                        isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                    />\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default memo(ShippingSummary);\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport type CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepHeaderProps {\n    heading: ReactNode;\n    isActive?: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n    heading,\n    isActive,\n    isComplete,\n    isEditable,\n    onEdit,\n    summary,\n    type,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <div\n            className={classNames('stepHeader', {\n                'is-readonly': !isEditable,\n                'is-clickable': isEditable && !isActive,\n            })}\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n        >\n            <div className=\"stepHeader-figure stepHeader-column\">\n                <IconCheck\n                    additionalClassName={classNames(\n                        'stepHeader-counter',\n                        'optimizedCheckout-step',\n                        { 'stepHeader-counter--complete': isComplete },\n                    )}\n                />\n\n                <h2\n                    className={classNames('stepHeader-title optimizedCheckout-headingPrimary',\n                        { 'header': themeV2 && (isActive || isComplete) },\n                        { 'header-secondary': themeV2 && !isActive && !isComplete })}\n                >{heading}</h2>\n            </div>\n\n            {themeV2 && !isActive && isComplete &&\n                <div\n                    className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary body-regular\"\n                    data-test=\"step-info\"\n                    >\n                        {summary}\n                </div>\n            }\n\n            {!themeV2 &&\n                <div\n                    className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary\"\n                    data-test=\"step-info\"\n                >\n                    {!isActive && isComplete && summary}\n                </div>\n            }\n\n            {isEditable && !isActive && (\n                <div className=\"stepHeader-actions stepHeader-column\">\n                    <Button\n                        aria-expanded={isActive}\n                        className={classNames({ 'body-regular': themeV2 })}\n                        size={ButtonSize.Tiny}\n                        testId=\"step-edit-button\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"common.edit_action\" />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type ReactElement, type ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport type CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n    children?: ReactNode;\n    heading?: ReactNode;\n    isActive?: boolean;\n    isBusy: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    suggestion?: ReactNode;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onExpanded?(step: CheckoutStepType): void;\n    onEdit?(step: CheckoutStepType): void;\n}\n\nconst CheckoutStep = ({\n        children,\n        heading,\n        isActive,\n        isBusy,\n        isComplete,\n        isEditable,\n        onEdit,\n        suggestion,\n        summary,\n        type,\n        onExpanded = noop,\n    }: CheckoutStepProps): ReactElement => {\n    const [isClosed, setIsClosed] = useState(true);\n\n    const containerRef = useRef<HTMLLIElement>(null);\n    const contentRef = useRef<HTMLDivElement>(null);\n    const timeoutRef = useRef<number>();\n    const timeoutDelay = useRef<number>();\n\n    const getChildInput = (): HTMLElement | undefined => {\n        const container = containerRef.current;\n\n        if (!container) {\n            return;\n        }\n\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n        return input || undefined;\n    };\n\n    const getScrollPosition = (): number | undefined => {\n        const container = getParentContainer();\n\n        if (!container || window !== window.top) {\n            return;\n        }\n\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\n        const containerOffset =\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n        return containerOffset - topOffset;\n    };\n\n    // For now, we need to find the parent container because `CheckoutStep`\n    // isn't the outer container yet. Once both the header and body are\n    // moved inside this component, we can remove the lookup.\n    const getParentContainer = (): HTMLElement | undefined => {\n        let container: HTMLElement | null = containerRef.current;\n\n        while (container && container.parentElement) {\n            if (container.parentElement.classList.contains('checkout-step')) {\n                return container.parentElement;\n            }\n\n            container = container.parentElement;\n        }\n\n        return containerRef.current ? containerRef.current : undefined;\n    };\n\n    const getTransitionDelay = (): number => {\n        if (timeoutDelay.current !== undefined) {\n            return timeoutDelay.current;\n        }\n\n        timeoutDelay.current =\n            parseFloat(\n                contentRef.current\n                    ? getComputedStyle(contentRef.current).transitionDuration\n                    : '0s',\n            ) * 1000;\n\n        return timeoutDelay.current;\n    };\n\n    const focusStep = (): void => {\n        const delay = isMobileView() ? 0 : getTransitionDelay();\n\n        setIsClosed(false);\n\n        timeoutRef.current = window.setTimeout(() => {\n            const input = getChildInput();\n            const position = getScrollPosition();\n\n            if (input) {\n                input.focus();\n            }\n\n            if (position !== undefined && !isNaN(position)) {\n                window.scrollTo(0, position);\n            }\n\n            onExpanded(type);\n\n            timeoutRef.current = undefined;\n        }, delay);\n    };\n\n    const handleTransitionEnd = (node: HTMLElement, done: () => void): void => {\n        node.addEventListener('transitionend', ({ target }) => {\n            if (target === node) {\n                done();\n            }\n        });\n    };\n\n    const onAnimationEnd = useCallback((): void => {\n        if (!isActive) {\n            setIsClosed(true);\n        }\n    }, [isActive]);\n\n    useEffect(() => {\n        return () => {\n            if (timeoutRef.current) {\n                window.clearTimeout(timeoutRef.current);\n                timeoutRef.current = undefined;\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        if (isActive) {\n            focusStep();\n        }\n    }, [isActive]);\n\n    return (\n        <li\n            className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n                [`checkout-step--${type}`]: !!type,\n            })}\n            ref={containerRef}\n        >\n            <div className=\"checkout-view-header\">\n                <CheckoutStepHeader\n                    heading={heading}\n                    isActive={isActive}\n                    isComplete={isComplete}\n                    isEditable={isEditable}\n                    onEdit={onEdit}\n                    summary={summary}\n                    type={type}\n                />\n            </div>\n\n            {suggestion && isClosed && !isActive && (\n                <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n                    {suggestion}\n                </div>\n            )}\n\n            <MobileView>\n                {(matched) => (\n                    <CSSTransition\n                        addEndListener={handleTransitionEnd}\n                        classNames=\"checkout-view-content\"\n                        enter={!matched}\n                        exit={!matched}\n                        in={isActive}\n                        mountOnEnter\n                        onExited={onAnimationEnd}\n                        timeout={{}}\n                        unmountOnExit\n                    >\n                        <div\n                            aria-busy={isBusy}\n                            className=\"checkout-view-content\"\n                            ref={contentRef}\n                        >\n                            {isActive ? children : null}\n                        </div>\n                    </CSSTransition>\n                )}\n            </MobileView>\n        </li>\n    );\n};\n\nexport default CheckoutStep;\n","enum CheckoutStepType {\n    Billing = 'billing',\n    Customer = 'customer',\n    Payment = 'payment',\n    Shipping = 'shipping',\n}\n\nexport default CheckoutStepType;\n","import { type Cart, type StoreConfig } from '@bigcommerce/checkout-sdk';\n\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\n    if (!cart) {\n        return false;\n    }\n\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\n        return true;\n    }\n\n    if (config && cart.lineItems.customItems\n    ) {\n        return cart.lineItems.customItems.length > 0;\n    }\n\n    return false;\n};\n\nexport default itemsRequireShipping;\n","import { type CheckoutPayment, type CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n    hasSelectedShippingOptions,\n    hasUnassignedLineItems,\n    itemsRequireShipping,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n// In this step, we require that the customer strategy be reloaded the first time.\nconst getStripeLinkAndCheckoutPageIsReloaded = (\n    isUsingWallet: boolean,\n    hasEmail: boolean,\n    isGuest: boolean,\n    shouldUseStripeLinkByMinimumAmount: boolean,\n    providerWithCustomCheckout?: string | null,\n) => {\n    return !isUsingWallet && providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount;\n}\n\nconst getCustomerStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => data.getPaymentProviderCustomer(),\n    (checkout, customer, billingAddress, config, cart, paymentProviderCustomer) => {\n        const hasEmail = !!(\n            (customer && customer.email) ||\n            (billingAddress && billingAddress.email)\n        );\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment: CheckoutPayment) => SUPPORTED_METHODS.includes(payment.providerId),\n                  )\n                : false;\n        const isGuest = !!(customer && customer.isGuest);\n        const isComplete = hasEmail || isUsingWallet;\n        const isEditable = isComplete && !isUsingWallet && isGuest;\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\n            isUsingWallet,\n            hasEmail,\n            isGuest,\n            cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\n            config?.checkoutSettings.providerWithCustomCheckout,\n        );\n\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n            return {\n                type: CheckoutStepType.Customer,\n                isActive: false,\n                isComplete: paymentProviderCustomer?.stripeLinkAuthenticationState !== undefined,\n                isEditable,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Customer,\n            isActive: false,\n            isComplete,\n            isEditable,\n            isRequired: true,\n        };\n    },\n);\n\nconst getBillingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => {\n        const billingAddress = data.getBillingAddress();\n\n        return billingAddress\n            ? data.getBillingAddressFields(billingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (checkout, billingAddress, billingAddressFields, config) => {\n        const hasAddress = billingAddress\n            ? isValidAddress(billingAddress, billingAddressFields)\n            : false;\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.includes(payment.providerId),\n                  )\n                : false;\n        const isComplete = hasAddress || isUsingWallet;\n        const isUsingAmazonPay =\n            checkout && checkout.payments\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n                : false;\n\n        if (isUsingAmazonPay) {\n            const billingAddressCustomFields = billingAddressFields.filter(\n                ({ custom }: { custom: boolean }) => custom,\n            );\n            const hasCustomFields = billingAddressCustomFields.length > 0;\n            const isAmazonPayBillingStepComplete =\n                billingAddress && hasCustomFields\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\n                    : true;\n\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: isAmazonPayBillingStepComplete,\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n                isRequired: true,\n            };\n        }\n\n        const isGooglePayBillingAddressEditingEnabled = isExperimentEnabled(\n            config?.checkoutSettings,\n            'STRIPE-546.allow_billing_address_editing_for_all_Google_Pay_providers',\n        );\n        const isUsingGooglePay =\n            isGooglePayBillingAddressEditingEnabled && (checkout && checkout.payments\n                ? checkout.payments.some((payment) => (payment?.providerId || '').startsWith('googlepay'))\n                : false);\n\n        if (isUsingGooglePay) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        const isUsingPaypal =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment) =>\n                        [\n                            'braintreepaypal',\n                            'braintreepaypalcredit',\n                            'braintreevenmo',\n                            'paypalcommerce',\n                            'paypalcommercecredit',\n                            'paypalcommercevenmo'\n                        ]\n                            .includes(payment.providerId))\n                : false;\n\n        if (isUsingPaypal) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Billing,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && !isUsingWallet,\n            isRequired: true,\n        };\n    },\n);\n\nconst getShippingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => {\n        const shippingAddress = data.getShippingAddress();\n\n        return shippingAddress\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n        const hasAddress = shippingAddress\n            ? isValidAddress(shippingAddress, shippingAddressFields)\n            : false;\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n        const hasUnassignedItems =\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n        const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n        const isRequired = itemsRequireShipping(cart, config);\n        const isCustomShippingSelected =\n            isExperimentEnabled(\n                config?.checkoutSettings,\n                'PROJECT-5015.manual_order.display_custom_shipping',\n            ) &&\n            hasOptions &&\n            consignments?.some(\n                ({ selectedShippingOption }) => selectedShippingOption?.type === 'custom',\n            );\n\n        return {\n            type: CheckoutStepType.Shipping,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && isRequired && !isCustomShippingSelected,\n            isRequired,\n        };\n    },\n);\n\nconst getPaymentStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getOrder(),\n    (order) => {\n        const isComplete = order ? order.isComplete : false;\n\n        return {\n            type: CheckoutStepType.Payment,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getOrderSubmitStatus = createSelector(\n    ({ statuses }: CheckoutSelectors) => statuses.isSubmittingOrder(),\n    (status) => status,\n);\n\nconst getCheckoutStepStatuses = createSelector(\n    getCustomerStepStatus,\n    getShippingStepStatus,\n    getBillingStepStatus,\n    getPaymentStepStatus,\n    getOrderSubmitStatus,\n    (customerStep, shippingStep, billingStep, paymentStep, orderStatus) => {\n        const isSubmittingOrder = orderStatus;\n\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\n\n        const defaultActiveStep =\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n        return steps.map((step, index) => {\n            const isPrevStepComplete = steps\n                .slice(0, index)\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n            return {\n                ...step,\n                isActive: defaultActiveStep.type === step.type,\n                isBusy: false,\n                // A step is only editable if its previous step is complete or not required\n                isEditable: isPrevStepComplete && step.isEditable && !isSubmittingOrder,\n            };\n        });\n    },\n);\n\nexport default getCheckoutStepStatuses;\n","import {\n    type Address,\n    type Cart,\n    type CartChangedError,\n    type CheckoutParams,\n    type CheckoutSelectors,\n    type CheckoutStoreSelector,\n    type Consignment,\n    type EmbeddedCheckoutMessenger,\n    type EmbeddedCheckoutMessengerOptions,\n    ExtensionRegion,\n    type FlashMessage,\n    type PaymentMethod,\n    type Promotion,\n    type RequestOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, type ReactNode } from 'react';\n\nimport { type AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { Extension, type ExtensionContextProps, withExtension } from '@bigcommerce/checkout/checkout-extension';\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport {\n    AddressFormSkeleton,\n    CartSummarySkeleton,\n    ChecklistSkeleton,\n    LazyContainer,\n    LoadingNotification,\n    OrderConfirmationPageSkeleton\n} from '@bigcommerce/checkout/ui';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n    CheckoutButtonContainer,\n    CheckoutSuggestion,\n    Customer,\n    CustomerInfo,\n    type CustomerSignOutEvent,\n    CustomerViewType,\n} from '../customer';\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\nimport { SubscribeSessionStorage } from '../customer/SubscribeSessionStorage';\nimport { type EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping, ShippingSummary } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport type CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport type CheckoutSupport from './CheckoutSupport';\nimport mapToCheckoutProps from './mapToCheckoutProps';\n\nconst Billing = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"billing\" */\n                '../billing/Billing'\n                ),\n    ),\n);\n\nconst CartSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary\" */\n                '../cart/CartSummary'\n                ),\n    ),\n);\n\nconst CartSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary-drawer\" */\n                '../cart/CartSummaryDrawer'\n                ),\n    ),\n);\n\nconst Payment = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"payment\" */\n                '../payment/Payment'\n                ),\n    ),\n);\n\nconst Shipping = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"shipping\" */\n                '../shipping/Shipping'\n                ),\n    ),\n);\n\nexport interface CheckoutProps {\n    checkoutId: string;\n    containerId: string;\n    data?: CheckoutStoreSelector;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    themeV2?:boolean;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n    activeStepType?: CheckoutStepType;\n    isBillingSameAsShipping: boolean;\n    customerViewType?: CustomerViewType;\n    defaultStepType?: CheckoutStepType;\n    error?: Error;\n    flashMessages?: FlashMessage[];\n    isMultiShippingMode: boolean;\n    isCartEmpty: boolean;\n    isRedirecting: boolean;\n    hasSelectedShippingOptions: boolean;\n    isSubscribed: boolean;\n    buttonConfigs: PaymentMethod[];\n}\n\nexport interface WithCheckoutProps {\n    billingAddress?: Address;\n    cart?: Cart;\n    consignments?: Consignment[];\n    data: CheckoutStoreSelector;\n    error?: Error;\n    hasCartChanged: boolean;\n    flashMessages?: FlashMessage[];\n    isGuestEnabled: boolean;\n    isLoadingCheckout: boolean;\n    isPending: boolean;\n    isPriceHiddenFromGuests: boolean;\n    isShowingWalletButtonsOnTop: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n    loginUrl: string;\n    cartUrl: string;\n    createAccountUrl: string;\n    promotions?: Promotion[];\n    steps: CheckoutStepStatus[];\n    clearError(error?: Error): void;\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n    loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n}\n\nclass Checkout extends Component<\n    CheckoutProps &\n    WithCheckoutProps &\n    WithLanguageProps &\n    AnalyticsContextProps &\n    ExtensionContextProps,\n    CheckoutState\n> {\n    state: CheckoutState = {\n        isBillingSameAsShipping: true,\n        isCartEmpty: false,\n        isRedirecting: false,\n        isMultiShippingMode: false,\n        hasSelectedShippingOptions: false,\n        isSubscribed: false,\n        buttonConfigs: [],\n    };\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n    private unsubscribeFromConsignments?: () => void;\n\n    componentWillUnmount(): void {\n        if (this.unsubscribeFromConsignments) {\n            this.unsubscribeFromConsignments();\n            this.unsubscribeFromConsignments = undefined;\n        }\n\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\n        this.handleBeforeExit();\n    }\n\n    async componentDidMount(): Promise<void> {\n        const {\n            analyticsTracker,\n            containerId,\n            createEmbeddedMessenger,\n            data,\n            embeddedStylesheet,\n            extensionService,\n            loadPaymentMethodByIds,\n            subscribeToConsignments,\n        } = this.props;\n\n        try {\n            const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\n\n            const supportedProviders = getSupportedMethodIds(providers);\n\n            if (providers.length > 0) {\n                const configs = await loadPaymentMethodByIds(supportedProviders);\n\n                this.setState({\n                    buttonConfigs: configs.data.getPaymentMethods() || [],\n                });\n            }\n\n            extensionService.preloadExtensions();\n\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n            const errorFlashMessages = data.getFlashMessages('error') || [];\n\n            if (errorFlashMessages.length) {\n                const { language } = this.props;\n\n                this.setState({\n                    error: new CustomError({\n                        title:\n                            errorFlashMessages[0].title ||\n                            language.translate('common.error_heading'),\n                        message: errorFlashMessages[0].message,\n                        data: {},\n                        name: 'default',\n                    }),\n                });\n            }\n\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n            this.unsubscribeFromConsignments = subscribeToConsignments(\n                this.handleConsignmentsUpdated,\n            );\n            this.embeddedMessenger = messenger;\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n            messenger.postFrameLoaded({ contentId: containerId });\n            messenger.postLoaded();\n\n            if (document.prerendering) {\n                document.addEventListener('prerenderingchange', () => {\n                    analyticsTracker.checkoutBegin();\n                }, { once: true });\n            }\n            else {\n                analyticsTracker.checkoutBegin();\n            }\n\n            const consignments = data.getConsignments();\n            const cart = data.getCart();\n\n            const hasMultiShippingEnabled =\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n            const checkoutBillingSameAsShippingEnabled =\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n            const defaultNewsletterSignupOption =\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\n                false;\n            const isMultiShippingMode =\n                !!cart &&\n                !!consignments &&\n                hasMultiShippingEnabled &&\n                isUsingMultiShipping(consignments, cart.lineItems);\n\n            this.setState({\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n                isSubscribed: defaultNewsletterSignupOption,\n            });\n\n            if (isMultiShippingMode) {\n                this.setState({ isMultiShippingMode });\n            }\n\n            window.addEventListener('beforeunload', this.handleBeforeExit);\n\n            this.handleReady();\n        } catch (error) {\n            if (error instanceof Error) {\n                this.handleUnhandledError(error);\n            }\n        }\n    }\n\n    render(): ReactNode {\n        const { error, isRedirecting } = this.state;\n        const { themeV2 } = this.props;\n\n        if(isRedirecting){\n            return <OrderConfirmationPageSkeleton />;\n        }\n\n        let errorModal = null;\n\n        if (error) {\n            if (isCustomError(error)) {\n                errorModal = (\n                    <ErrorModal\n                        error={error}\n                        onClose={this.handleCloseErrorModal}\n                        title={error.title}\n                    />\n                );\n            } else {\n                errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\n            }\n        }\n\n\n        return (\n            <div className={classNames('remove-checkout-step-numbers', { 'is-embedded': isEmbedded() }, { 'themeV2': themeV2 })} data-test=\"checkout-page-container\" id=\"checkout-page-container\">\n                <div className=\"layout optimizedCheckout-contentPrimary\">\n                    {this.renderContent()}\n                </div>\n                {errorModal}\n            </div>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop, extensionState } = this.props;\n\n        const { activeStepType, defaultStepType, isCartEmpty } = this.state;\n\n        if (isCartEmpty) {\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n        }\n\n        const isPaymentStepActive = activeStepType\n            ? activeStepType === CheckoutStepType.Payment\n            : defaultStepType === CheckoutStepType.Payment;\n\n        return (\n            <>\n                <div className=\"layout-main\">\n                    <LoadingNotification isLoading={extensionState.isShowingLoadingIndicator} />\n\n                    {/* <Extension region={ExtensionRegion.GlobalWebWorker} /> */}\n                    <PromotionBannerList promotions={promotions} />\n\n                    {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\n                        <CheckoutButtonContainer\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\n                            isPaymentStepActive={isPaymentStepActive}\n                            onUnhandledError={this.handleUnhandledError}\n                            onWalletButtonClick={this.handleWalletButtonClick}\n                        />\n                    )}\n\n                    <ol className=\"checkout-steps\">\n                        {steps\n                            .filter((step) => step.isRequired)\n                            .map((step) =>\n                                this.renderStep({\n                                    ...step,\n                                    isActive: activeStepType\n                                        ? activeStepType === step.type\n                                        : defaultStepType === step.type,\n                                    isBusy: isPending,\n                                }),\n                            )}\n                    </ol>\n                </div>\n                {this.renderCartSummary()}\n            </>\n        );\n    }\n\n    private renderStep(step: CheckoutStepStatus): ReactNode {\n        switch (step.type) {\n            case CheckoutStepType.Customer:\n                return this.renderCustomerStep(step);\n\n            case CheckoutStepType.Shipping:\n                return this.renderShippingStep(step);\n\n            case CheckoutStepType.Billing:\n                return this.renderBillingStep(step);\n\n            case CheckoutStepType.Payment:\n                return this.renderPaymentStep(step);\n\n            default:\n                return null;\n        }\n    }\n\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n        const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\n        const {\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n            isSubscribed,\n        } = this.state;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                suggestion={<CheckoutSuggestion />}\n                summary={\n                    <CustomerInfo\n                        onSignOut={this.handleSignOut}\n                        onSignOutError={this.handleError}\n                    />\n                }\n            >\n                <Customer\n                    checkEmbeddedSupport={this.checkEmbeddedSupport}\n                    isEmbedded={isEmbedded()}\n                    isSubscribed={isSubscribed}\n                    isWalletButtonsOnTop = {isShowingWalletButtonsOnTop }\n                    onAccountCreated={this.navigateToNextIncompleteStep}\n                    onChangeViewType={this.setCustomerViewType}\n                    onContinueAsGuest={this.navigateToNextIncompleteStep}\n                    onContinueAsGuestError={this.handleError}\n                    onReady={this.handleReady}\n                    onSignIn={this.navigateToNextIncompleteStep}\n                    onSignInError={this.handleError}\n                    onSubscribeToNewsletter={this.handleNewsletterSubscription}\n                    onUnhandledError={this.handleUnhandledError}\n                    onWalletButtonClick={this.handleWalletButtonClick}\n                    step={step}\n                    viewType={customerViewType}\n                />\n            </CheckoutStep>\n        );\n    }\n\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\n        const { hasCartChanged, cart, consignments = [], isShippingDiscountDisplayEnabled } = this.props;\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\n\n        if (!cart) {\n            return;\n        }\n\n        const setIsMultishippingMode = (value: boolean) => {\n            this.setState({ isMultiShippingMode: value });\n        }\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={<ShippingSummary cart={cart} consignments={consignments} isMultiShippingMode={isMultiShippingMode} isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}/>}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Shipping\n                        cartHasChanged={hasCartChanged}\n                        isBillingSameAsShipping={isBillingSameAsShipping}\n                        isMultiShippingMode={isMultiShippingMode}\n                        navigateNextStep={this.handleShippingNextStep}\n                        onCreateAccount={this.handleShippingCreateAccount}\n                        onReady={this.handleReady}\n                        onSignIn={this.handleShippingSignIn}\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\n                        onUnhandledError={this.handleUnhandledError}\n                        setIsMultishippingMode={setIsMultishippingMode}\n                        step={step}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n        const { billingAddress } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Billing\n                        navigateNextStep={this.navigateToNextIncompleteStep}\n                        onReady={this.handleReady}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n        const { consignments, cart, errorLogger } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n            >\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n                    <Payment\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\n                        errorLogger={errorLogger}\n                        isEmbedded={isEmbedded()}\n                        isUsingMultiShipping={\n                            cart && consignments\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\n                                : false\n                        }\n                        onCartChangedError={this.handleCartChangedError}\n                        onFinalize={this.navigateToOrderConfirmation}\n                        onReady={this.handleReady}\n                        onSubmit={this.navigateToOrderConfirmation}\n                        onSubmitError={this.handleError}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderCartSummary(): ReactNode {\n        const { isMultiShippingMode } = this.state;\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer loadingSkeleton={<></>}>\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                                <CartSummaryDrawer isMultiShippingMode={isMultiShippingMode} />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <LazyContainer loadingSkeleton={<CartSummarySkeleton />}>\n                            <aside className=\"layout-cart\">\n                                    <CartSummary isMultiShippingMode={isMultiShippingMode} />\n                                    <Extension region={ExtensionRegion.SummaryAfter} />\n                            </aside>\n                        </LazyContainer>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n        const { clearError, error, steps } = this.props;\n        const { activeStepType } = this.state;\n        const step = find(steps, { type });\n\n        if (!step) {\n            return;\n        }\n\n        if (activeStepType === step.type) {\n            return;\n        }\n\n        if (options && options.isDefault) {\n            this.setState({ defaultStepType: step.type });\n        } else {\n            // TODO: setting activeStepType here is causing significant delay in rendering guest shopper form\n            // When converting functional component, we should set activeStepType before rendering <CheckoutPage />\n            this.setState({ activeStepType: step.type });\n        }\n\n        if (error) {\n            clearError(error);\n        }\n    }\n\n    private handleToggleMultiShipping: () => void = () => {\n        const { isMultiShippingMode } = this.state;\n\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\n    };\n\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\n        options,\n    ) => {\n        const { steps, analyticsTracker } = this.props;\n        const activeStepIndex = findIndex(steps, { isActive: true });\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n        if (!activeStep) {\n            return;\n        }\n\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n        if (previousStep) {\n            analyticsTracker.trackStepCompleted(previousStep.type);\n        }\n\n        this.navigateToStep(activeStep.type, options);\n    };\n\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n        const { steps, analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postComplete();\n        }\n\n        SubscribeSessionStorage.removeSubscribeStatus();\n\n        this.setState({ isRedirecting: true }, () => {\n            navigateToOrderConfirmation(orderId);\n        });\n    };\n\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n        const { embeddedSupport } = this.props;\n\n        return embeddedSupport.isSupported(...methodIds);\n    };\n\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\n        this.navigateToStep(CheckoutStepType.Shipping);\n    };\n\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType, defaultStepType } =\n            this.state;\n\n        const { steps } = this.props;\n\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\n            data.getConsignments() || [],\n        );\n\n        const isDefaultStepPaymentOrBilling =\n            !activeStepType &&\n            (defaultStepType === CheckoutStepType.Payment ||\n                defaultStepType === CheckoutStepType.Billing);\n\n        const isShippingStepFinished =\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\n            findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n        if (\n            prevHasSelectedShippingOptions &&\n            !newHasSelectedShippingOptions &&\n            isShippingStepFinished\n        ) {\n            this.navigateToStep(CheckoutStepType.Shipping);\n            this.setState({ error: new ShippingOptionExpiredError() });\n        }\n\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n    };\n\n    private handleCloseErrorModal: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepViewed(type);\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        this.handleError(error);\n\n        // For errors that are not caught and handled by child components, we\n        // handle them here by displaying a generic error modal to the shopper.\n        this.setState({ error });\n    };\n\n    private handleError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n        this.navigateToStep(type);\n    };\n\n    private handleReady: () => void = () => {\n        this.navigateToNextIncompleteStep({ isDefault: true });\n    };\n\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n        this.setState({ isSubscribed: subscribed });\n    }\n\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\n\n        if (isPriceHiddenFromGuests) {\n            if (window.top) {\n                return (window.top.location.href = cartUrl);\n            }\n        }\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postSignedOut();\n        }\n\n        if (isGuestEnabled) {\n            this.setCustomerViewType(CustomerViewType.Guest);\n        }\n\n        if (isCartEmpty) {\n            this.setState({ isCartEmpty: true });\n\n            if (!isEmbedded()) {\n                if (window.top) {\n                    return window.top.location.assign(loginUrl);\n                }\n            }\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n    };\n\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\n        isBillingSameAsShipping,\n    ) => {\n        this.setState({ isBillingSameAsShipping });\n\n        if (isBillingSameAsShipping) {\n            this.navigateToNextIncompleteStep();\n        } else {\n            this.navigateToStep(CheckoutStepType.Billing);\n        }\n    };\n\n    private handleShippingSignIn: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.Login);\n    };\n\n    private handleShippingCreateAccount: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\n    };\n\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n        const { createAccountUrl } = this.props;\n\n        if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n            if (window.top) {\n                window.top.location.replace(createAccountUrl);\n            }\n\n            return;\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n        this.setState({ customerViewType });\n    };\n\n    private handleBeforeExit: () => void = () => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.exitCheckout();\n    }\n\n    private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.walletButtonClick(methodName);\n    }\n}\n\nexport default withExtension(\n    withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\n);\n","import { type CheckoutSelectors, type CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\n\nimport { type WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n    const { data, errors, statuses } = checkoutState;\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\n    const {\n        checkoutSettings: {\n            guestCheckoutEnabled: isGuestEnabled = false,\n            checkoutUserExperienceSettings = {\n                walletButtonsOnTop: false,\n                floatingLabelEnabled: false,\n            },\n        } = {},\n        links: {\n            loginLink: loginUrl = '',\n            createAccountLink: createAccountUrl = '',\n            cartLink: cartUrl = '',\n        } = {},\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n    } = data.getConfig() || {};\n\n    const subscribeToConsignmentsSelector = createSelector(\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n        },\n    );\n\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop);\n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        data.getConfig()?.checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return {\n        billingAddress: data.getBillingAddress(),\n        cart: data.getCart(),\n        clearError: checkoutService.clearError,\n        data,\n        consignments: data.getConsignments(),\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n        isGuestEnabled,\n        isLoadingCheckout: statuses.isLoadingCheckout(),\n        isShippingDiscountDisplayEnabled,\n        isPending: statuses.isPending(),\n        isPriceHiddenFromGuests,\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n        loadCheckout: checkoutService.loadCheckout,\n        loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\n        loginUrl,\n        cartUrl,\n        createAccountUrl,\n        promotions,\n        subscribeToConsignments: subscribeToConsignmentsSelector({\n            checkoutService,\n            checkoutState,\n        }),\n        steps: getCheckoutStepStatuses(checkoutState),\n    };\n}\n","import { useEffect, useState } from 'react';\n\nimport { useExtensions } from '@bigcommerce/checkout/checkout-extension';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nexport const useLoadCheckout = (checkoutId: string): {isLoadingCheckout: boolean} => {\n    const [ isLoadingCheckout, setIsLoadingCheckout ] = useState(true);\n    const { checkoutService } = useCheckout();\n    const { extensionService } = useExtensions();\n\n    const fetchData = async () => {\n        await Promise.all([\n            checkoutService.loadCheckout(checkoutId, {\n                params: {\n                    include: [\n                        'cart.lineItems.physicalItems.categoryNames',\n                        'cart.lineItems.digitalItems.categoryNames',\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n                },\n            }),\n            extensionService.loadExtensions(),\n        ]);\n    };\n\n    const fetchDataWithRetry = async (maxRetries = 3): Promise<void> => {\n        const attemptFetch = async (attemptSequence = 1): Promise<void> => {\n            try {\n                await fetchData();\n            } catch {\n                if (attemptSequence >= maxRetries) {\n                    throw new Error('Failed to load checkout after 3 attempts, please try again.');\n                }\n\n                const delay = attemptSequence ** 2 * 1000;\n\n                await new Promise(resolve => setTimeout(resolve, delay));\n\n                await attemptFetch(attemptSequence + 1);\n            }\n        };\n\n        await attemptFetch();\n    };\n\n    useEffect(() => {\n        fetchDataWithRetry()\n            .then(() => setIsLoadingCheckout(false))\n            .catch((error) => {\n                throw error;\n            });\n    }, []);\n\n    return  { isLoadingCheckout };\n};\n","import CheckoutIntermediate from './CheckoutIntermediate';\n\nexport default CheckoutIntermediate;\nexport { CheckoutProps, CheckoutState, WithCheckoutProps } from './CheckoutPage';\n","import {\n    type EmbeddedCheckoutMessenger,\n    type EmbeddedCheckoutMessengerOptions\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { CheckoutPageSkeleton, useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { type EmbeddedCheckoutStylesheet } from '../embeddedCheckout';\n\nimport CheckoutPage from './CheckoutPage';\nimport type CheckoutSupport from './CheckoutSupport';\nimport { useLoadCheckout } from './hooks';\n\ninterface CheckoutIntermediateProps {\n    checkoutId: string;\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nconst CheckoutIntermediate:React.FC<CheckoutIntermediateProps>= (props) => {\n    const { checkoutId } = props;\n    const { isLoadingCheckout } = useLoadCheckout(checkoutId);\n    const { themeV2 } = useThemeContext();\n\n    if (isLoadingCheckout) {\n        return <CheckoutPageSkeleton />;\n    }\n\n    return <CheckoutPage\n            {...props}\n            createEmbeddedMessenger={props.createEmbeddedMessenger}\n            embeddedStylesheet={props.embeddedStylesheet}\n            embeddedSupport={props.embeddedSupport}\n            errorLogger={props.errorLogger}\n            themeV2={themeV2}\n        />;\n};\n\nexport default CheckoutIntermediate;\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport type { BrowserOptions } from '@sentry/browser';\nimport React, { type ReactElement, useEffect, useMemo } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\nimport { ThemeProvider } from '@bigcommerce/checkout/ui';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nconst CheckoutApp = (props: CheckoutAppProps): ReactElement => {\n    const { containerId, sentryConfig, publicPath, sentrySampleRate } = props;\n\n    const checkoutService = useMemo(() => createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    }), []);\n    const embeddedStylesheet = useMemo(() => createEmbeddedCheckoutStylesheet(), []);\n    const embeddedSupport = useMemo(() => createEmbeddedCheckoutSupport(getLanguageService()), []);\n    const errorLogger = useMemo(() => createErrorLogger(\n        { sentry: sentryConfig },\n        {\n            errorTypes: ['UnrecoverableError'],\n            publicPath,\n            sampleRate: sentrySampleRate || 0.1,\n        },\n    ), []);\n\n    useEffect(() => {\n        ReactModal.setAppElement(`#${containerId}`);\n    }, []);\n\n    return (\n        <ErrorBoundary logger={errorLogger}>\n            <LocaleProvider checkoutService={checkoutService}>\n                <CheckoutProvider checkoutService={checkoutService}>\n                    <AnalyticsProvider checkoutService={checkoutService}>\n                        <ExtensionProvider\n                            checkoutService={checkoutService}\n                            errorLogger={createErrorLogger()}\n                        >\n                            <ThemeProvider>\n                                <Checkout\n                                    {...props}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={embeddedStylesheet}\n                                    embeddedSupport={embeddedSupport}\n                                    errorLogger={errorLogger}\n                                />\n                            </ThemeProvider>\n                        </ExtensionProvider>\n                    </AnalyticsProvider>\n                </CheckoutProvider>\n            </LocaleProvider>\n        </ErrorBoundary>\n    );\n};\n\nexport default CheckoutApp;\n","import { isFunction, noop } from 'lodash';\nimport React, {\n    createContext,\n    type FunctionComponent,\n    memo,\n    type ReactNode,\n    useMemo,\n    useState,\n} from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import { type Consignment, type LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import classNames from 'classnames';\nimport React, { forwardRef, type Ref } from 'react';\n\nimport { Input, type InputProps } from '../Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            themeV2 = false,\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n                { 'floating-form-field-input': themeV2 && isFloatingLabelEnabled },\n                { 'body-regular': themeV2 && !isFloatingLabelEnabled },\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","import { type FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    type ArraySchema,\n    date,\n    number,\n    type NumberSchema,\n    object,\n    type ObjectSchema,\n    type Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '@bigcommerce/checkout/ui';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.CHECKBOX) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.CHECKBOX\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                    // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, type ReactNode, useId } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n    children?: ReactNode;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => {\n    const describedBy = useId();\n\n    return (\n        <div\n            aria-describedby={describedBy}\n            className={classNames(\n                'alertBox',\n                additionalClassName,\n                { 'alertBox--info': type === AlertType.Info || !type },\n                { 'alertBox--error': type === AlertType.Error },\n                { 'alertBox--success': type === AlertType.Success },\n                { 'alertBox--warning': type === AlertType.Warning },\n            )}\n            data-test={testId}\n        >\n            <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n            <div\n                aria-live={type === AlertType.Error ? 'assertive' : 'polite'}\n                className=\"alertBox-column alertBox-message\"\n                id={describedBy}\n                role={type === AlertType.Error ? 'alert' : 'status'}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default Alert;\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, type InputHTMLAttributes, type Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled &&\n                            !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import { PaymentMethodId } from './paymentMethod';\n\nexport default function getProviderWithCustomCheckout(methodId?: string | null): string | undefined {\n    if (!methodId) {\n        return undefined;\n    }\n\n    if (methodId === PaymentMethodId.PaypalCommerce || methodId === PaymentMethodId.PaypalCommerceCreditCards) {\n        return PaymentMethodId.PayPalCommerceAcceleratedCheckout;\n    }\n\n    if (methodId === PaymentMethodId.Braintree) {\n        return PaymentMethodId.BraintreeAcceleratedCheckout;\n    }\n\n    return methodId;\n}\n","import React, { memo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Toggle } from '../../ui/toggle';\n\ninterface ShippingOptionAdditionalDescriptionProps {\n    description: string;\n}\n\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\n    ShippingOptionAdditionalDescriptionProps\n> = ({ description }) => {\n    const CHRACTER_LIMIT = 45;\n\n    return (\n        <div className=\"shippingOption-additionalDescription--container\">\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\n                {({ isOpen, toggle }) => (\n                    <>\n                        <span\n                            className={`shippingOption-additionalDescription ${\n                                isOpen\n                                    ? 'shippingOption-additionalDescription--expanded'\n                                    : 'shippingOption-additionalDescription--collapsed'\n                            }`}\n                        >\n                            {description}\n                        </span>\n                        {!isOpen && (\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\n                                <TranslatedString id=\"common.show_more\" />\n                            </a>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        </div>\n    );\n};\n\nexport default memo(ShippingOptionAdditionalDescription);\n","import { type ShippingOption } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { ShopperCurrency } from '../../currency';\n\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\nimport './StaticShippingOption.scss';\n\ninterface StaticShippingOptionProps {\n    displayAdditionalInformation?: boolean;\n    method: ShippingOption;\n    shippingCostAfterDiscount?: number;\n}\n\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\n    displayAdditionalInformation = true,\n    method,\n    shippingCostAfterDiscount,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderShippingPrice = () => {\n        if (shippingCostAfterDiscount !== undefined && shippingCostAfterDiscount !== method.cost) {\n            return (\n                <>\n                    <span className=\"shippingOption-price-before-discount\">\n                        <ShopperCurrency amount={method.cost} />\n                    </span>\n                    <ShopperCurrency amount={shippingCostAfterDiscount} />\n                </>\n            );\n        }\n\n        return (\n            <ShopperCurrency amount={method.cost} />\n        )\n\n    }\n\n    return (\n        <div className=\"shippingOption shippingOption--alt\" data-test=\"static-shipping-option\">\n            {method.imageUrl && (\n                <span className=\"shippingOption-figure\">\n                    <img\n                        alt={method.description}\n                        className=\"shippingOption-img\"\n                        src={method.imageUrl}\n                    />\n                </span>\n            )}\n            <span className={classNames('shippingOption-desc', { 'body-medium': themeV2 })}>\n                {method.description}\n                {method.transitTime && (\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\n                )}\n                {method.additionalDescription && displayAdditionalInformation && (\n                    <ShippingOptionAdditionalDescription\n                        description={method.additionalDescription}\n                    />\n                )}\n            </span>\n            <span className={classNames('shippingOption-price', { 'body-medium': themeV2 })}>\n                {renderShippingPrice()}\n            </span>\n        </div>\n    );\n};\n\nexport default StaticShippingOption;\n","import { type Cart } from '@bigcommerce/checkout-sdk';\n\nexport default function isBuyNowCart(cart?: Cart): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n    const params = new URLSearchParams(window.location.search);\n\n    return (\n        cart?.source === 'BUY_NOW' ||\n        params.get('action') === 'buy' ||\n        !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout')\n    );\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import React, { type FunctionComponent } from 'react';\n\nimport { withCurrency, type WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nexport interface ShopperCurrencyProps {\n    amount: number;\n}\n\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\n    amount,\n    currency,\n}) => <>{currency.toCustomerCurrency(amount)}</>;\n\nexport default withCurrency(ShopperCurrency);\n","import classNames from 'classnames';\nimport React, { type FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, type LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(<div key={`checklist-skeleton-item${i}`} />);\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import { type Cart, type Consignment, type PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport { compact, find, isNil, map } from 'lodash';\n\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\n    return compact(\n        map(consignment.lineItemIds, (itemId) =>\n            find(\n                cart.lineItems.physicalItems,\n                (item) => item.id === itemId && isNil(item.parentId),\n            ),\n        ),\n    );\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, type LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading,\n    renderWhileLoading,\n}) => {\n    const skeleton = (\n        <>\n            <div className=\"address-form-skeleton\">\n                <div className=\"label\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name\" />\n                <div className=\"name\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"address\" />\n            </div>\n        </>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import { createInjectHoc, type InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithDateProps {\n    date: {\n        inputFormat: string;\n    };\n}\n\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'withDate',\n    pickProps: (value, key) => key === 'date' && !!value,\n});\n\nexport default withDate;\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import classNames from 'classnames';\nimport React, { forwardRef, type Ref, type TextareaHTMLAttributes } from 'react';\n\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n    additionalClassName?: string;\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextArea = forwardRef(\n    (\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\n        ref: Ref<HTMLTextAreaElement>,\n    ) => {\n        return (\n            <textarea\n                {...rest}\n                className={\n                    className ||\n                    classNames(\n                        { 'floating-textarea': isFloatingLabelEnabled },\n                        'form-input',\n                        'optimizedCheckout-form-input',\n                        additionalClassName,\n                    )\n                }\n                data-test={testId}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default TextArea;\n","import { type FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isDate, noop } from 'lodash';\nimport React, { type FunctionComponent, lazy, memo, Suspense, useCallback } from 'react';\n\nimport { withDate, type WithDateProps } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown } from '../../icon';\nimport { CheckboxInput } from '../CheckboxInput';\nimport { type InputProps } from '../Input';\nimport { RadioInput } from '../RadioInput';\nimport { TextArea } from '../TextArea';\nimport { TextInput } from '../TextInput';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\n\nconst ReactDatePicker = lazy(\n    () =>\n        import(\n            /* webpackChunkName: \"react-datepicker\" */\n            'react-datepicker'\n        ),\n);\n\nexport interface DynamicInputProps extends InputProps {\n    id: string;\n    additionalClassName?: string;\n    value?: string | string[];\n    rows?: number;\n    fieldType?: DynamicFormFieldType;\n    options?: FormFieldItem[];\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n    inputDateFormat?: string;\n}\n\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\n    fieldType,\n    id,\n    name,\n    onChange = noop,\n    options,\n    placeholder,\n    value,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n    date,\n    inputDateFormat,\n    ...rest\n}) => {\n    const inputFormat = inputDateFormat || date.inputFormat || '';\n\n    const handleDateChange = useCallback(\n        (dateValue: string, event: any) =>\n            onChange({\n                ...event,\n                target: {\n                    name,\n                    value: dateValue,\n                },\n            }),\n        [onChange, name],\n    );\n\n    switch (fieldType) {\n        case DynamicFormFieldType.DROPDOWM:\n            return (\n                <>\n                    <div\n                        className={classNames(\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\n                        )}\n                    >\n                        <IconChevronDown />\n                    </div>\n                    <select\n                        {...(rest as any)}\n                        className={classNames(\n                            { 'floating-select': isFloatingLabelEnabled },\n                            'form-select optimizedCheckout-form-select',\n                            { 'floating-form-field-input': themeV2 },\n                        )}\n                        data-test={`${id}-select`}\n                        id={id}\n                        name={name}\n                        onChange={onChange}\n                        value={value ?? ''}\n                    >\n                        {!!placeholder && <option value=\"\">{placeholder}</option>}\n                        {options &&\n                            options.map(({ label, value: optionValue }) => (\n                                <option key={optionValue} value={optionValue}>\n                                    {label}\n                                </option>\n                            ))}\n                    </select>\n                </>\n            );\n\n        case DynamicFormFieldType.RADIO:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <RadioInput\n                            {...rest}\n                            checked={optionValue === value}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-radio`}\n                            themeV2={themeV2}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.CHECKBOX:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <CheckboxInput\n                            {...rest}\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-checkbox`}\n                            themeV2={themeV2}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.DATE:\n            return (\n                <Suspense>\n                    <ReactDatePicker\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        {...(rest as any)}\n                        autoComplete=\"off\"\n                        // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\n                        // https://github.com/Hacker0x01/react-datepicker/issues/1357\n                        // onChangeRaw={ rest.onChange }\n                        calendarClassName=\"optimizedCheckout-contentPrimary\"\n                        className={classNames('form-input optimizedCheckout-form-input', {\n                            'floating-input': isFloatingLabelEnabled,\n                            'floating-form-field-input': themeV2,\n                        })}\n                        dateFormat={inputFormat}\n                        maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\n                        minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\n                        name={name}\n                        onChange={handleDateChange}\n                        placeholderText={inputFormat.toUpperCase()}\n                        popperClassName=\"optimizedCheckout-contentPrimary\"\n                        selected={isDate(value) ? value : undefined}\n                    />\n                </Suspense>\n            );\n\n        case DynamicFormFieldType.MULTILINE:\n            return (\n                <TextArea\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    {...(rest as any)}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    testId={`${id}-text`}\n                    themeV2={themeV2}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n\n        default:\n            return (\n                <TextInput\n                    {...rest}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    testId={`${id}-${\n                        fieldType === DynamicFormFieldType.PASSWORD ? 'password' : 'text'\n                    }`}\n                    themeV2={themeV2}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n    }\n};\n\nexport default memo(withDate(DynamicInput));\n","import { isEmpty, pickBy } from 'lodash';\nimport React, {\n    type ComponentType,\n    type Context,\n    type FunctionComponent,\n    memo,\n    useContext,\n} from 'react';\n\nimport type InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import { type CurrencyService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, type InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithCurrencyProps {\n    currency: CurrencyService;\n}\n\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithCurrency',\n    pickProps: (value, key) => key === 'currency' && !!value,\n});\n\nexport default withCurrency;\n","import type CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { type Address, type AddressKey, type FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '@bigcommerce/checkout/ui';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    const fieldValue = address && address[name];\n\n                    addressFormValues[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    )?.toString() || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.DATE && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.DATE) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.CHECKBOX) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import { type FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n    themeV2?: boolean;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        (props: FieldProps<string>) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label && (typeof label === 'function' ? label(name) : label)}\n                {labelContent && !label && (\n                    <Label\n                        additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import {\n  ErrorLevelType,\n  type ErrorLogger,\n  type ErrorMeta,\n  type ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import { getScriptLoader } from '@bigcommerce/script-loader';\nimport type {\n    BrowserOptions,\n    ErrorEvent,\n    EventHint,\n    Exception,\n    SeverityLevel,\n    StackFrame,\n} from '@sentry/browser';\n\nimport {\n    ErrorLevelType,\n    type ErrorLogger,\n    type ErrorMeta,\n    type ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport type ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n    private dsn: string;\n    private loaderPromise?: Promise<void>;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n        this.dsn = config.dsn || '';\n\n        window.sentryOnLoad = async () => {\n            Sentry.init({\n                sampleRate,\n                beforeSend: this.handleBeforeSend.bind(this),\n                denyUrls: [\n                    ...(config.denyUrls || []),\n                    'polyfill~checkout',\n                ],\n                integrations: [\n                    Sentry.globalHandlersIntegration({\n                        onerror: false,\n                        onunhandledrejection: true,\n                    }),\n                ],\n                ...config,\n            });\n\n            const rewriteFramesIntegration = await Sentry.lazyLoadIntegration('rewriteFramesIntegration');\n\n            Sentry.addIntegration(rewriteFramesIntegration({\n                iteratee: this.handleRewriteFrame.bind(this),\n            }));\n        };\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        this.loadSentry().then(() => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            Sentry.captureException(error, {\n                tags: { errorCode },\n                level: this.mapToSentryLevel(level),\n                extra: payload,\n                fingerprint: ['{{ default }}'],\n            });\n        });\n    }\n\n    private loadSentry(): Promise<void> {\n        if (this.loaderPromise) {\n            return this.loaderPromise;\n        }\n\n        const key = /https:\\/\\/(.+)@.+\\//.exec(this.dsn)?.[1] ?? '';\n\n        this.loaderPromise = getScriptLoader().loadScript(`https://js.sentry-cdn.com/${key}.min.js`, {\n            attributes: {\n                crossorigin: 'anonymous',\n            },\n            async: false,\n        });\n\n        return this.loaderPromise;\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX) || frame.filename?.startsWith(this.publicPath),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: ErrorEvent, hint: EventHint) => ErrorEvent | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  type ErrorLogger,\n  type ErrorLoggerOptions,\n  type ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","import { createRequestSender, type RequestSender } from '@bigcommerce/request-sender';\n\nimport { type CreatedCustomer, type CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { type FieldProps } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface PasswordField {\n    minLength: number;\n}\n\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\n    const renderPasswordInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const renderPasswordConfirmationInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const passwordLabelContent = useMemo(\n        () => (\n            <>\n                <TranslatedString id=\"customer.password_label\" />{' '}\n                <small>\n                    {`${minLength}-`}\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\n                </small>\n            </>\n        ),\n        [minLength],\n    );\n\n    const passwordConfirmationLabelContent = useMemo(\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\n        [],\n    );\n\n    return (\n        <>\n            <FormField\n                input={renderPasswordInput}\n                labelContent={passwordLabelContent}\n                name=\"password\"\n            />\n\n            <FormField\n                input={renderPasswordConfirmationInput}\n                labelContent={passwordConfirmationLabelContent}\n                name=\"confirmPassword\"\n            />\n        </>\n    );\n};\n\nexport default memo(SignUpPasswordField);\n","import { type FormikProps, withFormik } from 'formik';\nimport React, { type FunctionComponent, memo } from 'react';\nimport { object, ref, string } from 'yup';\n\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { type PasswordRequirements } from '../customer';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport SignUpPasswordField from './SignUpPasswordField';\n\nexport interface SignUpFormProps {\n    isSigningUp?: boolean;\n    customerCanBeCreated: boolean;\n    passwordRequirements: PasswordRequirements;\n    onSignUp(data: SignUpFormValues): void;\n}\n\nexport interface SignUpFormValues {\n    password: string;\n    confirmPassword: string;\n}\n\nconst GuestSignUpForm: FunctionComponent<\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\n    <Fieldset\n        legend={\n            <Legend>\n                <TranslatedString\n                    id={\n                        customerCanBeCreated\n                            ? 'customer.create_account_text'\n                            : 'customer.set_password_text'\n                    }\n                />\n            </Legend>\n        }\n    >\n        {!customerCanBeCreated && (\n            <p>\n                <TranslatedString id=\"customer.account_created_text\" />\n            </p>\n        )}\n\n        <Form className=\"guest-signup form\">\n            <SignUpPasswordField minLength={minLength} />\n\n            <div className=\"form-actions\">\n                <Button\n                    id=\"createAccountButton\"\n                    isLoading={isSigningUp}\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString\n                        id={\n                            customerCanBeCreated\n                                ? 'customer.create_account_action'\n                                : 'customer.set_password_action'\n                        }\n                    />\n                </Button>\n            </div>\n        </Form>\n    </Fieldset>\n);\n\nexport default withLanguage(\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\n        mapPropsToValues: () => ({\n            password: '',\n            confirmPassword: '',\n        }),\n        handleSubmit: (values, { props: { onSignUp } }) => {\n            onSignUp(values);\n        },\n        validationSchema: ({\n            language,\n            passwordRequirements: { description, numeric, alpha, minLength },\n        }: SignUpFormProps & WithLanguageProps) =>\n            object({\n                password: string()\n                    .required(description || language.translate('customer.password_required_error'))\n                    .matches(\n                        numeric,\n                        description ||\n                            language.translate('customer.password_number_required_error'),\n                    )\n                    .matches(\n                        alpha,\n                        description ||\n                            language.translate('customer.password_letter_required_error'),\n                    )\n                    .min(\n                        minLength,\n                        description ||\n                            language.translate('customer.password_under_minimum_length_error'),\n                    )\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\n                confirmPassword: string()\n                    .required(language.translate('customer.password_confirmation_required_error'))\n                    .oneOf(\n                        [ref('password')],\n                        language.translate('customer.password_confirmation_error'),\n                    ),\n            }),\n    })(memo(GuestSignUpForm)),\n);\n","import React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.set_password_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default PasswordSavedSuccessAlert;\n","import React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst SignedUpSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.create_account_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default SignedUpSuccessAlert;\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationRequirementsError extends CustomError {\n    constructor(data: Error, requirements: string) {\n        super({\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\n            message: requirements,\n            title: getLanguageService().translate(\n                'customer.create_account_requirements_error_heading',\n            ),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationFailedError extends CustomError {\n    constructor(data: Error) {\n        super({\n            name: 'ACCOUNT_CREATION_FAILED',\n            message: getLanguageService().translate('customer.create_account_error'),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\n    }\n}\n","import { type GatewayOrderPayment, type Order, type OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isGiftCertificatePayment } from '../giftCertificate';\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport interface PaymentInstructionsProps {\n    order: Order;\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\n}\n\nfunction getPaymentInstructions(order: Order): string {\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\n\n    return instructions || '';\n}\n\nexport default getPaymentInstructions;\n","import { type GiftCertificate, type OrderPayments } from '@bigcommerce/checkout-sdk';\n\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\n\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\n        code: detail.code,\n        remaining: detail.remaining,\n        used: amount,\n        balance: amount + detail.remaining,\n        purchaseDate: '',\n    }));\n}\n","import { type OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\n    return (payments || [])\n        .filter(isStoreCreditPayment)\n        .reduce((total, payment) => total + payment.amount, 0);\n}\n","import { type Order } from '@bigcommerce/checkout-sdk';\n\nimport { mapFromPayments } from '../giftCertificate';\n\nimport getOrderShippingCostAfterAutomaticDiscount from './getOrderShippingCostAfterAutomaticDiscount';\nimport getStoreCreditAmount from './getStoreCreditAmount';\nimport { type OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    baseAmount,\n    discountAmount,\n    isTaxIncluded,\n    shippingCostBeforeDiscount,\n    payments,\n    handlingCostTotal,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n    consignments,\n}: Order,\nisShippingDiscountDisplayEnabled: boolean,\n): OrderSummarySubtotalsProps {\n\n    const shippingAmount = isShippingDiscountDisplayEnabled && consignments.shipping.length > 0\n    ? getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments.shipping)\n    : shippingCostBeforeDiscount;\n\n    return {\n        subtotalAmount: baseAmount,\n        shippingAmount,\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled ? shippingCostBeforeDiscount : undefined,\n        giftWrappingAmount: giftWrappingCostTotal,\n        discountAmount,\n        storeCreditAmount: getStoreCreditAmount(payments),\n        handlingAmount: handlingCostTotal,\n        coupons,\n        giftCertificates: payments && mapFromPayments(payments),\n        taxes,\n        isTaxIncluded,\n        fees,\n    };\n}\n","import { type OrderShippingConsignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: OrderShippingConsignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: OrderShippingConsignment) {\n    return consignment.discounts\n    .filter(discount => !discount.code)\n    .reduce((total, discount) => total + discount.amount, 0);\n}\n","import React, { type FunctionComponent } from 'react';\n\nconst OrderConfirmationSection: FunctionComponent<{ children?: React.ReactNode }> = ({ children }) => (\n    <section className=\"orderConfirmation-section\">{children}</section>\n);\n\nexport default OrderConfirmationSection;\n","import React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface MandateTextComponentProps {\n    mandateText: {\n        [key: string]: string;\n    },\n    methodId: string;\n    providerId: string;\n}\n\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\n    mandateText,\n    providerId,\n    methodId,\n}) => {\n    if (!Object.keys(mandateText).length) {\n        return null;\n    }\n\n    return (\n        <ul data-test='order-confirmation-mandate-text-list'>\n            {Object.entries(mandateText).map((field, index) => {\n                return (\n                    <li data-test={`order-confirmation-mandate-text-list-item-${index}`} key={index}>\n                        <TranslatedString\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\n                        />:\n                        <b>\n                            {` ${field[1]}`}\n                        </b>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n","import { type GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { MandateTextComponent } from './MandateTextComponent';\n\nexport interface PaymentsWithMandatesProps {\n    paymentsWithMandates: GatewayOrderPayment[];\n}\n\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\n    paymentsWithMandates,\n}) => <>\n    {paymentsWithMandates.map((payment) => {\n        if (payment?.mandate?.url) {\n            return (\n                <a\n                    data-test=\"order-confirmation-mandate-link-text\"\n                    href={payment.mandate.url}\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TranslatedString\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </a>\n            );\n        } else if (payment?.mandate?.id) {\n            return (\n                <p\n                    data-test=\"order-confirmation-mandate-id-text\"\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                >\n                    <TranslatedString\n                        data={{ mandate: payment.mandate.id }}\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </p>\n            );\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\n            return <MandateTextComponent\n                key='mandateTextList'\n                mandateText={payment.mandate.mandateText}\n                methodId={payment.methodId}\n                providerId={payment.providerId}\n            />\n        }\n    })}\n</>\n","import { type GatewayOrderPayment, type GiftCertificateOrderPayment, type Order, type StoreConfig } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\n\nexport interface OrderStatusProps {\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber?: string;\n    order: Order;\n}\n\ntype PaymentWithMandate = GatewayOrderPayment &\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\n\nconst isPaymentWithMandate = (\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\n\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\n    config,\n    order,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\n\n    return (\n        <OrderConfirmationSection>\n            {order.orderId && (\n                <p data-test=\"order-confirmation-order-number-text\">\n                    <TranslatedHtml\n                        data={{ orderNumber: order.orderId }}\n                        id=\"order_confirmation.order_number_text\"\n                    />\n                </p>\n            )}\n\n            <p data-test=\"order-confirmation-order-status-text\">\n                <OrderStatusMessage\n                    config={config}\n                    orderNumber={order.orderId}\n                    orderStatus={order.status}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n            </p>\n            <PaymentsWithMandates\n                paymentsWithMandates={paymentsWithMandates}\n            />\n            {order.hasDigitalItems && (\n                <p data-test=\"order-confirmation-digital-items-text\">\n                    <TranslatedHtml\n                        id={\n                            order.isDownloadable\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\n                        }\n                    />\n                </p>\n            )}\n        </OrderConfirmationSection>\n    );\n};\n\ninterface OrderStatusMessageProps {\n    config: StoreConfig;\n    orderNumber: number;\n    orderStatus: string;\n    supportEmail?: string;\n    supportPhoneNumber?: string;\n}\n\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\n    config,\n    orderNumber,\n    orderStatus,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    switch (orderStatus) {\n        case 'MANUAL_VERIFICATION_REQUIRED':\n        case 'AWAITING_PAYMENT':\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\n\n        case 'PENDING':\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_pending_status_text\"\n                />\n            );\n\n        case 'INCOMPLETE':\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\n                return (\n                    <TranslatedHtml\n                        data={{ orderNumber, supportEmail }}\n                        id=\"order_confirmation.order_pending_status_text\"\n                    />\n                );\n            }\n\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_incomplete_status_text\"\n                />\n            );\n\n        default:\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\n                    id={\n                        supportPhoneNumber\n                            ? 'order_confirmation.order_with_support_number_text'\n                            : 'order_confirmation.order_without_support_number_text'\n                    }\n                />\n            );\n    }\n};\n\nexport default memo(OrderStatus);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPrint: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconPrint);\n","import { throttle } from 'lodash';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconPrint } from '../ui/icon';\n\nexport interface PrintLinkProps {\n    className?: string;\n}\n\nconst PRINT_MODAL_THROTTLE = 500;\n\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\n    const handleClick = useCallback(\n        throttle(() => {\n            window.print();\n        }, PRINT_MODAL_THROTTLE),\n        [],\n    );\n\n    if (typeof window.print !== 'function') {\n        return null;\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            href=\"#\"\n            id=\"cart-print-link\"\n            onClick={preventDefault(handleClick)}\n        >\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\n        </a>\n    );\n};\n\nexport default memo(PrintLink);\n","import React, { type FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    children: React.ReactNode;\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import {\n    type CheckoutSelectors,\n    type EmbeddedCheckoutMessenger,\n    type EmbeddedCheckoutMessengerOptions,\n    type Order,\n    type ShopperConfig,\n    type StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport React, { Component, lazy, type ReactNode } from 'react';\n\nimport { type AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { CartSummarySkeleton, LazyContainer, OrderConfirmationPageSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport { ErrorModal } from '../common/error';\nimport { isExperimentEnabled, retry } from '../common/utility';\nimport { getPasswordRequirementsFromConfig } from '../customer';\nimport { type EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport {\n    type CreatedCustomer,\n    GuestSignUpForm,\n    PasswordSavedSuccessAlert,\n    SignedUpSuccessAlert,\n    type SignUpFormValues,\n} from '../guestSignup';\nimport {\n    AccountCreationFailedError,\n    AccountCreationRequirementsError,\n} from '../guestSignup/errors';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { MobileView } from '../ui/responsive';\n\nimport getPaymentInstructions from './getPaymentInstructions';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport OrderStatus from './OrderStatus';\nimport PrintLink from './PrintLink';\nimport ThankYouHeader from './ThankYouHeader';\n\nconst OrderSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary\" */\n                './OrderSummary'\n            ),\n    ),\n);\n\nconst OrderSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary-drawer\" */\n                './OrderSummaryDrawer'\n            ),\n    ),\n);\n\nexport interface OrderConfirmationState {\n    error?: Error;\n    hasSignedUp?: boolean;\n    isSigningUp?: boolean;\n}\n\nexport interface OrderConfirmationProps {\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    errorLogger: ErrorLogger;\n    orderId: number;\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\ninterface WithCheckoutOrderConfirmationProps {\n    order?: Order;\n    config?: StoreConfig;\n    loadOrder(orderId: number): Promise<CheckoutSelectors>;\n    isLoadingOrder(): boolean;\n}\n\nclass OrderConfirmation extends Component<\n    OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\n    OrderConfirmationState\n> {\n    state: OrderConfirmationState = {};\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n\n    componentDidMount(): void {\n        const {\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            loadOrder,\n            orderId,\n            analyticsTracker\n        } = this.props;\n\n        loadOrder(orderId)\n            .then(({ data }) => {\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n                this.embeddedMessenger = messenger;\n\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n                messenger.postFrameLoaded({ contentId: containerId });\n\n                analyticsTracker.orderPurchased();\n            })\n            .catch(this.handleUnhandledError);\n    }\n\n    render(): ReactNode {\n        const { order, config, isLoadingOrder } = this.props;\n\n        if (!order || !config || isLoadingOrder()) {\n            return <OrderConfirmationPageSkeleton />;\n        }\n\n        const paymentInstructions = getPaymentInstructions(order);\n        const {\n            storeProfile: { orderEmail, storePhoneNumber },\n            shopperConfig,\n            links: { siteLink },\n        } = config;\n\n        return (\n            <div\n                className={classNames('layout optimizedCheckout-contentPrimary', {\n                    'is-embedded': isEmbedded(),\n                })}\n            >\n                <div className=\"layout-main\">\n                    <div className=\"orderConfirmation\">\n                        <ThankYouHeader name={order.billingAddress.firstName} />\n\n                        <OrderStatus\n                            config={config}\n                            order={order}\n                            supportEmail={orderEmail}\n                            supportPhoneNumber={storePhoneNumber}\n                        />\n\n                        {paymentInstructions && (\n                            <OrderConfirmationSection>\n                                <div\n                                    dangerouslySetInnerHTML={{\n                                        __html: DOMPurify.sanitize(paymentInstructions),\n                                    }}\n                                    data-test=\"payment-instructions\"\n                                />\n                            </OrderConfirmationSection>\n                        )}\n\n                        {this.renderGuestSignUp({\n                            shouldShowPasswordForm: order.customerCanBeCreated,\n                            customerCanBeCreated: !order.customerId,\n                            shopperConfig,\n                        })}\n\n                        <div className=\"continueButtonContainer\">\n                            <form action={siteLink} method=\"get\" target=\"_top\">\n                                <Button type=\"submit\" variant={ButtonVariant.Secondary}>\n                                    <TranslatedString id=\"order_confirmation.continue_shopping\" />\n                                </Button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n\n                {this.renderOrderSummary()}\n                {this.renderErrorModal()}\n            </div>\n        );\n    }\n\n    private renderGuestSignUp({\n        customerCanBeCreated,\n        shouldShowPasswordForm,\n        shopperConfig,\n    }: {\n        customerCanBeCreated: boolean;\n        shouldShowPasswordForm: boolean;\n        shopperConfig: ShopperConfig;\n    }): ReactNode {\n        const { isSigningUp, hasSignedUp } = this.state;\n\n        const { order } = this.props;\n\n        return (\n            <>\n                {shouldShowPasswordForm && !hasSignedUp && (\n                    <GuestSignUpForm\n                        customerCanBeCreated={customerCanBeCreated}\n                        isSigningUp={isSigningUp}\n                        onSignUp={this.handleSignUp}\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\n                    />\n                )}\n\n                {hasSignedUp &&\n                    (order?.customerId ? <PasswordSavedSuccessAlert /> : <SignedUpSuccessAlert />)}\n            </>\n        );\n    }\n\n    private renderOrderSummary(): ReactNode {\n        const { order, config } = this.props;\n\n        if (!order || !config) {\n            return null;\n        }\n\n        const { currency, shopperCurrency, checkoutSettings } = config;\n\n        const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n            checkoutSettings,\n            'PROJECT-6643.enable_shipping_discounts_in_orders',\n        );\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer loadingSkeleton={<></>}>\n                                <OrderSummaryDrawer\n                                    {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                                    headerLink={\n                                        <PrintLink className=\"modal-header-link cart-modal-link\" />\n                                    }\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <LazyContainer loadingSkeleton={<CartSummarySkeleton />}>\n                            <aside className=\"layout-cart\">\n                                <OrderSummary\n                                    headerLink={<PrintLink />}\n                                    {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </aside>\n                        </LazyContainer>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private renderErrorModal(): ReactNode {\n        const { error } = this.state;\n\n        return (\n            <ErrorModal\n                error={error}\n                onClose={this.handleErrorModalClose}\n                shouldShowErrorCode={false}\n            />\n        );\n    }\n\n    private handleErrorModalClose: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleSignUp: (values: SignUpFormValues) => void = ({ password, confirmPassword }) => {\n        const { createAccount, config } = this.props;\n\n        const shopperConfig = config && config.shopperConfig;\n        const passwordRequirements =\n            (shopperConfig &&\n                shopperConfig.passwordRequirements &&\n                shopperConfig.passwordRequirements.error) ||\n            '';\n\n        this.setState({\n            isSigningUp: true,\n        });\n\n        createAccount({\n            password,\n            confirmPassword,\n        })\n            .then(() => {\n                this.setState({\n                    hasSignedUp: true,\n                    isSigningUp: false,\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error:\n                        error.status < 500\n                            ? new AccountCreationRequirementsError(error, passwordRequirements)\n                            : new AccountCreationFailedError(error),\n                    hasSignedUp: false,\n                    isSigningUp: false,\n                });\n            });\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        this.setState({ error });\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n}\n\nexport function mapToOrderConfirmationProps(\n    context: CheckoutContextProps,\n): WithCheckoutOrderConfirmationProps | null {\n    const {\n        checkoutState: {\n            data: { getOrder, getConfig },\n            statuses: { isLoadingOrder },\n        },\n        checkoutService,\n    } = context;\n\n    const config = getConfig();\n    const order = getOrder();\n\n    return {\n        config,\n        isLoadingOrder,\n        loadOrder: checkoutService.loadOrder,\n        order,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport type { BrowserOptions } from '@sentry/browser';\nimport React, { Component, type ReactNode } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\nimport { ThemeProvider } from '@bigcommerce/checkout/ui';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, type CreatedCustomer, type SignUpFormValues } from '../guestSignup';\n\nimport OrderConfirmation from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\n    private accountService = new AccountService();\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render(): ReactNode {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider checkoutService={this.checkoutService} errorLogger={createErrorLogger()}>\n                                <ThemeProvider>\n                                    <OrderConfirmation\n                                        {...this.props}\n                                        createAccount={this.createAccount}\n                                        createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                        embeddedStylesheet={this.embeddedStylesheet}\n                                        errorLogger={this.errorLogger}\n                                    />\n                                </ThemeProvider>\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\n        password,\n        confirmPassword,\n    }) => {\n        const { orderId } = this.props;\n\n        return this.accountService.create({\n            orderId,\n            newsletter: false,\n            password,\n            confirmPassword,\n        });\n    };\n}\n\nexport default OrderConfirmationApp;\n","import { type CheckoutSelectors, type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, {\n    type ReactElement,\n    type ReactNode,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\n\nimport CheckoutContext from './CheckoutContext';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nconst CheckoutProvider = ({ checkoutService, children }: CheckoutProviderProps): ReactElement => {\n    const [checkoutState, setCheckoutState] = useState<CheckoutSelectors>(() =>\n        checkoutService.getState(),\n    );\n    const unsubscribeRef = useRef<(() => void) | undefined>();\n\n    const contextValue = useMemo(\n        () => ({\n            checkoutService,\n            checkoutState,\n        }),\n        [checkoutService, checkoutState],\n    );\n\n    useEffect(() => {\n        unsubscribeRef.current = checkoutService.subscribe((newCheckoutState) =>\n            setCheckoutState(newCheckoutState),\n        );\n\n        return () => {\n            if (unsubscribeRef.current) {\n                unsubscribeRef.current();\n                unsubscribeRef.current = undefined;\n            }\n        };\n    }, [checkoutService]);\n\n    return <CheckoutContext.Provider value={contextValue}>{children}</CheckoutContext.Provider>;\n};\n\nexport default CheckoutProvider;\n","import { type CustomerPasswordRequirements, type ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","import React, { type FunctionComponent, type ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n    children?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '0%', top: '-300%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport React, { forwardRef, type ReactNode, type Ref } from 'react';\n\nimport Input, { type InputProps } from '../Input/Input';\nimport Label from '../Label/Label';\n\nexport interface RadioInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst RadioInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            label,\n            value,\n            checked,\n            id,\n            themeV2 = false,\n            ...rest\n        }: RadioInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                checked={checked}\n                className={classNames(\n                    'form-radio',\n                    'optimizedCheckout-form-radio',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"radio\"\n                value={value}\n            />\n            <Label additionalClassName={themeV2 ? 'body-regular' : ''} htmlFor={id}>\n                {label}\n            </Label>\n        </>\n    ),\n);\n\nexport default RadioInput;\n","import { type Consignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: Consignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: Consignment) {\n    return consignment.discounts.reduce((discountTotal, discount) => {\n        return discount.type === 'AUTOMATIC' ? discountTotal + discount.amount : discountTotal;\n    }, 0);\n}\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    BigCommercePaymentsPayPal = 'bigcommerce_payments_paypal',\n    BigCommercePaymentsPayLater = 'bigcommerce_payments_paylater',\n    BigCommercePaymentsCreditCards = 'bigcommerce_payments_creditcards',\n    BigCommercePaymentsAlternativeMethod = 'bigcommerce_payments_apms',\n    BigCommercePaymentsVenmo = 'bigcommerce_payments_venmo',\n    BigCommercePaymentsFastLane = 'bigcommerce_payments_fastlane',\n    BigCommercePaymentsGooglePay = 'googlepay_bigcommerce_payments',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    Ratepay = 'ratepay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeOCSGooglePay = 'googlepaystripeocs',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n    TdOnlineMartGooglePay = 'googlepaytdonlinemart',\n}\n\nexport default PaymentMethodId;\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, type LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    additionalClassName?: string;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    additionalClassName,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label',\n            additionalClassName,\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import { type CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName: string, methodId: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n    walletButtonClick(methodId: string): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","import { Field, type FieldConfig, type FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    createElement,\n    type FunctionComponent,\n    memo,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest}>{renderInnerField}</Field>;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId, meta }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    meta={meta}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\nconst InnerFieldInput: FunctionComponent<InnerFieldInputProps> = ({\n    field,\n    onChange = noop,\n    component = 'input',\n    render,\n    ...props\n}) => {\n    const prevValueRef = useRef<unknown>(field.value);\n\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const comparableValue = isDate(field.value) ? field.value.getTime() : field.value;\n        const comparablePrevValue = isDate(prevValueRef.current)\n            ? prevValueRef.current.getTime()\n            : prevValueRef.current;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(field.value);\n        }\n\n        prevValueRef.current = field.value;\n    }, [field.value, onChange]);\n\n    if (render) {\n        return render({ field, ...props });\n    }\n\n    if (typeof component === 'string') {\n        return createElement(component, field);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return createElement(component as any, { field, ...props });\n};\n\nexport default memo(BasicFormField);\n","import { ErrorMessage } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '../contexts';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const renderMessage = useCallback(\n        (message: string) => (\n            <ul className=\"form-field-errors\" data-test={testId}>\n                <li className=\"form-field-error\">\n                    <label\n                        aria-live=\"polite\"\n                        className=\"form-inlineMessage\"\n                        htmlFor={name}\n                        id={errorId}\n                        role=\"alert\"\n                    >\n                        {message}\n                    </label>\n                </li>\n            </ul>\n        ),\n        [errorId, name, testId],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) =>\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\n            }\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import { type FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback } from 'react';\n\nimport { BasicFormField } from '../BasicFormField';\nimport { FormFieldError } from '../FormFieldError';\nimport { Label } from '../Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        (props: FieldProps<string>) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label !== undefined && (typeof label === 'function' ? label(name) : label)}\n                {labelContent !== undefined && !label && (\n                    <Label\n                        additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [isFloatingLabelEnabled, input, label, name, labelContent, themeV2, id, footer],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { type RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { type ReactElement, type ReactNode, type SyntheticEvent } from 'react';\n\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isHtmlError from './isHtmlError';\nimport isRequestError from './isRequestError';\n\nimport { type CustomError } from './index';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError | CustomError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nconst ErrorModal = ({\n    error,\n    message = error && error.message,\n    onClose = noop,\n    shouldShowErrorCode = true,\n    title = error && isCustomError(error) && error.title,\n}: ErrorModalProps): ReactElement => {\n    const aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    const handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n\n    const renderHeader = (): ReactNode => (\n        <ModalHeader>\n            <IconError\n                additionalClassName=\"icon--error modal-header-icon\"\n                size={IconSize.Small}\n            />\n            <span aria-live=\"assertive\" role=\"alert\">\n                {title || <TranslatedString id=\"common.error_heading\" />}\n            </span>\n        </ModalHeader>\n    );\n\n    const renderBody = (): ReactNode => (\n        <>\n            {error && isHtmlError(error) &&\n                <TranslatedHtml id={error.data.translationKey} />\n            }\n            {message && (\n                <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                    {message}\n                </p>\n            )}\n\n            <div className=\"optimizedCheckout-contentSecondary\">{renderErrorCode()}</div>\n        </>\n    );\n\n    const renderFooter = (): ReactNode => (\n        <Button onClick={handleOnRequestClose} size={ButtonSize.Small}>\n            <TranslatedString id=\"common.ok_action\" />\n        </Button>\n    );\n\n    const renderErrorCode = (): ReactNode => {\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    };\n\n    return (\n        <Modal\n            additionalModalClassName=\"modal--error\"\n            aria={aria}\n            footer={renderFooter()}\n            header={renderHeader()}\n            isOpen={!!error}\n            onRequestClose={handleOnRequestClose}\n        >\n            {renderBody()}\n        </Modal>\n    );\n};\n\nexport default ErrorModal;\n","import { type CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\n\nexport default function isHtmlError(error: Error): error is CustomError {\n\n    return 'type' in error &&\n        error.type === 'custom' &&\n        'data' in error &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        'shouldBeTranslatedAsHtml' in error.data &&\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\n}\n","import { type Address, type FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(\n    address: Address,\n    formFields: FormField[],\n): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, type ObjectSchema, string, type StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    type FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label, maxLength }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name}));\n                }\n\n                if ((name === 'address1' || name === 'address2') && maxLength) {\n                    schema[name] = schema[name]\n                        .max(maxLength, translate('max', { label, name, max: maxLength }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n                // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { type FormField, type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { type ObjectSchema } from 'yup';\n\nimport {\n    type FormFieldValues,\n    getFormFieldsValidationSchema,\n    type TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_min_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","enum DynamicFormFieldType {\n    TELEPHONE = 'tel',\n    DROPDOWM = 'dropdown',\n    NUMBER = 'number',\n    PASSWORD = 'password',\n    CHECKBOX = 'checkbox',\n    MULTILINE = 'multiline',\n    DATE = 'date',\n    RADIO = 'radio',\n    TEXT = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, type InputHTMLAttributes, type Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalFastlane: FunctionComponent = () => (\n    <svg viewBox=\"0 0 101 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M.009 9.791 1.653.298C1.681.1 1.805 0 1.997 0H7.74c.22 0 .332.141.29.354l-.236 1.334c-.028.185-.152.298-.344.298H3.627l-.359 2.058h3.479c.22 0 .332.142.29.354l-.221 1.306C6.788 5.9 6.664 6 6.472 6H2.936l-.662 3.847c-.028.198-.152.298-.344.298H.298c-.22 0-.332-.142-.289-.354m6.78-1.49c0-1.844 1.905-2.468 3.906-2.71.234-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.035.269-1.23.796-.068.185-.18.27-.358.27H7.975c-.18 0-.304-.085-.304-.241 0-.044.014-.086.028-.128.441-1.334 1.67-2.186 3.507-2.186s2.843.71 2.843 2.428c0 .326-.04.739-.11 1.122l-.373 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.11.341-.318.341h-1.283c-.192 0-.304-.1-.304-.282 0-.17.04-.37.069-.554-.524.539-1.2.978-2.402.978-1.42 0-2.332-.725-2.332-1.986zm5.036-1.205.054-.256-.372.041c-.746.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.504-.78 1.725-1.773zm2.446 1.36c-.04-.17-.07-.297-.07-.438 0-.242.124-.313.318-.313h1.588c.192 0 .29.1.332.298.152.554.607.795 1.284.795.773 0 1.186-.326 1.186-.751 0-.369-.415-.54-1.104-.752l-.813-.256c-1.173-.369-2.14-.795-2.14-2.115 0-1.603 1.475-2.483 3.423-2.483 1.519 0 2.762.412 3.12 1.986.015.07.029.141.029.226 0 .142-.124.198-.318.198h-1.504c-.18 0-.276-.085-.36-.27-.165-.37-.538-.596-1.13-.596-.691 0-1.036.27-1.036.653s.332.554 1.284.852l.539.17c1.243.398 2.278.866 2.278 2.059 0 1.732-1.519 2.639-3.59 2.639-1.602 0-2.996-.468-3.313-1.902h-.005zm7.786.455c0-.269.04-.483.083-.725l.676-3.888h-.745c-.22 0-.332-.141-.29-.354l.166-.951c.029-.185.152-.298.344-.298h.8l.29-1.717c.028-.198.152-.298.344-.298h1.519c.22 0 .332.142.29.354l-.29 1.661h.966c.22 0 .332.142.29.356l-.166.951c-.029.186-.152.298-.345.298h-1.02l-.442 2.54c-.083.483-.152.851-.152 1.149 0 .468.152.624.47.624.124 0 .235-.015.318-.015.22 0 .29.17.249.383l-.152.922c-.055.356-.263.412-.76.412-1.297 0-2.443-.071-2.443-1.405m3.995.88 1.63-9.493C27.71.1 27.834 0 28.026 0h1.519c.22 0 .332.141.29.354l-1.643 9.493c-.028.198-.152.298-.344.298h-1.505c-.221 0-.332-.141-.29-.354zm3.147-1.49c0-1.844 1.905-2.468 3.906-2.71.235-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.034.269-1.229.796-.069.185-.18.27-.359.27h-1.407c-.18 0-.304-.085-.304-.241 0-.044.015-.086.028-.128.442-1.334 1.67-2.186 3.508-2.186 1.837 0 2.843.71 2.843 2.428 0 .326-.04.739-.112 1.122l-.372 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.111.341-.318.341h-1.284c-.192 0-.303-.1-.303-.282 0-.17.04-.37.068-.554-.524.539-1.2.978-2.401.978-1.422 0-2.333-.725-2.333-1.986V8.3m4.914-1.205.055-.256-.373.041c-.745.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.505-.78 1.725-1.773zm2.475 2.695 1.16-6.798c.028-.2.152-.298.344-.298h1.421c.22 0 .318.142.275.356l-.11.666c.357-.524 1.13-1.193 2.4-1.193 1.382 0 2.182.88 2.182 2.256 0 .269-.029.54-.083.866l-.731 4.2c-.028.198-.152.298-.344.298h-1.519c-.22 0-.332-.141-.29-.353l.566-3.25c.083-.482.11-.851.11-1.121 0-.766-.274-1.179-.95-1.179-.898 0-1.436.725-1.671 2.086l-.608 3.52c-.028.197-.152.297-.344.297h-1.519c-.22 0-.332-.141-.29-.353m8.063-2.824c0-2.384 1.588-4.456 4.35-4.456 2.14 0 3.45 1.22 3.45 3.42 0 .256-.014.483-.04.71-.028.2-.152.297-.344.297h-5.233c.028 1.051.496 1.689 1.56 1.689.538 0 .91-.198 1.214-.51a.47.47 0 0 1 .387-.186h1.67c.193 0 .305.057.305.2 0 .042-.015.1-.069.198-.705 1.25-1.836 2.071-3.671 2.071-2.098 0-3.576-1.178-3.576-3.434zm5.591-1.405c0-.908-.484-1.476-1.421-1.476-1.009 0-1.616.71-1.78 1.476h3.203zm34.293-.611-1.504 2.6-.764-2.579a.195.195 0 0 0-.185-.141h-1.355a.15.15 0 0 0-.14.195l1.367 4.343-1.236 2.046c-.06.099.009.227.123.227h1.462a.24.24 0 0 0 .206-.12l3.817-6.465a.148.148 0 0 0-.126-.225h-1.46a.23.23 0 0 0-.204.119zM62.935 12c-.135 0-.206-.063-.206-.168 0-.032.01-.074.03-.116l.66-1.613-1.947-5.21c-.03-.084-.052-.126-.052-.189 0-.105.083-.136.216-.136h.7c.135 0 .227.073.268.2l.937 2.816c.176.527.299.886.433 1.329h.02c.176-.517.268-.823.454-1.36l.957-2.785q.078-.202.278-.2h.629c.134 0 .227.041.227.147a.5.5 0 0 1-.052.169l-2.699 6.927c-.051.127-.134.19-.268.19h-.587zm-4.082-1.772c-.927 0-1.524-.422-1.833-.906v.537c0 .158-.083.243-.237.243h-.505c-.154 0-.237-.085-.237-.243V2.803c0-.158.083-.243.237-.243h.577c.154 0 .237.085.237.243v1.381c0 .38 0 .697-.01 1.086.308-.454.906-.875 1.761-.875 1.535 0 2.523 1.244 2.523 2.921s-1.03 2.911-2.513 2.911m-.205-.876c1.009 0 1.596-.801 1.596-2.025s-.597-2.035-1.606-2.035-1.606.855-1.606 2.035.597 2.025 1.617 2.025zm12.82-1.666c1.397 0 2.58-1.043 2.796-2.454.218-1.424-.87-2.666-2.408-2.67h-2.482a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.194zm1.1-2.52c-.082.527-.479.915-1.24.915h-.972l.294-1.916h.955c.788 0 1.044.475.962 1zm7.386-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.656 1.918 0 0-.638 1.929.803 2.988 0 0 1.336 1.019 2.842-.063l-.026.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.182.182 0 0 0-.178-.214zm-1.831 2.72c-.108.705-.675 1.225-1.4 1.225a1.3 1.3 0 0 1-.393-.058c-.537-.178-.844-.705-.757-1.28.108-.706.676-1.226 1.403-1.226q.216 0 .392.06c.54.178.843.707.755 1.28zm11.3.136c1.396 0 2.58-1.043 2.795-2.454.218-1.424-.87-2.666-2.408-2.67h-2.48a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.19v.002zm1.101-2.52c-.082.527-.478.915-1.239.915h-.972l.294-1.916h.955c.786 0 1.043.475.962 1zm7.387-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.655 1.918 0 0-.639 1.929.803 2.988 0 0 1.337 1.019 2.842-.063l-.027.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.183.183 0 0 0-.18-.214m-1.831 2.72c-.109.705-.674 1.225-1.4 1.225q-.216 0-.392-.058c-.537-.178-.845-.705-.757-1.28.108-.706.677-1.226 1.402-1.226q.216 0 .392.06c.537.178.843.707.756 1.28zm3.233-4.82L98.206 9.92a.18.18 0 0 0 .178.212h1.314a.2.2 0 0 0 .192-.169l1.107-7.19a.18.18 0 0 0-.178-.213h-1.315a.2.2 0 0 0-.191.17\"\n            fill=\"#333333\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalFastlane);\n","import React from 'react';\n\nimport { IconPayPalFastlane } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPayPalFastlaneLabel.scss';\n\nconst PoweredByPayPalFastlaneLabel = () => (\n    <div className=\"powered-by-paypal-fastlane\" data-test=\"paypal-fastlane-icon\">\n        <IconPayPalFastlane />\n    </div>\n);\n\nexport default PoweredByPayPalFastlaneLabel;\n","import classNames from 'classnames';\nimport React, { forwardRef, type ReactNode, type Ref } from 'react';\n\nimport Input, { type InputProps } from './Input';\nimport Label from './Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, testId, themeV2 = false, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                testId={testId}\n                type=\"checkbox\"\n            />\n            <Label additionalClassName={themeV2 ? 'body-regular' : ''} htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import { type FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport CheckboxInput from './CheckboxInput';\nimport FormFieldError from './FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n    testId?: string;\n    themeV2?: boolean;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n    testId,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                    testId={testId}\n                    themeV2={themeV2}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isPayPalFastlaneCustomer from './is-paypal-fastlane-customer';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\n\nconst usePayPalFastlaneAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getPaymentProviderCustomer } = checkoutState.data;\n    const paymentWithCustomCheckout: string =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const isPayPalFastlaneEnabled = isPayPalFastlaneMethod(paymentWithCustomCheckout);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const paymentProviderCustomer = getPaymentProviderCustomer() || undefined;\n    const paypalFastlaneCustomer = isPayPalFastlaneCustomer(paymentProviderCustomer)\n        ? paymentProviderCustomer\n        : {};\n\n    const customerAuthenticationState = paypalFastlaneCustomer.authenticationState;\n    const paypalFastlaneAddresses = paypalFastlaneCustomer.addresses || [];\n\n    const shouldShowPayPalFastlaneLabel =\n        paypalFastlaneAddresses.length > 0 && isPayPalFastlaneEnabled;\n\n    const shouldShowPayPalFastlaneShippingForm =\n        paypalFastlaneAddresses.length > 0 &&\n        customerAuthenticationState &&\n        customerAuthenticationState !== 'CANCELED' &&\n        customerAuthenticationState !== 'unrecognized';\n\n    return {\n        isPayPalFastlaneEnabled,\n        paypalFastlaneAddresses,\n        shouldShowPayPalFastlaneLabel,\n        shouldShowPayPalFastlaneShippingForm,\n    };\n};\n\nexport default usePayPalFastlaneAddress;\n","import { type CheckoutSelectors, type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import React, { type FunctionComponent, memo } from 'react';\nimport Media, { type MediaQueryObject, type MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\ninterface QueryResults {\n    [key: string]: boolean;\n}\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: QueryResults) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","/* istanbul ignore file */\n\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, memo, type MouseEvent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './MultiCheckboxControl.scss';\n\nexport interface MultiCheckboxControlProps {\n    testId?: string;\n    themeV2?: boolean;\n    onSelectedAll(): void;\n    onSelectedNone(): void;\n}\n\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\n    testId,\n    onSelectedAll,\n    onSelectedNone,\n    themeV2 = false,\n}) => {\n    const handleSelectAllClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedAll();\n        },\n        [onSelectedAll],\n    );\n\n    const handleSelectNoneClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedNone();\n        },\n        [onSelectedNone],\n    );\n\n    return (\n        <ul className={classNames('multiCheckbox--controls', { 'body-regular': themeV2 })}>\n            <li className=\"multiCheckbox--control\">\n                <TranslatedString id=\"address.select\" />\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-all-button`}\n                    href=\"#\"\n                    onClick={handleSelectAllClick}\n                >\n                    <TranslatedString id=\"address.select_all\" />\n                </a>\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-none-button`}\n                    href=\"#\"\n                    onClick={handleSelectNoneClick}\n                >\n                    <TranslatedString id=\"address.select_none\" />\n                </a>\n            </li>\n        </ul>\n    );\n};\n\nexport default memo(MultiCheckboxControl);\n","import { type FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport { FieldArray, type FieldArrayRenderProps, getIn } from 'formik';\nimport { difference, kebabCase, noop, pick } from 'lodash';\nimport React, {\n    type ChangeEvent,\n    type FunctionComponent,\n    memo,\n    type ReactNode,\n    useCallback,\n} from 'react';\n\nimport { FormFieldContainer } from '../FormFieldContainer';\nimport { FormFieldError } from '../FormFieldError';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport MultiCheckboxControl from './MultiCheckboxControl';\n\nexport interface CheckboxGroupFormFieldProps {\n    id: string;\n    label: ReactNode;\n    name: string;\n    options: FormFieldItem[];\n    themeV2?: boolean;\n    onChange?(values: string[]): void;\n}\n\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\n\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\n    form: { values, errors },\n    id,\n    label,\n    name,\n    onChange = noop,\n    options,\n    push,\n    remove,\n    themeV2,\n}) => {\n    const handleSelectAll = useCallback(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        difference(\n            options.map(({ value }) => value),\n            checkedValues,\n        ).forEach((val) => push(val));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, options, push, values]);\n\n    const handleSelectNone = useCallback(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        checkedValues.forEach(() => remove(0));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, remove, values]);\n\n    const handleInputChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const checkedValues: string[] = getIn(values, name) || [];\n            const { value, checked } = event.target;\n\n            if (checked) {\n                push(value);\n            } else {\n                remove(checkedValues.indexOf(value));\n            }\n\n            onChange(getIn(values, name));\n        },\n        [name, onChange, push, remove, values],\n    );\n\n    return (\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\n            {label}\n\n            {options.length > 1 && (\n                <MultiCheckboxControl\n                    onSelectedAll={handleSelectAll}\n                    onSelectedNone={handleSelectNone}\n                    testId={id}\n                    themeV2={themeV2}\n                />\n            )}\n\n            <DynamicInput\n                fieldType={DynamicFormFieldType.CHECKBOX}\n                id={id}\n                name={name}\n                onChange={handleInputChange}\n                options={options}\n                themeV2={themeV2}\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                value={getIn(values, name) || []}\n            />\n\n            <FormFieldError\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                errorId={`${id ?? name}-field-error-message`}\n                name={name}\n                testId={`${kebabCase(name)}-field-error-message`}\n            />\n        </FormFieldContainer>\n    );\n};\n\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\n    id,\n    label,\n    name,\n    onChange,\n    options,\n    themeV2,\n}) => {\n    const renderField = useCallback(\n        (renderProps: FieldArrayRenderProps) => (\n            <MultiCheckboxFormField\n                id={id}\n                label={label}\n                name={name}\n                onChange={onChange}\n                options={options}\n                themeV2={themeV2}\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\n            />\n        ),\n        [id, label, name, onChange, options, themeV2],\n    );\n\n    return <FieldArray name={name} render={renderField} />;\n};\n\nexport default memo(CheckboxGroupFormField);\n","import { type FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { type FieldProps } from 'formik';\nimport { includes } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField } from '../FormField';\nimport { Label } from '../Label';\n\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\n\nexport interface DynamicFormFieldOption {\n    code: string;\n    name: string;\n}\n\nexport interface DynamicFormFieldProps {\n    field: FormFieldType;\n    inputId?: string;\n    extraClass?: string;\n    autocomplete?: string;\n    parentFieldName?: string;\n    placeholder?: string;\n    label?: ReactNode;\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n    onChange?(value: string | string[]): void;\n}\n\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\n    field: {\n        fieldType,\n        type,\n        secret,\n        name,\n        label: fieldLabel,\n        required,\n        options,\n        max,\n        min,\n        maxLength,\n    },\n    parentFieldName,\n    onChange,\n    placeholder,\n    inputId,\n    autocomplete,\n    label,\n    extraClass,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const fieldInputId = inputId || name;\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\n    const isFloatingLabelSupportedFieldType = Boolean(\n        isFloatingLabelEnabled &&\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\n                !fieldType),\n    );\n    const labelComponent = useMemo(() => {\n        let labelClassName = '';\n\n        if (themeV2) {\n            if (isFloatingLabelSupportedFieldType) {\n                labelClassName = 'floating-form-field-label';\n            } else {\n                labelClassName = 'body-medium';\n            }\n        }\n\n        return (\n            <Label\n                additionalClassName={labelClassName}\n                htmlFor={fieldInputId}\n                id={`${fieldInputId}-label`}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n            >\n                {label || fieldLabel}\n                {!required && (\n                    <>\n                        {' '}\n                        <small className=\"optimizedCheckout-contentSecondary\">\n                            <TranslatedString id=\"common.optional_text\" />\n                        </small>\n                    </>\n                )}\n            </Label>\n        );\n    }, [themeV2, fieldInputId, isFloatingLabelSupportedFieldType, label, fieldLabel, required]);\n\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\n        if (fieldType === 'text') {\n            if (type === 'integer') {\n                return DynamicFormFieldType.NUMBER;\n            }\n\n            if (includes(name, 'phone') || includes(name, 'tel')) {\n                return DynamicFormFieldType.TELEPHONE;\n            }\n\n            return secret ? DynamicFormFieldType.PASSWORD : DynamicFormFieldType.TEXT;\n        }\n\n        return fieldType as DynamicFormFieldType;\n    }, [fieldType, type, secret, name]);\n\n    const renderInput = useCallback(\n        ({ field }: FieldProps<string>) => (\n            <DynamicInput\n                {...field}\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\n                autoComplete={autocomplete}\n                fieldType={dynamicFormFieldType}\n                id={fieldInputId}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                max={max}\n                maxLength={maxLength || undefined}\n                min={min}\n                options={options && options.items}\n                placeholder={placeholder || (options && options.helperLabel)}\n                rows={options?.rows}\n                themeV2={themeV2}\n            />\n        ),\n        [\n            fieldInputId,\n            autocomplete,\n            dynamicFormFieldType,\n            isFloatingLabelSupportedFieldType,\n            max,\n            maxLength,\n            min,\n            options,\n            placeholder,\n            themeV2,\n        ],\n    );\n\n    return (\n        <div\n            className={classNames(\n                'dynamic-form-field',\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\n                extraClass,\n            )}\n        >\n            {fieldType === DynamicFormFieldType.CHECKBOX ? (\n                <CheckboxGroupFormField\n                    id={fieldInputId}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                    options={(options && options.items) || []}\n                    themeV2={themeV2}\n                />\n            ) : (\n                <FormField\n                    id={fieldInputId}\n                    input={renderInput}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default memo(DynamicFormField);\n","import classNames from 'classnames';\nimport React, { type FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n    themeV2?: boolean;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    themeV2 = false,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n            { 'sub-header': themeV2 && !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import classNames from 'classnames';\nimport React, { type ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, {\n    type ComponentType,\n    type Context,\n    type FunctionComponent,\n    memo,\n    useContext,\n    useMemo,\n} from 'react';\nimport { type Omit } from 'utility-types';\n\nimport { type MatchedProps } from './InjectHoc';\nimport type { MappableInjectHoc, MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","import { type ReactNode, useState } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children: (props: { toggle: any; isOpen: boolean }) => ReactNode;\n}\n\nconst Toggle = ({ openByDefault, children }: ToggleProps): ReactNode => {\n    const [isOpen, setIsOpen] = useState(Boolean(openByDefault));\n\n    const toggle = (event: Event) => {\n        event.preventDefault();\n        setIsOpen(!isOpen);\n    };\n\n    return children({ isOpen, toggle });\n};\n\nexport default Toggle;\n","import classNames from 'classnames';\nimport React, { type ButtonHTMLAttributes, type FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import {\n    type Address,\n    type AddressRequestBody,\n    type BillingAddress,\n    type CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalFastlaneAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalFastlaneAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalFastlaneAddress));\n\nconst isPayPalFastlaneAddress = (address: Address, addresses?: Address[]): boolean => {\n    if (!addresses || addresses.length === 0) {\n        return false;\n    }\n\n    return addresses.some((paypalFastlaneAddress) =>\n        isEqualToPayPalFastlaneAddress(address, paypalFastlaneAddress),\n    );\n};\n\nexport default isPayPalFastlaneAddress;\n","export default function getNestedValue(obj: any, path: string): any {\n  return path.split('.').reduce((acc, key) => acc && acc[key], obj);\n}\n","import { ErrorMessage, useFormikContext } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nimport { getNestedValue } from '../../common/utility';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const formikContext = useFormikContext<{ [key: string]: any }>();\n\n    const hasError = getNestedValue(formikContext?.errors, name) && getNestedValue(formikContext?.touched, name);\n\n    const renderMessage = useCallback(\n        (message: string) => (\n            <label\n                aria-live=\"polite\"\n                className=\"form-inlineMessage\"\n                htmlFor={name}\n                id={errorId}\n                role=\"alert\"\n            >\n                {message}\n            </label>\n        ),\n        [errorId, name],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({isSubmitted}) => (\n                <ul className=\"form-field-errors\" data-test={testId}>\n                    <li className=\"form-field-error\">\n                        {(hasError && isSubmitted) ? <ErrorMessage name={name} render={renderMessage} /> :\n                            <span\n                                aria-hidden=\"true\"\n                                className=\"is-srOnly\"\n                                id={errorId}\n                            />\n                        }\n                    </li>\n                </ul>\n            )}\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import DOMPurify from 'dompurify';\nimport React, { type FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import React, { type FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { type EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { type EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport type EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","import { type ComponentType } from 'react';\n\ninterface ResolveResult {\n    name: string;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveLazyComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n    registry: Record<string, readonly TResolveId[]>,\n): ComponentType<TProps> | undefined {\n    const results: ResolveResult[] = [];\n\n    for (const [name, resolveIds] of Object.entries(registry)) {\n        for (const resolverId of resolveIds) {\n            const result = { name, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .find((result) => result.matches > 0);\n\n    const matchedName = matched?.name ?? results.find((result) => result.default)?.name;\n\n    if (matchedName) {\n        return components[matchedName];\n    }\n}\n","import { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\n\nexport interface StaticConsignmentItemListProps {\n    consignment: Consignment;\n    cart: Cart;\n}\n\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\n    cart,\n    consignment,\n}) => {\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticConsignment-items\">\n            <strong>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n            </strong>\n\n            <ul>\n                {lineItems.map((item) => (\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(StaticConsignmentItemList);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    type BodlEventsPayload,\n    type BodlService,\n    type BraintreeAnalyticTrackerService,\n    type CheckoutService,\n    createBodlService,\n    createBraintreeAnalyticTracker,\n    createPayPalCommerceAnalyticTracker,\n    createStepTracker,\n    type PayPalCommerceAnalyticTrackerService,\n    type StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { type ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { type AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n    const getBraintreeAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<BraintreeAnalyticTrackerService>(\n                createBraintreeAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n    const getPayPalCommerceAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<PayPalCommerceAnalyticTrackerService>(\n                createPayPalCommerceAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n        getBraintreeAnalyticTracker().customerPaymentMethodExecuted();\n        getPayPalCommerceAnalyticTracker().customerPaymentMethodExecuted();\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n        getBraintreeAnalyticTracker().selectedPaymentMethod(methodId);\n        getPayPalCommerceAnalyticTracker().selectedPaymentMethod(methodId);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n        getBraintreeAnalyticTracker().paymentComplete();\n        getPayPalCommerceAnalyticTracker().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const walletButtonClick = (methodId: string) => {\n        getBraintreeAnalyticTracker().walletButtonClick(methodId);\n        getPayPalCommerceAnalyticTracker().walletButtonClick(methodId);\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n        walletButtonClick,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","import { type CustomerInitializeOptions, type CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { type ReactElement, useEffect } from 'react';\n\nconst WALLET_BUTTON_HEIGHT = 36;\n\nexport interface CheckoutButtonProps {\n    containerId: string;\n    methodId: string;\n    isShowingWalletButtonsOnTop?: boolean;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nconst CheckoutButton = ({\n    containerId,\n    methodId,\n    isShowingWalletButtonsOnTop,\n    deinitialize,\n    initialize,\n    onError,\n    onClick = noop,\n}: CheckoutButtonProps): ReactElement => {\n    useEffect(() => {\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\n            : {};\n\n        initialize({\n            methodId,\n            [methodId]: {\n                ...heightOption,\n                container: containerId,\n                onError,\n                onClick: () => onClick(methodId),\n            },\n        });\n\n        return () => {\n            deinitialize({ methodId });\n        };\n    }, []);\n\n    return <div data-test={containerId} id={containerId} />;\n};\n\nexport default CheckoutButton;\n","import {\n    type ExtensionAction,\n    ExtensionActionType,\n    type ExtensionState,\n} from './ExtensionProvider';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            if (typeof action.payload === 'boolean') {\n                return { ...state, isShowingLoadingIndicator: action.payload };\n            }\n\n            break;\n\n        case ExtensionActionType.RE_RENDER_SHIPPING_FORM:\n            if (typeof action.payload === 'number') {\n                return { ...state, shippingFormRenderTimestamp: action.payload };\n            }\n\n            break;\n\n        default:\n            return state;\n    }\n\n    return state;\n};\n","import { type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { type ReactNode, useReducer } from 'react';\n\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n    shippingFormRenderTimestamp: undefined | number;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean | number;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n    RE_RENDER_SHIPPING_FORM,\n}\n\nexport interface ExtensionProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n    errorLogger: ErrorLogger;\n}\n\nexport const ExtensionProvider = ({\n    checkoutService,\n    children,\n    errorLogger,\n}: ExtensionProviderProps) => {\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n        shippingFormRenderTimestamp: undefined,\n    });\n    const extensionService = new ExtensionService(checkoutService, dispatch, errorLogger);\n\n    const extensionValues = {\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingFormHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingForm> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingForm,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingStepHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingStep> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingStep,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionMessageType, ExtensionQueryType } from '@bigcommerce/checkout-sdk';\n\nimport { type QueryHandler, type QueryHandlerProps } from './QueryHandler';\n\nexport function createGetConsignmentHandler({\n    checkoutService,\n    extension,\n}: QueryHandlerProps): QueryHandler<ExtensionQueryType.GetConsignments> {\n    return {\n        queryType: ExtensionQueryType.GetConsignments,\n        handler: async (data) => {\n            if (!data.payload?.useCache) {\n                await checkoutService.loadCheckout();\n            }\n\n            const consignments = checkoutService.getState().data.getCheckout()?.consignments || [];\n\n            checkoutService.postMessageToExtension(extension.id, {\n                type: ExtensionMessageType.GetConsignments,\n                payload: {\n                    consignments,\n                },\n            });\n        },\n    };\n}\n","import {\n    type CheckoutService,\n    type Extension,\n    type ExtensionCommandMap,\n    type ExtensionQueryMap,\n    type ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport type React from 'react';\n\nimport { ErrorLevelType, type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { type ExtensionAction } from './ExtensionProvider';\nimport { type CommandHandler, type QueryHandler } from './handler';\nimport * as commandHandlerFactories from './handler/commandHandlers';\nimport * as queryHandlerFactories from './handler/queryHandlers';\n\nexport class ExtensionService {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private dispatch: React.Dispatch<ExtensionAction>,\n        private errorLogger: ErrorLogger,\n    ) {}\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    preloadExtensions(): void {\n        const state = this.checkoutService.getState();\n        const extensions = state.data.getExtensions();\n        const cartId = state.data.getCart()?.id;\n        const parentOrigin = state.data.getConfig()?.links.siteLink;\n\n        if (!cartId || !parentOrigin) {\n            return;\n        }\n\n        extensions?.forEach((extension) => {\n            const url = new URL(extension.url);\n\n            url.searchParams.set('extensionId', extension.id);\n            url.searchParams.set('cartId', cartId);\n            url.searchParams.set('parentOrigin', parentOrigin);\n\n            const link = document.createElement('link');\n\n            link.rel = 'preload';\n            link.as = 'document';\n            link.href = url.toString();\n\n            const head = document.head;\n\n            head.appendChild(link);\n        });\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        try {\n            await this.checkoutService.renderExtension(container, region);\n\n            this.registerHandlers(extension);\n        } catch (error: unknown) {\n            if (error instanceof Error) {\n                this.errorLogger.log(\n                    error,\n                    { errorCode: 'checkoutExtension' },\n                    ErrorLevelType.Error,\n                    { extensionId: extension.id, region },\n                );\n            }\n        }\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        this.checkoutService.clearExtensionCache(region);\n\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(commandHandlerFactories).forEach((createCommandHandlerFactory) => {\n            const handlerFactory = createCommandHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n\n        Object.values(queryHandlerFactories).forEach((createQueryHandlerFactory) => {\n            const handlerFactory = createQueryHandlerFactory(handlerProps);\n\n            if (this.isQueryHandler(handlerFactory.queryType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionQuery(\n                        extension.id,\n                        handlerFactory.queryType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n\n    private isQueryHandler<T extends keyof ExtensionQueryMap>(\n        type: T,\n        handler: QueryHandler<any>,\n    ): handler is QueryHandler<T> {\n        return handler.queryType === type;\n    }\n}\n","import classNames from 'classnames';\nimport React, { forwardRef, type Ref } from 'react';\n\nimport Input, { type InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            themeV2 = false,\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n                { 'floating-form-field-input': themeV2 && isFloatingLabelEnabled },\n                { 'body-regular': themeV2 && !isFloatingLabelEnabled },\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import {\n    type CardInstrument,\n    type CustomerAddress,\n    type PaymentProviderCustomer,\n} from '@bigcommerce/checkout-sdk';\n\ninterface PayPalFastlaneCustomer {\n    authenticationState?: string;\n    addresses?: CustomerAddress[];\n    instruments?: CardInstrument[];\n}\n\nexport default function isPayPalFastlaneCustomer(\n    customer?: PaymentProviderCustomer,\n): customer is PayPalFastlaneCustomer {\n    if (!customer) {\n        return false;\n    }\n\n    return (\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\n    );\n}\n","import React, { type FunctionComponent, type ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n    <ErrorBoundary\n        fallback={\n            <div className=\"lazyContainer-error\">\n                <TranslatedString id=\"common.unstable_network_error\" />\n            </div>\n        }\n        filter={filterError}\n    >\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n    </ErrorBoundary>\n);\n\nexport default LazyContainer;\n","import {\n    type CheckoutPayment,\n    type GiftCertificateOrderPayment,\n    type OrderPayment,\n} from '@bigcommerce/checkout-sdk';\n\nexport default function isGiftCertificatePayment(\n    payment: OrderPayment | CheckoutPayment,\n): payment is GiftCertificateOrderPayment {\n    return payment.providerId === 'giftcertificate';\n}\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, type ReactNode } from 'react';\n\ninterface ModalHeaderProps {\n    children?: ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import { kebabCase } from 'lodash';\n\nexport default function getAppliedStyles(\n    element: HTMLElement,\n    properties: string[],\n    pseudoElementSelector?: string,\n): { [key: string]: string } {\n    const declaration = window.getComputedStyle(element, pseudoElementSelector);\n\n    return properties.reduce(\n        (result, propertyName) => ({\n            ...result,\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\n        }),\n        {},\n    );\n}\n","import { type CheckoutPayment, type OrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\n    return payment.providerId === 'storecredit';\n}\n","import { useContext } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const useExtensions = () => {\n    const extensionContext = useContext(ExtensionContext);\n\n    if (!extensionContext) {\n        throw new Error('useExtensions must be used within an <ExtensionProvider>');\n    }\n\n    return extensionContext;\n};\n","import classNames from 'classnames';\nimport React, { type FieldsetHTMLAttributes, forwardRef, type ReactNode, type Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBigCommercePaymentsFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.BigCommercePaymentsCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BigCommercePaymentsFastLane\n    );\n};\n\nexport default isBigCommercePaymentsFastlaneMethod;\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","import classNames from 'classnames';\nimport React, { forwardRef, type ReactNode, type Ref } from 'react';\n\nimport { Input, type InputProps } from '../Input';\nimport { Label } from '../Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, themeV2, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    { 'floating-form-field-input': themeV2 },\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"checkbox\"\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import classNames from 'classnames';\nimport React, { type ButtonHTMLAttributes, type FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import React, { type FunctionComponent } from 'react';\n\nimport { isMobileView } from '../../utils';\n\nimport { CartSummarySkeleton } from './CartSummarySkeleton';\n\nconst OrderConfirmationPageSkeletonDesktop: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\">\n        <div className=\"layout-main\" data-test=\"order-confirmation-page-skeleton\">\n            <div className=\"order-confirmation-page-skeleton\">\n                <div className=\"thankyou\" />\n                <div className=\"line-1\" />\n                <div className=\"line-2\" />\n                <div className=\"continue\" />\n            </div>\n        </div>\n        <CartSummarySkeleton />\n    </div>\n);\n\nconst OrderConfirmationPageSkeletonMobile: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\">\n        <div className=\"layout-main\" data-test=\"order-confirmation-page-skeleton-mobile\">\n            <div className=\"order-confirmation-page-skeleton\">\n                <div className=\"thankyou\" />\n                <div className=\"text\">\n                    <div className=\"line\">\n                        <div className=\"animated-grey-box t1\" />\n                        <div className=\"animated-grey-box t2\" />\n                    </div>\n                    <div className=\"animated-grey-box first-line\" />\n                    <div className=\"animated-grey-box\" />\n                    <div className=\"line\">\n                        <div className=\"animated-grey-box t3\" />\n                        <div className=\"animated-grey-box t4\" />\n                    </div>\n                </div>\n                <div className=\"continue\" />\n            </div>\n        </div>\n        <div className=\"cartDrawer optimizedCheckout-orderSummary\">\n            <div className=\"checkout-page-skeleton--cartdrawer\">\n                <div className=\"product\">\n                    <div className=\"animated-grey-box figure\" />\n                    <div className=\"details\">\n                        <div className=\"animated-grey-box name\" />\n                        <div className=\"animated-grey-box description\" />\n                    </div>\n                </div>\n                <div className=\"animated-grey-box more\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst OrderConfirmationPageSkeleton: FunctionComponent = () => {\n    return isMobileView() ? (\n        <OrderConfirmationPageSkeletonMobile />\n    ) : (\n        <OrderConfirmationPageSkeletonDesktop />\n    );\n};\n\nexport default OrderConfirmationPageSkeleton;\n","// copied from core package\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n\nlet query: MediaQueryList;\n\nexport function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import { type Address, type Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\ninterface LocalizedGeography {\n    localizedCountry: string;\n    localizedProvince: string;\n}\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, type InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","import React, { type FunctionComponent, type ReactNode } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LoadingOverlayProps {\n    isLoading: boolean;\n    hideContentWhenLoading?: boolean;\n    unmountContentWhenLoading?: boolean;\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n    children,\n    hideContentWhenLoading,\n    loadingSkeleton,\n    unmountContentWhenLoading,\n    isLoading,\n}) => {\n    const loadingUI = loadingSkeleton || <LoadingSpinner isLoading={true} />;\n\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\n        return (\n            <>\n                {isLoading ? loadingUI : null}\n                {unmountContentWhenLoading && isLoading ? null : (\n                    <div\n                        style={{\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n                        }}\n                    >\n                        {children}\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"loadingOverlay-container\">\n            {children}\n            {isLoading && (\n                <div\n                    className=\"loadingOverlay optimizedCheckout-overlay\"\n                    data-test=\"loading-overlay\"\n                />\n            )}\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import { createContext, useContext } from 'react';\n\nexport interface ThemeContextProps {\n    themeV2: boolean;\n}\n\nconst ThemeContext = createContext<ThemeContextProps | undefined>(undefined);\n\nexport const useThemeContext = () => {\n    const themeContext = useContext(ThemeContext);\n\n    if (!themeContext) {\n        throw new Error('useThemeContext must be used within an <ThemeContextProvider>');\n    }\n\n    return themeContext;\n};\n\nexport default ThemeContext;\n","import { type RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { type SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import { type Address, type CheckoutPayment, type FormField } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nexport interface StaticBillingAddressProps {\n    address: Address;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n    fields: FormField[];\n    payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY }) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n        return (\n            <p>\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\n            </p>\n        );\n    }\n\n    return (\n        <>\n            <StaticAddress address={address} type={AddressType.Billing} />\n\n            {showPayPalFastlaneLabel && <PoweredByPayPalFastlaneLabel />}\n        </>\n    );\n};\n\nexport function mapToStaticBillingAddressProps(\n    { checkoutState }: CheckoutContextProps,\n    { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n    const {\n        data: { getBillingAddressFields, getCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n\n    return {\n        fields: getBillingAddressFields(address.countryCode),\n        payments: checkout && checkout.payments,\n    };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import {\n    type Address,\n    type CheckoutSelectors,\n    type Country,\n    type ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { localizeAddress } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n    address: Address;\n    type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n    countries?: Country[];\n}\n\nconst StaticAddress: FunctionComponent<\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\n    > = ({\n        countries,\n        address: addressWithoutLocalization,\n    }) => {\n\n    const { themeV2 } = useThemeContext();\n\n    const address = localizeAddress(addressWithoutLocalization, countries);\n    const isValid = !isEmpty(address);\n\n    return !isValid ? null : (\n        <div className=\"vcard checkout-address--static\" data-test=\"static-address\">\n            {(address.firstName || address.lastName) && (\n                <p className={classNames('fn address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n            )}\n\n            {(address.phone || address.company) && (\n                <p className={classNames('address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"company-name\">{`${address.company} `}</span>\n                    <span className=\"tel\">{address.phone}</span>\n                </p>\n            )}\n\n            <div className=\"adr\">\n                <p className={classNames('street-address address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\n                    {address.address2 && (\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\n                    )}\n                </p>\n\n                <p className={classNames('address-entry',\n                    { 'body-regular': themeV2 })}>\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n                    {address.localizedProvince && (\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\n                    )}\n                    {address.postalCode && (\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\n                    )}\n                    {address.localizedCountry && (\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport function mapToStaticAddressProps(\n    context: CheckoutContextProps,\n    { type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n    const {\n        checkoutState: {\n            data: { getBillingCountries, getShippingCountries },\n        },\n    } = context;\n\n    return {\n        countries: type === AddressType.Billing\n            ? getBillingCountries()\n            : getShippingCountries(),\n    };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","import { type CurrencyService, type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","import { type Cart } from '@bigcommerce/checkout-sdk';\n\n/**\n * Minimum charge amounts due to the Stripe documentation\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\n */\nenum stripeLinkMinAmount {\n    'USD' = 0.5,\n    'AED' = 2,\n    'AUD' = 0.5,\n    'BGN' = 1,\n    'BRL' = 0.5,\n    'CAD' = 0.5,\n    'CHF' = 0.5,\n    'CZK' = 15,\n    'DKK' = 2.5,\n    'EUR' = 0.5,\n    'GBP' = 0.3,\n    'HKD' = 4,\n    'HUF' = 175,\n    'INR' = 0.5,\n    'JPY' = 50,\n    'MXN' = 10,\n    'MYR' = 2,\n    'NOK' = 3,\n    'NZD' = 0.5,\n    'PLN' = 2,\n    'RON' = 2,\n    'SEK' = 3,\n    'SGD' = 0.5,\n    'THB' = 10,\n}\n\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\n    return code in stripeLinkMinAmount;\n};\n\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\n    const {\n        currency: { code },\n        cartAmount,\n    } = cart;\n\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default shouldUseStripeLinkByMinimumAmount;\n","export default function parseAnchor(text: string): string[] {\n    const div = document.createElement('div');\n\n    div.innerHTML = text;\n\n    const anchor = div.querySelector('a');\n\n    if (!anchor) {\n        return [];\n    }\n\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\n\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\n}\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","import { type LineItem } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\n}\n","import { type PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { type MultiShippingTableItemWithType } from './MultishippingType';\n\nexport interface ConsignmentLineItemDetailProps {\n    lineItems: MultiShippingTableItemWithType[] | PhysicalItem[];\n    isMultiShippingSummary?: boolean;\n}\n\nconst renderProductOptionDetails = (item: MultiShippingTableItemWithType | PhysicalItem) => {\n    if (!item.options || !item.options.length) {\n        return null;\n    }\n\n    return (<span className=\"line-item-options\">{` - ${item.options.map(option => option.value).join(' / ')}`}</span>);\n}\n\nexport const renderItemContent = (item: MultiShippingTableItemWithType | PhysicalItem, themeV2 = false, isMultiShippingSummary = false) => {\n    return <span\n        className={classNames(\n            { 'body-regular': themeV2 && !isMultiShippingSummary },\n            { 'sub-text': themeV2 && isMultiShippingSummary },)\n        }>\n        <span className={classNames(\n            { 'body-bold': themeV2 && !isMultiShippingSummary },\n            { 'sub-text-bold': themeV2 && isMultiShippingSummary },)\n        }>\n            {`${item.quantity} x `}\n        </span>\n        {item.name}\n        {renderProductOptionDetails(item)}\n    </span>;\n};\n\nconst ConsignmentLineItemDetail: FunctionComponent<ConsignmentLineItemDetailProps> = ({\n    lineItems,\n    isMultiShippingSummary = false,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <ul className=\"consignment-line-item-list\">\n        {lineItems.map((item) => (\n            <li key={item.id}>\n                {renderItemContent(item, themeV2, isMultiShippingSummary)}\n            </li>\n        ))}\n    </ul>\n    );\n};\n\nexport default memo(ConsignmentLineItemDetail);\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { type CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { type OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import isBigCommercePaymentsFastlaneMethod from './is-bigcommerce-payments-fastlane-method';\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\n\nconst isPaypalFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        isBraintreeFastlaneMethod(methodId) ||\n        isPayPalCommerceFastlaneMethod(methodId) ||\n        isBigCommercePaymentsFastlaneMethod(methodId)\n    );\n};\n\nexport default isPaypalFastlaneMethod;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPayPalCommerceFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.PaypalCommerceCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\n    );\n};\n\nexport default isPayPalCommerceFastlaneMethod;\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import {\n    createLanguageService,\n    type LanguageConfig,\n    type LanguageService,\n} from '@bigcommerce/checkout-sdk';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import { type CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { FormContext } from '../contexts';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children?: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import React, { type FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n    isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div\n            aria-busy=\"true\"\n            className=\"loadingSpinner loadingOverlay-container\"\n            role=\"status\"\n            style={{ height: 100 }}\n        >\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n        </div>\n    );\n};\n\nexport default memo(LoadingSpinner);\n","import React, { type ReactNode } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport ThemeContext from './ThemeContext';\n\nexport interface ThemeProviderProps {\n    children?: ReactNode;\n}\n\nexport const ThemeProvider = ({ children }: ThemeProviderProps) => {\n    const {\n        checkoutState: {\n            data: { getConfig },\n        },\n    } = useCheckout();\n\n    const config = getConfig();\n\n    let useNewTheme = false;\n\n    if (config) {\n        useNewTheme = Boolean(\n            config.checkoutSettings.features['CHECKOUT-7962.update_font_style_on_checkout_page'] ??\n                true,\n        );\n    }\n\n    const themeV2 =\n        (window.location.search && window.location.search.includes('v2')) || useNewTheme;\n\n    return <ThemeContext.Provider value={{ themeV2 }}>{children}</ThemeContext.Provider>;\n};\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBraintreeFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isBraintreeFastlaneMethod;\n","import { type CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isExperimentEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n    experimentName: string,\n    fallbackValue = true\n): boolean {\n    return Boolean(checkoutSettings?.features[experimentName] ?? fallbackValue);\n}\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import { type RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import { createContext } from 'react';\n\nimport { type ExtensionState } from './ExtensionProvider';\nimport { type ExtensionService } from './ExtensionService';\n\nexport interface ExtensionContextProps {\n    extensionService: ExtensionService;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\n\nexport enum ExtensionRegionContainer {\n    ShippingShippingAddressFormBefore = 'extension-region-shipping-shippingaddressform-before',\n    ShippingShippingAddressFormAfter = 'extension-region-shipping-shippingaddressform-after',\n    ShippingSelectedShippingMethod = 'extension-region-shipping-selectedshippingmethod',\n    PaymentPaymentMethodListBefore = 'extension-region-payment-paymentmethodlist-before',\n    SummaryAfter = 'extension-region-summary-after',\n    SummaryLastItemAfter = 'extension-region-summary-lastitem-after',\n}\n\nexport const extensionRegionToContainerMap: Record<ExtensionRegion, ExtensionRegionContainer | ''> =\n    {\n        [ExtensionRegion.ShippingShippingAddressFormBefore]:\n            ExtensionRegionContainer.ShippingShippingAddressFormBefore,\n        [ExtensionRegion.ShippingShippingAddressFormAfter]:\n            ExtensionRegionContainer.ShippingShippingAddressFormAfter,\n        [ExtensionRegion.ShippingSelectedShippingMethod]:\n            ExtensionRegionContainer.ShippingSelectedShippingMethod,\n        [ExtensionRegion.PaymentPaymentMethodListBefore]:\n            ExtensionRegionContainer.PaymentPaymentMethodListBefore,\n        [ExtensionRegion.SummaryAfter]: ExtensionRegionContainer.SummaryAfter,\n        [ExtensionRegion.SummaryLastItemAfter]: ExtensionRegionContainer.SummaryLastItemAfter,\n        [ExtensionRegion.GlobalWebWorker]: '',\n    };\n","import { type ExtensionRegion } from '@bigcommerce/checkout-sdk';\nimport React, { type ReactNode, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { extensionRegionToContainerMap } from './ExtensionRegionContainer';\nimport { useExtensions } from './useExtensions';\n\ninterface ExtensionProps {\n    region: ExtensionRegion;\n}\n\nexport const Extension = ({ region }: ExtensionProps): ReactNode | null => {\n    const {\n        checkoutState: {\n            data: { getExtensions, getConfig, getCheckout },\n        },\n    } = useCheckout();\n    const extensions = getExtensions();\n    const config = getConfig();\n    const checkout = getCheckout();\n    const { extensionService } = useExtensions();\n    const isRegionEnabled =\n        extensions && config && checkout && extensionService.isRegionEnabled(region);\n    const containerId = extensionRegionToContainerMap[region];\n\n    useEffect(() => {\n        if (isRegionEnabled) {\n            void extensionService.renderExtension(containerId, region);\n\n            return () => {\n                extensionService.removeListeners(region);\n            };\n        }\n    }, [containerId, isRegionEnabled, region]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (isRegionEnabled && containerId !== '') {\n        return <div id={containerId} />;\n    }\n\n    return null;\n};\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, type KeyboardEvent, type MouseEvent, type ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { type Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children?: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children?: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import {\n    type CheckoutService,\n    createCurrencyService,\n    type StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { type ReactNode, useEffect, useMemo, useState } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nconst LocaleProvider: React.FC<LocaleProviderProps> = ({ checkoutService, children }) => {\n    const [config, setConfig] = useState<StoreConfig | undefined>();\n    const languageService = useMemo(() => getLanguageService(), []);\n\n    const getContextValue = memoizeOne((storeConfig?: StoreConfig) => {\n        return {\n            currency: storeConfig ? createCurrencyService(storeConfig) : undefined,\n            date: storeConfig\n                ? {\n                      inputFormat: storeConfig.inputDateFormat,\n                  }\n                : undefined,\n            language: languageService,\n        };\n    });\n\n    useEffect(() => {\n        const unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                setConfig(data.getConfig());\n            },\n            ({ data }) => data.getConfig(),\n        );\n\n        return () => {\n            unsubscribe();\n        };\n    }, [checkoutService]);\n\n    const contextValue = useMemo(() => getContextValue(config), [config, getContextValue]);\n\n    return <LocaleContext.Provider value={contextValue}>{children}</LocaleContext.Provider>;\n};\n\nexport default LocaleProvider;\n","import { type Consignment, type LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { Field, type FieldConfig, type FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    createElement,\n    type FunctionComponent,\n    memo,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport { FormFieldContainer } from '../FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: unknown): void;\n}\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerFieldInput: FunctionComponent<InnerFieldInputProps> = ({\n    field,\n    onChange = noop,\n    component = 'input',\n    render,\n    ...props\n}) => {\n    const prevValueRef = useRef<unknown>(field.value);\n\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const comparableValue = isDate(field.value) ? field.value.getTime() : field.value;\n        const comparablePrevValue = isDate(prevValueRef.current)\n            ? prevValueRef.current.getTime()\n            : prevValueRef.current;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(field.value);\n        }\n\n        prevValueRef.current = field.value;\n    }, [field.value, onChange]);\n\n    if (render) {\n        return render({ field, ...props });\n    }\n\n    if (typeof component === 'string') {\n        return createElement(component, field);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return createElement(component as any, { field, ...props });\n};\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    meta={form.getFieldMeta(field.name)}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest}>{renderInnerField}</Field>;\n};\n\nexport default memo(BasicFormField);\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nexport default PaymentMethodId;\n","import React, { type FunctionComponent } from 'react';\n\nexport const CartSummarySkeleton: FunctionComponent = () => (\n    <aside className=\"layout-cart\">\n        <article className=\"cart optimizedCheckout-orderSummary checkout-page-skeleton checkout-page-skeleton--cart\">\n            <div className=\"item--first\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n            </div>\n            <div className=\"item--product\">\n                <div className=\"figure\" />\n                <div className=\"name\" />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item--coupon\">\n                <div />\n            </div>\n            <div className=\"item--total\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item--tax\">\n                <div />\n            </div>\n            <div className=\"item--last\">\n                <div />\n                <div />\n            </div>\n        </article>\n    </aside>\n);\n"],"names":["children","className","hidden","testId","isFloatingLabelEnabled","additionalClassName","rest","IconSize","withIconContainer","OriginalComponent","memo","size","Small","Large","Medium","A","displayNamePrefix","hasSelectedShippingOptions","consignments","length","every","consignment","selectedShippingOption","id","type","CustomError","Error","constructor","data","message","title","name","super","captureStackTrace","this","stack","setDefaultValues","defaultError","defaultTitle","ref","useRef","containerRef","createRef","focusOnError","current","erroredFormField","querySelector","join","focus","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","useCallback","memoizeOne","setSubmitted","setTimeout","renderContent","noValidate","onSubmitCapture","values","navigateToOrderConfirmation","orderId","url","toString","window","location","pathname","replace","Promise","noop","mapCustomFormFieldsFromFormValues","customFieldsObject","customFields","forIn","value","key","fieldValue","isDate","padMonth","padStart","getMonth","padDay","getDate","getFullYear","push","fieldId","ErrorLevelType","height","role","viewBox","width","xmlns","d","fill","ErrorBoundary","Component","state","getDerivedStateFromError","error","componentDidCatch","filter","logger","props","log","errorCode","render","fallback","NoopCheckoutSupport","isSupported","EmbeddedCheckoutUnsupportedError","prototype","EmbeddedCheckoutSupport","unsupportedMethods","langService","ids","includes","translate","methods","UNSUPPORTED_METHODS","CheckoutPageSkeletonDesktop","CartSummarySkeleton","CheckoutPageSkeletonMobile","isMobileView","isLoading","TranslatedString","waitInterval","loginUrl","isWaiting","setIsWaiting","useState","useEffect","waitToken","clearTimeout","LoadingOverlay","hideContentWhenLoading","TranslatedHtml","CustomerViewType","buttonsCount","skeleton","Array","map","_v","i","LoadingSkeleton","renderWhileLoading","SUPPORTED_METHODS","getSupportedMethodIds","methodIds","methodId","AmazonPayV2Button","lazy","then","module","default","BigCommercePaymentsButton","BigcommercePaymentsPayLaterButton","CheckoutButton","GooglePayButton","PayPalCommerceCreditButton","PayPalCommerceButton","StripeLinkV2Button","ComponentRegistry","resolveCheckoutButton","resolveId","components","resolveLazyComponent","ApplePayButton","isShowingWalletButtonsOnTop","onError","Suspense","containerId","paypalCommerceIds","withCheckout","checkoutState","checkoutService","getConfig","getCustomer","isPaymentDataRequired","statuses","isInitializedCustomer","errors","getInitializeCustomerError","config","providers","checkoutSettings","remoteCheckoutProviders","availableMethodIds","customer","isGuest","Boolean","checkEmbeddedSupport","isPaymentStepActive","onUnhandledError","onWalletButtonClick","language","themeV2","style","position","left","top","undefined","isPayPalCommerce","ResolvedCheckoutButton","deinitialize","deinitializeCustomer","initialize","initializeCustomer","onClick","analyticsContext","useContext","AnalyticsContext","useMemo","analyticsTracker","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","showSuggestion","setShowSuggestion","bolt","onInit","hasBoltAccount","email","customerSuggestionInit","event","stopPropagation","fn","provider","providerFlow","Button","IconBolt","getCheckout","checkout","providerWithCustomCheckout","handleExecutePaymentMethodCheckout","options","customerSuggestionExecute","PaymentMethodId","Bolt","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","payments","payment","providerId","getBillingAddress","isSigningOut","billingAddress","links","checkoutLink","logoutLink","isSignedIn","shouldRedirectToStorefrontForAuth","signOut","signOutCustomer","onSignOut","onSignOutError","assign","isCartEmpty","reload","isErrorWithType","Tiny","variant","Secondary","hideText","isInitializing","supportedMethodIds","LazyContainer","EMAIL_REGEXP","getEmailValidationSchema","max","matches","required","getTranslateCreateCustomerError","label","min","memoize","formFields","passwordRequirements","description","numeric","alpha","minLength","firstName","lastName","password","concat","getCustomFormFieldsValidationSchema","getAcceptsMarketingEmailsDefault","defaultShouldSubscribe","requiresMarketingConsent","withLanguage","handleSubmit","onSubmit","mapPropsToValues","acceptsMarketingEmails","validationSchema","find","requirements","getCreateCustomerValidationSchema","getPasswordRequirements","createAccountError","isCreatingAccount","onCancel","createAccountErrorMessage","isRequestError","status","splitMessage","split","trim","fields","field","updatedItems","items","item","transformFormFieldsData","Form","Fieldset","Alert","DynamicFormField","autocomplete","extraClass","parentFieldName","custom","disabled","Primary","href","preventDefault","translatedString","parsedString","parseAnchor","onChange","renderInput","TextInput","autoComplete","labelContent","FormField","input","onSendLoginEmail","isOpen","isSendingEmail","emailHasBeenRequested","onRequestClose","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","footer","LoadingSpinner","sent_email","form","expiry","minutes","Math","round","Modal","additionalBodyClassName","additionalModalClassName","header","ModalHeader","shouldShowCloseButton","isFastlaneHostWindow","hasOwnProperty","getPaymentMethod","paymentMethod","shouldRenderFastlaneWatermark","initializationData","isFastlanePrivacySettingEnabled","braintreeFastlane","paypalFastlane","FastlaneWatermarkComponent","includeAdditionalInfo","result","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","isExpressPrivacyPolicy","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","oneOf","Input","checked","String","Label","htmlFor","SubscribeSessionStorage","setSubscribeStatus","shouldSubscribe","sessionStorage","setItem","getSubscribeStatus","getItem","removeSubscribeStatus","removeItem","getShouldSubscribeValue","onContinueAsGuest","privacyPolicyUrl","baseSchema","canSubscribe","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","shouldShowEmailWatermark","setFieldValue","renderField","fieldProps","loginLink","legend","Legend","BasicFormField","tabIndex","Toggle","openByDefault","toggle","RedirectToStorefrontLogin","isDisabled","onSignIn","isBuyNowCart","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","Login","changeEmailLink","body","mapErrorMessage","SuggestedLogin","Info","CancellableEnforcedLogin","EnforcedLogin","rel","target","setStatus","valSuccess","step","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","container","onEmailChange","getStyles","getStripeStyles","gatewayId","getStylesFromElement","properties","parentContainer","document","getElementById","getAppliedStyles","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","buttonText","display","Customer","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","setState","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","paymentProviderCustomer","getPaymentProviderCustomer","shouldEncourageSignIn","stripeLinkAuthenticationState","executePaymentMethodCheckoutOrContinue","handleSignIn","credentials","signIn","onSignInError","handleCreateAccount","createAccount","onAccountCreated","mapCreateAccountFromFormValues","showCreateAccount","CreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","Guest","handleChangeEmail","customerEmailEntry","handleShowLogin","StripeUPE","continueWithCheckoutCallback","checkoutPaymentMethodExecuted","payload","componentDidMount","onReady","componentWillUnmount","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","checkoutButtonIds","isContinuingAsGuest","isSubscribed","isWalletButtonsOnTop","shouldRenderStripeForm","isLoadingGuestForm","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isEmbedded","isGuestEnabled","isAccountCreationEnabled","customerPaymentMethodExecuted","withAnalytics","getCustomerAccountFields","getCart","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","cart","getProviderWithCustomCheckout","shopperConfig","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","forgotPasswordLink","source","guestCheckoutEnabled","signInCustomer","shouldUseStripeLinkByMinimumAmount","icon","dangerouslySetInnerHTML","__html","sanitize","promotions","banners","reduce","promotion","banner","index","text","compactView","isShippingDiscountDisplayEnabled","paypalFastlaneAddresses","usePayPalFastlaneAddress","shippingAddress","address","showPayPalFastlaneAddressLabel","StaticAddress","AddressType","Shipping","PoweredByPayPalFastlaneLabel","StaticConsignmentItemList","StaticShippingOption","displayAdditionalInformation","method","shippingCostAfterDiscount","getShippingCostAfterAutomaticDiscount","cost","consignmentNumber","getShippingCountries","addressWithoutLocalization","localizeAddress","lineItems","findLineItems","address1","address2","city","localizedProvince","localizedCountry","postalCode","count","getLineItemsCount","ConsignmentLineItemDetail","isMultiShippingSummary","isMultiShippingMode","ShippingOptionExpiredError","getLanguageService","heading","isActive","isEditable","onEdit","summary","isBusy","suggestion","onExpanded","isClosed","setIsClosed","contentRef","timeoutRef","timeoutDelay","getParentContainer","parentElement","classList","contains","focusStep","delay","parseFloat","getComputedStyle","transitionDuration","getChildInput","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","getScrollPosition","isNaN","scrollTo","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","MobileView","matched","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","CheckoutStepType","physicalItems","some","lineItem","isShippingRequired","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","getStripeLinkAndCheckoutPageIsReloaded","getBillingStepStatus","getBillingAddressFields","countryCode","billingAddressFields","hasAddress","isValidAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","Billing","isExperimentEnabled","startsWith","getShippingStepStatus","getShippingAddress","getConsignments","getShippingAddressFields","shippingAddressFields","hasOptions","hasUnassignedItems","hasUnassignedLineItems","isCustomShippingSelected","getPaymentStepStatus","getOrder","order","Payment","getOrderSubmitStatus","isSubmittingOrder","customerStep","shippingStep","billingStep","paymentStep","orderStatus","steps","compact","defaultActiveStep","isPrevStepComplete","slice","prevStep","retry","CartSummary","CartSummaryDrawer","Checkout","isBillingSameAsShipping","isRedirecting","buttonConfigs","handleToggleMultiShipping","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","trackStepCompleted","navigateToStep","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","trackStepViewed","handleUnhandledError","handleError","errorLogger","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","createAccountUrl","handleBeforeExit","exitCheckout","handleWalletButtonClick","methodName","walletButtonClick","unsubscribeFromConsignments","removeEventListener","createEmbeddedMessenger","embeddedStylesheet","extensionService","loadPaymentMethodByIds","subscribeToConsignments","supportedProviders","configs","getPaymentMethods","preloadExtensions","siteLink","errorFlashMessages","getFlashMessages","messenger","parentOrigin","receiveStyles","styles","append","postFrameLoaded","contentId","postLoaded","prerendering","checkoutBegin","once","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","defaultNewsletterSignupOption","isUsingMultiShipping","OrderConfirmationPageSkeleton","errorModal","isCustomError","ErrorModal","onClose","isPending","extensionState","isShowingLoadingIndicator","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","hasCartChanged","loadingSkeleton","AddressFormSkeleton","cartHasChanged","navigateNextStep","onToggleMultiShipping","setIsMultishippingMode","StaticBillingAddress","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","Extension","region","withExtension","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscribe","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","loadCheckout","useLoadCheckout","checkoutId","setIsLoadingCheckout","useExtensions","fetchDataWithRetry","maxRetries","attemptFetch","attemptSequence","all","params","include","loadExtensions","resolve","catch","CheckoutPage","sentryConfig","publicPath","sentrySampleRate","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createEmbeddedCheckoutSupport","createErrorLogger","sentry","errorTypes","sampleRate","LocaleProvider","CheckoutProvider","AnalyticsProvider","ExtensionProvider","ThemeProvider","createEmbeddedCheckoutMessenger","FormContext","createContext","isSubmitted","FormProvider","initialIsSubmitted","contextValue","Provider","isFunction","total","lineItemIds","addedByPromotion","forwardRef","appearFocused","schema","fieldType","maxValue","minValue","nullable","transform","originalValue","CHECKBOX","requiredErrorMessage","query","matchMedia","AlertType","describedBy","useId","Success","Warning","IconError","renderDefaultIcon","placeholder","PaypalCommerce","PaypalCommerceCreditCards","PayPalCommerceAcceleratedCheckout","Braintree","BraintreeAcceleratedCheckout","imageUrl","alt","src","transitTime","additionalDescription","ShopperCurrency","amount","lastPathName","pop","URLSearchParams","search","get","currency","toCustomerCurrency","rows","content","itemId","isNil","parentId","createInjectHoc","LocaleContext","pickProps","ReactDatePicker","date","inputDateFormat","inputFormat","handleDateChange","dateValue","DynamicFormFieldType","DROPDOWM","optionValue","RADIO","RadioInput","CheckboxInput","isArray","DATE","calendarClassName","dateFormat","maxDate","Date","minDate","placeholderText","toUpperCase","popperClassName","selected","MULTILINE","PASSWORD","ContextComponent","InnerDecoratedComponent","DecoratedComponent","context","injectedProps","pickBy","isEmpty","mergedProps","displayName","customError","mapAddressToFormValues","addressFormValues","defaultValue","fieldName","getValue","shouldSaveAddress","stateOrProvince","stateOrProvinceCode","getDefaultValue","year","month","day","Number","errorId","kebabCase","ConsoleErrorLogger","console","customConsole","tags","level","meta","info","warn","NoopErrorLogger","FILENAME_PREFIX","SeverityLevelEnum","SentryErrorLogger","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","RegExp","consoleLogger","dsn","sentryOnLoad","Sentry","init","beforeSend","bind","denyUrls","integrations","globalHandlersIntegration","onerror","onunhandledrejection","rewriteFramesIntegration","lazyLoadIntegration","addIntegration","iteratee","loadSentry","computeErrorCode","captureException","mapToSentryLevel","extra","fingerprint","loaderPromise","exec","getScriptLoader","loadScript","attributes","crossorigin","async","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","serviceConfig","AccountService","requestSender","createRequestSender","create","put","response","renderPasswordInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","confirmPassword","onSignUp","isSigningUp","customerCanBeCreated","AccountCreationRequirementsError","AccountCreationFailedError","isDefaultOrderPayment","isGiftCertificatePayment","isStoreCreditPayment","gatewayPayment","detail","instructions","mapFromPayments","code","remaining","used","balance","purchaseDate","getStoreCreditAmount","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","fees","shippingAmount","shipping","discounts","discount","getTotalAutomaticDiscount","getOrderShippingCostAfterAutomaticDiscount","subtotalAmount","shippingAmountBeforeDiscount","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","MandateTextComponent","mandateText","Object","keys","entries","PaymentsWithMandates","paymentsWithMandates","mandate","isPaymentWithMandate","OrderStatusMessage","orderNumber","supportEmail","supportPhoneNumber","features","hasDigitalItems","isDownloadable","handleClick","throttle","print","OrderSummary","OrderSummaryDrawer","OrderConfirmation","handleErrorModalClose","handleSignUp","hasSignedUp","loadOrder","orderPurchased","isLoadingOrder","paymentInstructions","storeProfile","orderEmail","storePhoneNumber","renderGuestSignUp","shouldShowPasswordForm","customerId","action","renderOrderSummary","renderErrorModal","shopperCurrency","headerLink","storeCurrency","orderAmount","shouldShowErrorCode","OrderConfirmationApp","accountService","newsletter","setCheckoutState","getState","unsubscribeRef","newCheckoutState","getPasswordRequirementsFromConfig","minlength","allSlashes","shouldShowChildren","discountTotal","DEFAULT_OPTIONS","interval","InnerField","component","InnerFieldInput","hasError","prevForm","prevField","prevProps","nextForm","nextField","nextProps","prevValueRef","getTime","createElement","renderInnerField","renderMessage","Consumer","handleOnRequestClose","nativeEvent","renderErrorCode","headers","aria","labelledby","shouldBeTranslatedAsHtml","isHtmlError","translationKey","isValidSync","WHITELIST_REGEXP","maxLength","getTranslateAddressError","requiredFieldErrorTranslationIds","company","phone","getFormFieldsValidationSchema","paymentWithCustomCheckout","isPayPalFastlaneEnabled","paypalFastlaneCustomer","customerAuthenticationState","authenticationState","addresses","shouldShowPayPalFastlaneLabel","shouldShowPayPalFastlaneShippingForm","CheckoutContext","useCheckout","queries","mobile","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","remove","handleSelectAll","checkedValues","difference","forEach","val","handleSelectNone","handleInputChange","indexOf","FormFieldContainer","DynamicInput","FormFieldError","renderProps","pick","secret","fieldLabel","inputId","fieldInputId","isFloatingLabelSupportedFieldType","labelComponent","labelClassName","dynamicFormFieldType","NUMBER","TELEPHONE","TEXT","helperLabel","mapToPropsOrFactory","mapToProps","isMapToPropsFactory","mappedProps","setIsOpen","ButtonVariant","ButtonSize","getClassName","isFullWidth","Action","normalizeAddress","omit","paypalFastlaneAddress","bcAddress","isEqual","isEqualToPayPalFastlaneAddress","getNestedValue","obj","path","acc","formikContext","touched","ADD_ATTR","toCSSRule","selector","mergedStyles","EmbeddedCheckoutStyleParser","parse","rules","secondaryText","secondaryHeading","link","hover","button","active","secondaryButton","select","checkbox","radio","checklist","discountBanner","loadingBanner","orderSummary","EmbeddedCheckoutStylesheet","embeddedCheckoutStyleParser","_parser","head","appendChild","sheet","CSSStyleSheet","rule","insertRule","appendStylesheet","registry","results","resolveIds","resolverId","sort","a","b","matchedName","quantity","createAnalyticsService","createFn","createArguments","getStepTracker","createStepTracker","getBodlService","createBodlService","getBraintreeAnalyticTracker","createBraintreeAnalyticTracker","getPayPalCommerceAnalyticTracker","createPayPalCommerceAnalyticTracker","trackCheckoutStarted","currentStep","stepCompleted","trackOrderComplete","showShippingMethods","selectedPaymentMethod","clickPayButton","paymentRejected","paymentComplete","heightOption","buttonHeight","extensionReducer","ExtensionActionType","SHOW_LOADING_INDICATOR","RE_RENDER_SHIPPING_FORM","shippingFormRenderTimestamp","createReloadCheckoutHandler","commandType","ExtensionCommandType","ReloadCheckout","handler","createSetIframeStyleHandler","extension","SetIframeStyle","extensionContainer","iframe","createShowLoadingIndicatorHandler","dispatch","ShowLoadingIndicator","show","createReRenderShippingFormHandler","ReRenderShippingForm","now","createReRenderShippingStepHandler","ReRenderShippingStep","createGetConsignmentHandler","queryType","ExtensionQueryType","GetConsignments","useCache","postMessageToExtension","ExtensionService","handlers","extensions","getExtensions","cartId","URL","searchParams","set","as","renderExtension","getExtensionByRegion","registerHandlers","extensionId","removeListeners","clearExtensionCache","removers","remover","isRegionEnabled","handlerProps","createCommandHandlerFactory","handlerFactory","isCommandHandler","handleExtensionCommand","createQueryHandlerFactory","isQueryHandler","handleExtensionQuery","useReducer","extensionValues","ExtensionContext","isPayPalFastlaneCustomer","filterError","element","pseudoElementSelector","declaration","propertyName","getPropertyValue","extensionContext","BigCommercePaymentsCreditCards","BigCommercePaymentsFastLane","OrderConfirmationPageSkeletonDesktop","OrderConfirmationPageSkeletonMobile","MOBILE_MAX_WIDTH","countries","country","states","subdivisions","unmountContentWhenLoading","loadingUI","ThemeContext","useThemeContext","themeContext","showPayPalFastlaneLabel","getBillingCountries","useLocale","stripeLinkMinAmount","cartAmount","isStripeLinkMinAmount","div","innerHTML","anchor","anchorSiblings","outerHTML","EMPTY_ARRAY","freeze","renderItemContent","option","renderProductOptionDetails","SMALL_SCREEN_MAX_WIDTH","currentScript","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","renderOrderConfirmation","FALLBACK_LOCALE","languageService","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","setPrototypeOf","object","__proto__","useNewTheme","experimentName","fallbackValue","call","ExtensionRegionContainer","extensionRegionToContainerMap","ShippingShippingAddressFormBefore","ShippingShippingAddressFormAfter","ShippingSelectedShippingMethod","PaymentPaymentMethodListBefore","SummaryAfter","SummaryLastItemAfter","closeButtonLabel","additionalHeaderClassName","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","setConfig","getContextValue","storeConfig","createCurrencyService","unsubscribe","getFieldMeta"],"sourceRoot":""}