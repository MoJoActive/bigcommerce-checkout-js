{"version":3,"file":"checkout-e4d98ba4.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/utility/src/navigateToOrderConfirmation.ts","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-customer.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionRegionContainer.ts","webpack://checkout/./packages/checkout-extension/src/Extension.tsx","webpack://checkout/./packages/checkout-button-integration/src/CheckoutButton.tsx","webpack://checkout/./packages/amazon-pay-v2-integration/src/AmazonPayV2Button.tsx","webpack://checkout/./packages/instrument-utils/src/guards/isHTMLElement/isHTMLElement.ts","webpack://checkout/./packages/bigcommerce-payments-integration/src/BigCommercePaymentsPaypal/BigcommercePaymentsPaypalButton.tsx","webpack://checkout/./packages/bigcommerce-payments-integration/src/BigCommercePaymentsPayLater/BigcommercePaymentsPayLaterButton.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/payment-integration-api/src/setPrototypeOf.ts","webpack://checkout/./packages/google-pay-integration/src/GooglePayButton.tsx","webpack://checkout/./packages/payment-integration-api/src/isEmbedded.ts","webpack://checkout/./packages/paypal-commerce-integration/src/PayPalCommerceCredit/PayPalCommerceCreditButton.tsx","webpack://checkout/./packages/paypal-commerce-integration/src/PayPalCommerce/PayPalCommerceButton.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-address.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/common/utility/isExperimentEnabled.ts","webpack://checkout/./packages/core/src/app/shipping/getShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/ui/src/loading/LoadingOverlay.tsx","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/core/src/app/ui/form/RadioInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/MultiCheckboxControl.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxGroupFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormField.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/StyleProvider.tsx","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/core/src/app/shipping/ConsignmentLineItemDetail.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/ui/src/icon/IconPayPalFastlane.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/PoweredByPayPalFastlaneLabel.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextArea.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/CustomError.ts","webpack://checkout/./packages/core/src/app/payment/getProviderWithCustomCheckout.ts","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/usePayPalFastlaneAddress.ts","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/StyleContext.tsx","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/ui/src/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/common/utility/should-filter-apple-pay.ts","webpack://checkout/./packages/core/src/app/common/utility/is-apple-pay-window.ts","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/ApplePayButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/PayPalCommerceButton.tsx","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CustomerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/AmazonPayV2Button.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-fastlane-window.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/PayPalFastlaneWatermark.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/SubscribeSessionStorage.ts","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticMultiConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/ShippingSummary.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/getOrderShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-bigcommerce-payments-fastlane-method.ts","webpack://checkout/./packages/locale/src/localizeAddress.ts","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/payment-integration-api/src/toResolvableComponent.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-method.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-commerce-fastlane-method.ts","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/ui/src/loading/LoadingSpinner.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/payment-integration-api/src/isResolvableComponent.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveComponent.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/checkout-extension/src/useExtensions.tsx","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/core/src/app/common/utility/getNestedValue.ts","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingFormHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/queryHandlers/createGetConsignmentHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/utility/src/isBuyNowCart.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormFieldType.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-braintree-fastlane-method.ts","webpack://checkout/./packages/ui/src/loading/LazyContainer.tsx"],"sourcesContent":["import { Cart, Consignment, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport { compact, find, isNil, map } from 'lodash';\n\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\n    return compact(\n        map(consignment.lineItemIds, (itemId) =>\n            find(\n                cart.lineItems.physicalItems,\n                (item) => item.id === itemId && isNil(item.parentId),\n            ),\n        ),\n    );\n}\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    CCAvenueMars = 'ccavenuemars',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    BigCommercePaymentsPayPal = 'bigcommerce_payments_paypal',\n    BigCommercePaymentsPayLater = 'bigcommerce_payments_paylater',\n    BigCommercePaymentsCreditCards = 'bigcommerce_payments_creditcards',\n    BigCommercePaymentsAlternativeMethod = 'bigcommerce_payments_apms',\n    BigCommercePaymentsVenmo = 'bigcommerce_payments_venmo',\n    BigCommercePaymentsFastLane = 'bigcommerce_payments_fastlane',\n    BigCommercePaymentsGooglePay = 'googlepay_bigcommerce_payments',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    Ratepay = 'ratepay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n    TdOnlineMartGooglePay = 'googlepaytdonlinemart',\n}\n\nexport default PaymentMethodId;\n","import React, { memo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Toggle } from '../../ui/toggle';\n\ninterface ShippingOptionAdditionalDescriptionProps {\n    description: string;\n}\n\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\n    ShippingOptionAdditionalDescriptionProps\n> = ({ description }) => {\n    const CHRACTER_LIMIT = 45;\n\n    return (\n        <div className=\"shippingOption-additionalDescription--container\">\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\n                {({ isOpen, toggle }) => (\n                    <>\n                        <span\n                            className={`shippingOption-additionalDescription ${\n                                isOpen\n                                    ? 'shippingOption-additionalDescription--expanded'\n                                    : 'shippingOption-additionalDescription--collapsed'\n                            }`}\n                        >\n                            {description}\n                        </span>\n                        {!isOpen && (\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\n                                <TranslatedString id=\"common.show_more\" />\n                            </a>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        </div>\n    );\n};\n\nexport default memo(ShippingOptionAdditionalDescription);\n","import { ShippingOption } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { ShopperCurrency } from '../../currency';\n\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\nimport './StaticShippingOption.scss';\n\ninterface StaticShippingOptionProps {\n    displayAdditionalInformation?: boolean;\n    method: ShippingOption;\n    shippingCostAfterDiscount?: number;\n}\n\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\n    displayAdditionalInformation = true,\n    method,\n    shippingCostAfterDiscount,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    const renderShippingPrice = () => {\n        if (shippingCostAfterDiscount !== undefined && shippingCostAfterDiscount !== method.cost) {\n            return (\n                <>\n                    <span className=\"shippingOption-price-before-discount\">\n                        <ShopperCurrency amount={method.cost} />\n                    </span>\n                    <ShopperCurrency amount={shippingCostAfterDiscount} />\n                </>\n            );\n        }\n\n        return (\n            <ShopperCurrency amount={method.cost} />\n        )\n    \n    }\n\n    return (\n        <div className=\"shippingOption shippingOption--alt\" data-test=\"static-shipping-option\">\n            {method.imageUrl && (\n                <span className=\"shippingOption-figure\">\n                    <img\n                        alt={method.description}\n                        className=\"shippingOption-img\"\n                        src={method.imageUrl}\n                    />\n                </span>\n            )}\n            <span className={classNames('shippingOption-desc', { 'body-medium': newFontStyle })}>\n                {method.description}\n                {method.transitTime && (\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\n                )}\n                {method.additionalDescription && displayAdditionalInformation && (\n                    <ShippingOptionAdditionalDescription\n                        description={method.additionalDescription}\n                    />\n                )}\n            </span>\n            <span className={classNames('shippingOption-price', { 'body-medium': newFontStyle })}>\n                {renderShippingPrice()}\n            </span>\n        </div>\n    );\n};\n\nexport default StaticShippingOption;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import React, { FunctionComponent, MouseEventHandler } from 'react';\n\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { useLocale } from './LocaleContext';\nimport { TranslatedStringProps } from './TranslatedString';\n\nexport type TranslatedLinkProps = TranslatedStringProps & {\n    testId?: string;\n    onClick: MouseEventHandler;\n};\n\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\n    const { language } = useLocale();\n    const translatedString = language.translate(id, data);\n    const parsedString = parseAnchor(translatedString);\n\n    return parsedString.length ? (\n        <>\n            {parsedString[0]}\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\n                {parsedString[1]}\n            </a>\n            {parsedString[2]}\n        </>\n    ) : (\n        <>{translatedString}</>\n    );\n};\n\nexport default TranslatedLink;\n","import { noop } from 'lodash';\n\nimport isBuyNowCart from './isBuyNowCart';\n\nexport default function navigateToOrderConfirmation(orderId?: number): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    BodlEventsPayload,\n    BodlService,\n    BraintreeAnalyticTrackerService,\n    CheckoutService,\n    createBodlService,\n    createBraintreeAnalyticTracker,\n    createPayPalCommerceAnalyticTracker,\n    createStepTracker,\n    PayPalCommerceAnalyticTrackerService,\n    StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n    const getBraintreeAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<BraintreeAnalyticTrackerService>(\n                createBraintreeAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n    const getPayPalCommerceAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<PayPalCommerceAnalyticTrackerService>(\n                createPayPalCommerceAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n        getBraintreeAnalyticTracker().customerPaymentMethodExecuted();\n        getPayPalCommerceAnalyticTracker().customerPaymentMethodExecuted();\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n        getBraintreeAnalyticTracker().selectedPaymentMethod(methodId);\n        getPayPalCommerceAnalyticTracker().selectedPaymentMethod(methodId);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n        getBraintreeAnalyticTracker().paymentComplete();\n        getPayPalCommerceAnalyticTracker().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const walletButtonClick = (methodId: string) => {\n        getBraintreeAnalyticTracker().walletButtonClick(methodId);\n        getPayPalCommerceAnalyticTracker().walletButtonClick(methodId);\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n        walletButtonClick,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","import {\n    CardInstrument,\n    CustomerAddress,\n    PaymentProviderCustomer,\n} from '@bigcommerce/checkout-sdk';\n\ninterface PayPalFastlaneCustomer {\n    authenticationState?: string;\n    addresses?: CustomerAddress[];\n    instruments?: CardInstrument[];\n}\n\nexport default function isPayPalFastlaneCustomer(\n    customer?: PaymentProviderCustomer,\n): customer is PayPalFastlaneCustomer {\n    if (!customer) {\n        return false;\n    }\n\n    return (\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\n    );\n}\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\n\nexport enum ExtensionRegionContainer {\n    ShippingShippingAddressFormBefore = 'extension-region-shipping-shippingaddressform-before',\n    ShippingShippingAddressFormAfter = 'extension-region-shipping-shippingaddressform-after',\n    ShippingSelectedShippingMethod = 'extension-region-shipping-selectedshippingmethod',\n    SummaryAfter = 'extension-region-summary-after',\n    SummaryLastItemAfter = 'extension-region-summary-lastitem-after',\n}\n\nexport const extensionRegionToContainerMap: Record<ExtensionRegion, ExtensionRegionContainer | ''> = {\n    [ExtensionRegion.ShippingShippingAddressFormBefore]:\n        ExtensionRegionContainer.ShippingShippingAddressFormBefore,\n    [ExtensionRegion.ShippingShippingAddressFormAfter]:\n        ExtensionRegionContainer.ShippingShippingAddressFormAfter,\n    [ExtensionRegion.ShippingSelectedShippingMethod]:\n        ExtensionRegionContainer.ShippingSelectedShippingMethod,\n    [ExtensionRegion.SummaryAfter]: ExtensionRegionContainer.SummaryAfter,\n    [ExtensionRegion.SummaryLastItemAfter]: ExtensionRegionContainer.SummaryLastItemAfter,\n    [ExtensionRegion.GlobalWebWorker]: '',\n};\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { extensionRegionToContainerMap } from './ExtensionRegionContainer';\nimport { useExtensions } from './useExtensions';\n\ninterface ExtensionProps {\n    region: ExtensionRegion;\n}\n\nexport const Extension = ({ region }: ExtensionProps): ReactNode | null => {\n    const {\n        checkoutState: {\n            data: { getExtensions, getConfig, getCheckout },\n        },\n    } = useCheckout();\n    const extensions = getExtensions();\n    const config = getConfig();\n    const checkout = getCheckout();\n    const { extensionService } = useExtensions();\n    const isRegionEnabled =\n        extensions && config && checkout && extensionService.isRegionEnabled(region);\n    const containerId = extensionRegionToContainerMap[region];\n\n    useEffect(() => {\n        if (isRegionEnabled) {\n            void extensionService.renderExtension(containerId, region);\n\n            return () => {\n                extensionService.removeListeners(region);\n            };\n        }\n    }, [containerId, isRegionEnabled, region]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (isRegionEnabled && containerId !== '') {\n        return <div id={containerId} />;\n    }\n\n    return null;\n};\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst CheckoutButton: FunctionComponent<CheckoutButtonProps> = ({\n    checkoutService: { deinitializeCustomer, initializeCustomer },\n    checkoutButtonContainerClass,\n    containerId,\n    methodId,\n    onUnhandledError,\n    onWalletButtonClick,\n    additionalInitializationOptions,\n}) => {\n    const initializeCustomerStrategyOrThrow = async () => {\n        try {\n            await initializeCustomer({\n                methodId,\n                [methodId]: {\n                    container: containerId,\n                    onUnhandledError,\n                    onClick: () => onWalletButtonClick(methodId),\n                    ...additionalInitializationOptions,\n                },\n            });\n        } catch (error) {\n            if (typeof onUnhandledError === 'function' && error instanceof Error) {\n                onUnhandledError(error);\n            }\n        }\n    };\n\n    const deinitializeCustomerStrategyOrThrow = async () => {\n        try {\n            await deinitializeCustomer({ methodId });\n        } catch (error) {\n            if (typeof onUnhandledError === 'function' && error instanceof Error) {\n                onUnhandledError(error);\n            }\n        }\n    };\n\n    useEffect(() => {\n        void initializeCustomerStrategyOrThrow();\n\n        return () => {\n            void deinitializeCustomerStrategyOrThrow();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return <div className={checkoutButtonContainerClass} id={containerId} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    CheckoutButton,\n    [],\n);\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport { isHTMLElement } from '@bigcommerce/checkout/instrument-utils';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div');\n\n    if (container) {\n        const amazonButton = container.shadowRoot?.querySelector('.amazonpay-button-view1');\n\n        if (isHTMLElement(amazonButton)) {\n            amazonButton.style.height = '36px';\n\n            return;\n        }\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n};\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    AmazonPayV2Button,\n    [{ id: 'amazonpay' }],\n);\n","export default function isHTMLElement(element: unknown): element is HTMLElement {\n    return element instanceof HTMLElement;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst BigcommercePaymentsPaypalButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: props.onUnhandledError,\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    BigcommercePaymentsPaypalButton,\n    [{ id: 'bigcommerce_payments_paypal' }],\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst BigcommercePaymentsPayLaterButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: props.onUnhandledError,\n    };\n\n    return (\n        <CheckoutButton\n            additionalInitializationOptions={additionalInitializationOptions}\n            {...props}\n        />\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    BigcommercePaymentsPayLaterButton,\n    [{ id: 'bigcommerce_payments_paylater' }],\n);\n","import setPrototypeOf from '../setPrototypeOf';\n\nimport CustomError from './CustomError';\n\nexport default class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","export default function setPrototypeOf<T extends object>(object: T, prototype: object): T {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else if (hasProto(object)) {\n        // eslint-disable-next-line no-proto\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction hasProto(object: object): object is object & { __proto__: object } {\n    return '__proto__' in object;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    EmbeddedCheckoutUnsupportedError,\n    isEmbedded,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport './GooglePayButton.scss';\n\nconst GooglePayButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { language, onUnhandledError } = props;\n\n    if (isEmbedded()) {\n        onUnhandledError(\n            new EmbeddedCheckoutUnsupportedError(\n                language.translate('embedded_checkout.unsupported_error', {\n                    methods: 'googlepay',\n                }),\n            ),\n        );\n\n        return null;\n    }\n\n    return <CheckoutButton checkoutButtonContainerClass=\"google-pay-top-button\" {...props} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    GooglePayButton,\n    [\n        { id: 'googlepayadyenv2' },\n        { id: 'googlepayadyenv3' },\n        { id: 'googlepayauthorizenet' },\n        { id: 'googlepaybnz' },\n        { id: 'googlepaybraintree' },\n        { id: 'googlepaypaypalcommerce' },\n        { id: 'googlepaycheckoutcom' },\n        { id: 'googlepaycybersourcev2' },\n        { id: 'googlepayorbital' },\n        { id: 'googlepaystripe' },\n        { id: 'googlepaystripeupe' },\n        { id: 'googlepayworldpayaccess' },\n        { id: 'googlepaytdonlinemart' },\n    ],\n);\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst PayPalCommerceCreditButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: props.onUnhandledError,\n    };\n\n    return <CheckoutButton additionalInitializationOptions={additionalInitializationOptions} {...props} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    PayPalCommerceCreditButton,\n    [\n        { id: 'paypalcommercecredit' },\n    ],\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nconst PayPalCommerceButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const additionalInitializationOptions = {\n        onComplete: navigateToOrderConfirmation,\n        onError: props.onUnhandledError,\n    };\n\n    return <CheckoutButton additionalInitializationOptions={additionalInitializationOptions} {...props} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    PayPalCommerceButton,\n    [\n        { id: 'paypalcommerce' },\n    ],\n);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import {\n    Address,\n    AddressRequestBody,\n    BillingAddress,\n    CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalFastlaneAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalFastlaneAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalFastlaneAddress));\n\nconst isPayPalFastlaneAddress = (address: Address, addresses?: Address[]): boolean => {\n    if (!addresses || addresses.length === 0) {\n        return false;\n    }\n\n    return addresses.some((paypalFastlaneAddress) =>\n        isEqualToPayPalFastlaneAddress(address, paypalFastlaneAddress),\n    );\n};\n\nexport default isPayPalFastlaneAddress;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import { Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            (consignment.selectedShippingOption && consignment.selectedShippingOption.id) ||\n            consignment.selectedShippingOption?.type === 'custom',\n    );\n}\n","import CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isExperimentEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n    experimentName: string,\n): boolean {\n    return Boolean(checkoutSettings?.features[experimentName] ?? true);\n}\n","import { Consignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: Consignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: Consignment) {\n    return consignment.discounts.reduce((discountTotal, discount) => {\n        return discount.type === 'AUTOMATIC' ? discountTotal + discount.amount : discountTotal;\n    }, 0);\n}\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\ninterface ModalHeaderProps {\n    children?: ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import { Component, ReactNode } from 'react';\n\nimport ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children?: ReactNode;\n    fallback?: ReactNode;\n    logger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, logger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        if (logger) {\n            logger.log(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LoadingOverlayProps {\n    isLoading: boolean;\n    hideContentWhenLoading?: boolean;\n    unmountContentWhenLoading?: boolean;\n    children?: ReactNode;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n    children,\n    hideContentWhenLoading,\n    unmountContentWhenLoading,\n    isLoading,\n}) => {\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\n        return (\n            <>\n                <LoadingSpinner isLoading={isLoading} />\n                {unmountContentWhenLoading && isLoading ? null : (\n                    <div\n                        style={{\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n                        }}\n                    >\n                        {children}\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"loadingOverlay-container\">\n            {children}\n            {isLoading && (\n                <div\n                    className=\"loadingOverlay optimizedCheckout-overlay\"\n                    data-test=\"loading-overlay\"\n                />\n            )}\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import { SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface RadioInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    newFontStyle?: boolean;\n}\n\nconst RadioInput = forwardRef(\n    (\n        { additionalClassName, label, value, checked, id, newFontStyle = false, ...rest }: RadioInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                checked={checked}\n                className={classNames(\n                    'form-radio',\n                    'optimizedCheckout-form-radio',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"radio\"\n                value={value}\n            />\n            <Label additionalClassName={`${newFontStyle ? 'body-regular' : ''}`} htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default RadioInput;\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isDate, noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport ReactDatePicker from 'react-datepicker';\n\nimport { withDate, WithDateProps } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown } from '../icon';\n\nimport CheckboxInput from './CheckboxInput';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport { InputProps } from './Input';\nimport RadioInput from './RadioInput';\nimport TextArea from './TextArea';\nimport TextInput from './TextInput';\n\nexport interface DynamicInputProps extends InputProps {\n    id: string;\n    additionalClassName?: string;\n    value?: string | string[];\n    rows?: number;\n    fieldType?: DynamicFormFieldType;\n    options?: FormFieldItem[];\n    isFloatingLabelEnabled?: boolean;\n    newFontStyle?: boolean;\n}\n\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\n    additionalClassName,\n    date,\n    fieldType,\n    id,\n    name,\n    onChange = noop,\n    options,\n    placeholder,\n    isFloatingLabelEnabled,\n    newFontStyle = false,\n    value,\n    ...rest\n}) => {\n    const { inputFormat } = date;\n    const handleDateChange = useCallback(\n        (dateValue: any, event: any) =>\n            onChange({\n                ...event,\n                target: {\n                    name,\n                    value: dateValue,\n                },\n            }),\n        [onChange, name],\n    );\n\n    switch (fieldType) {\n        case DynamicFormFieldType.dropdown:\n            return (\n                <>\n                    <div\n                        className={classNames(\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\n                        )}>\n                        <IconChevronDown />\n                    </div>\n                    <select\n                        {...(rest as any)}\n                        className={classNames(\n                            { 'floating-select': isFloatingLabelEnabled },\n                            'form-select optimizedCheckout-form-select',\n                            { 'floating-form-field-input': newFontStyle },\n                        )}\n                        data-test={`${id}-select`}\n                        id={id}\n                        name={name}\n                        onChange={onChange}\n                        value={value === null ? '' : value}\n                    >\n                        {placeholder && <option value=\"\">{placeholder}</option>}\n                        {options &&\n                            options.map(({ label, value: optionValue }) => (\n                                <option key={optionValue} value={optionValue}>\n                                    {label}\n                                </option>\n                            ))}\n                    </select>\n                </>\n            );\n\n        case DynamicFormFieldType.radio:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <RadioInput\n                            {...rest}\n                            checked={optionValue === value}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            newFontStyle={newFontStyle}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-radio`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.checkbox:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <CheckboxInput\n                            {...rest}\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            newFontStyle={newFontStyle}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-checkbox`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.date:\n            return (\n                <ReactDatePicker\n                    {...(rest as any)}\n                    autoComplete=\"off\"\n                    // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\n                    // https://github.com/Hacker0x01/react-datepicker/issues/1357\n                    // onChangeRaw={ rest.onChange }\n                    calendarClassName=\"optimizedCheckout-contentPrimary\"\n                    className={classNames('form-input optimizedCheckout-form-input', {\n                        'floating-input': isFloatingLabelEnabled,\n                        'floating-form-field-input': newFontStyle,\n                    })}\n                    dateFormat={inputFormat}\n                    maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\n                    minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\n                    name={name}\n                    onChange={handleDateChange}\n                    placeholderText={inputFormat.toUpperCase()}\n                    popperClassName=\"optimizedCheckout-contentPrimary\"\n                    selected={isDate(value) ? value : undefined}\n                />\n            );\n\n        case DynamicFormFieldType.multiline:\n            return (\n                <TextArea\n                    {...(rest as any)}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    newFontStyle={newFontStyle}\n                    onChange={onChange}\n                    testId={`${id}-text`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n\n        default:\n            return (\n                <TextInput\n                    {...rest}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    newFontStyle={newFontStyle}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    testId={`${id}-${\n                        fieldType === DynamicFormFieldType.password ? 'password' : 'text'\n                    }`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n    }\n};\n\nexport default memo(withDate(DynamicInput));\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, MouseEvent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './MultiCheckboxControl.scss';\n\nexport interface MultiCheckboxControlProps {\n    testId?: string;\n    onSelectedAll(): void;\n    onSelectedNone(): void;\n    newFontStyle?: boolean;\n}\n\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\n    testId,\n    onSelectedAll,\n    onSelectedNone,\n    newFontStyle = false,\n}) => {\n    const handleSelectAllClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedAll();\n        },\n        [onSelectedAll],\n    );\n\n    const handleSelectNoneClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedNone();\n        },\n        [onSelectedNone],\n    );\n\n    return (\n        <ul className={classNames('multiCheckbox--controls',\n            { 'body-regular': newFontStyle })}>\n            <li className=\"multiCheckbox--control\">\n                <TranslatedString id=\"address.select\" />\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-all-button`}\n                    href=\"#\"\n                    onClick={handleSelectAllClick}\n                >\n                    <TranslatedString id=\"address.select_all\" />\n                </a>\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-none-button`}\n                    href=\"#\"\n                    onClick={handleSelectNoneClick}\n                >\n                    <TranslatedString id=\"address.select_none\" />\n                </a>\n            </li>\n        </ul>\n    );\n};\n\nexport default memo(MultiCheckboxControl);\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport { FieldArray, FieldArrayRenderProps, getIn } from 'formik';\nimport { difference, kebabCase, noop, pick } from 'lodash';\nimport React, { ChangeEvent, FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormFieldContainer from './FormFieldContainer';\nimport FormFieldError from './FormFieldError';\nimport MultiCheckboxControl from './MultiCheckboxControl';\n\nexport interface CheckboxGroupFormFieldProps {\n    id: string;\n    label: ReactNode;\n    name: string;\n    options: FormFieldItem[];\n    onChange?(values: string[]): void;\n    newFontStyle?: boolean;\n}\n\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\n\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\n    form: { values, errors },\n    id,\n    label,\n    name,\n    onChange = noop,\n    options,\n    push,\n    remove,\n    newFontStyle,\n}) => {\n    const handleSelectAll = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        difference(\n            options.map(({ value }) => value),\n            checkedValues,\n        ).forEach((val) => push(val));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, options, push, values]);\n\n    const handleSelectNone = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        checkedValues.forEach(() => remove(0));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, remove, values]);\n\n    const handleInputChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const checkedValues: string[] = getIn(values, name) || [];\n            const { value, checked } = event.target;\n\n            if (checked) {\n                push(value);\n            } else {\n                remove(checkedValues.indexOf(value));\n            }\n\n            onChange(getIn(values, name));\n        },\n        [name, onChange, push, remove, values],\n    );\n\n    return (\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\n            {label}\n\n            {options.length > 1 && (\n                <MultiCheckboxControl\n                    newFontStyle={newFontStyle}\n                    onSelectedAll={handleSelectAll}\n                    onSelectedNone={handleSelectNone}\n                    testId={id}\n                />\n            )}\n\n            <DynamicInput\n                fieldType={DynamicFormFieldType.checkbox}\n                id={id}\n                name={name}\n                newFontStyle={newFontStyle}\n                onChange={handleInputChange}\n                options={options}\n                value={getIn(values, name) || []}\n            />\n\n            <FormFieldError\n                errorId={`${id ?? name}-field-error-message`}\n                name={name}\n                testId={`${kebabCase(name)}-field-error-message`}\n            />\n        </FormFieldContainer>\n    );\n};\n\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\n    id,\n    label,\n    name,\n    onChange,\n    options,\n    newFontStyle,\n}) => {\n    const renderField = useCallback(\n        (renderProps: FieldArrayRenderProps) => (\n            <MultiCheckboxFormField\n                id={id}\n                label={label}\n                name={name}\n                newFontStyle={newFontStyle}\n                onChange={onChange}\n                options={options}\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\n            />\n        ),\n        [id, label, name, onChange, options],\n    );\n\n    return <FieldArray name={name} render={renderField} />;\n};\n\nexport default memo(CheckboxGroupFormField);\n","import { FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FieldProps } from 'formik';\nimport { includes } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormField from './FormField';\nimport Label from './Label';\n\nexport interface DynamicFormFieldOption {\n    code: string;\n    name: string;\n}\n\nexport interface DynamicFormFieldProps {\n    field: FormFieldType;\n    inputId?: string;\n    extraClass?: string;\n    autocomplete?: string;\n    parentFieldName?: string;\n    placeholder?: string;\n    label?: ReactNode;\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string | string[]): void;\n    newFontStyle?: boolean;\n}\n\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\n    field: {\n        fieldType,\n        type,\n        secret,\n        name,\n        label: fieldLabel,\n        required,\n        options,\n        max,\n        min,\n        maxLength,\n    },\n    parentFieldName,\n    onChange,\n    placeholder,\n    inputId,\n    autocomplete,\n    label,\n    extraClass,\n    isFloatingLabelEnabled,\n    newFontStyle = false,\n}) => {\n    const fieldInputId = inputId || name;\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\n    const isFloatingLabelSupportedFieldType = Boolean(\n        isFloatingLabelEnabled &&\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\n                !fieldType),\n    );\n    const labelComponent = useMemo(\n        () => {\n            let labelClassName = '';\n\n            if (newFontStyle) {\n                if (isFloatingLabelSupportedFieldType) {\n                    labelClassName = 'floating-form-field-label';\n                } else {\n                    labelClassName = 'body-medium';\n                }\n            }\n\n            return (\n                <Label\n                    additionalClassName={labelClassName}\n                    htmlFor={fieldInputId}\n                    id={`${fieldInputId}-label`}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                >\n                    {label || fieldLabel}\n                    {!required && (\n                        <>\n                            {' '}\n                            <small className=\"optimizedCheckout-contentSecondary\">\n                                <TranslatedString id=\"common.optional_text\" />\n                            </small>\n                        </>\n                    )}\n                </Label>\n            )\n        },\n        [fieldInputId, fieldLabel, required, isFloatingLabelSupportedFieldType, label],\n    );\n\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\n        if (fieldType === 'text') {\n            if (type === 'integer') {\n                return DynamicFormFieldType.number;\n            }\n\n            if (includes(name, 'phone') || includes(name, 'tel')) {\n                return DynamicFormFieldType.telephone;\n            }\n\n            return secret ? DynamicFormFieldType.password : DynamicFormFieldType.text;\n        }\n\n        return fieldType as DynamicFormFieldType;\n    }, [fieldType, type, secret, name]);\n\n    const renderInput = useCallback(\n        ({ field }: FieldProps<string>) => (\n            <DynamicInput\n                {...field}\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\n                autoComplete={autocomplete}\n                fieldType={dynamicFormFieldType}\n                id={fieldInputId}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                max={max}\n                maxLength={maxLength || undefined}\n                min={min}\n                newFontStyle={newFontStyle}\n                options={options && options.items}\n                placeholder={placeholder || (options && options.helperLabel)}\n                rows={options && (options as any).rows}\n            />\n        ),\n        [\n            fieldInputId,\n            max,\n            maxLength,\n            min,\n            options,\n            placeholder,\n            dynamicFormFieldType,\n            autocomplete,\n        ],\n    );\n\n    return (\n        <div\n            className={classNames(\n                'dynamic-form-field',\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\n                extraClass,\n            )}\n        >\n            {fieldType === DynamicFormFieldType.checkbox ? (\n                <CheckboxGroupFormField\n                    id={fieldInputId}\n                    label={labelComponent}\n                    name={fieldName}\n                    newFontStyle={newFontStyle}\n                    onChange={onChange}\n                    options={(options && options.items) || []}\n                />\n            ) : (\n                <FormField\n                    id={fieldInputId}\n                    input={renderInput}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default memo(DynamicFormField);\n","import React, { ReactNode } from 'react';\n\nimport { useCheckout } from './CheckoutContext';\nimport StyleContext from './StyleContext';\n\nexport interface StyleProviderProps {\n    children?: ReactNode;\n}\n\nexport const StyleProvider = ({ children }: StyleProviderProps) => {\n    const {\n        checkoutState: {\n            data: { getConfig },\n        },\n    } = useCheckout();\n\n    const config = getConfig();\n\n    let newFontStyle = false;\n\n    if (config) {\n        newFontStyle = Boolean(\n            config.checkoutSettings.features['CHECKOUT-7962.update_font_style_on_checkout_page'] ??\n                true,\n        );\n    }\n\n    return (<StyleContext.Provider value={{ newFontStyle }}>\n        {children}\n    </StyleContext.Provider>);\n};\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import { createLanguageService, LanguageConfig, LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n    children?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '0%', top: '-300%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { MultiShippingTableItemWithType } from './MultishippingType';\n\nexport interface ConsignmentLineItemDetailProps {\n    lineItems: MultiShippingTableItemWithType[] | PhysicalItem[];\n    isMultiShippingSummary?: boolean;\n}\n\nconst renderProductOptionDetails = (item: MultiShippingTableItemWithType | PhysicalItem) => {\n    if (!item.options || !item.options.length) {\n        return null;\n    }\n\n    return (<span className=\"line-item-options\">{` - ${item.options.map(option => option.value).join(' / ')}`}</span>);\n}\n\nexport const renderItemContent = (item: MultiShippingTableItemWithType | PhysicalItem, newFontStyle = false, isMultiShippingSummary = false) => {\n    return <span\n        className={classNames(\n            { 'body-regular': newFontStyle && !isMultiShippingSummary },\n            { 'sub-text': newFontStyle && isMultiShippingSummary },)\n        }>\n        <span className={classNames(\n            { 'body-bold': newFontStyle && !isMultiShippingSummary },\n            { 'sub-text-bold': newFontStyle && isMultiShippingSummary },)\n        }>\n            {`${item.quantity} x `}\n        </span>\n        {item.name}\n        {renderProductOptionDetails(item)}\n    </span>;\n};\n\nconst ConsignmentLineItemDetail: FunctionComponent<ConsignmentLineItemDetailProps> = ({\n    lineItems,\n    isMultiShippingSummary = false,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    return (\n        <ul className=\"consignment-line-item-list\">\n        {lineItems.map((item) => (\n            <li key={item.id}>\n                {renderItemContent(item, newFontStyle, isMultiShippingSummary)}\n            </li>\n        ))}\n    </ul>\n    );\n};\n\nexport default memo(ConsignmentLineItemDetail);\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalFastlane: FunctionComponent = () => (\n    <svg viewBox=\"0 0 101 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M.009 9.791 1.653.298C1.681.1 1.805 0 1.997 0H7.74c.22 0 .332.141.29.354l-.236 1.334c-.028.185-.152.298-.344.298H3.627l-.359 2.058h3.479c.22 0 .332.142.29.354l-.221 1.306C6.788 5.9 6.664 6 6.472 6H2.936l-.662 3.847c-.028.198-.152.298-.344.298H.298c-.22 0-.332-.142-.289-.354m6.78-1.49c0-1.844 1.905-2.468 3.906-2.71.234-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.035.269-1.23.796-.068.185-.18.27-.358.27H7.975c-.18 0-.304-.085-.304-.241 0-.044.014-.086.028-.128.441-1.334 1.67-2.186 3.507-2.186s2.843.71 2.843 2.428c0 .326-.04.739-.11 1.122l-.373 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.11.341-.318.341h-1.283c-.192 0-.304-.1-.304-.282 0-.17.04-.37.069-.554-.524.539-1.2.978-2.402.978-1.42 0-2.332-.725-2.332-1.986zm5.036-1.205.054-.256-.372.041c-.746.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.504-.78 1.725-1.773zm2.446 1.36c-.04-.17-.07-.297-.07-.438 0-.242.124-.313.318-.313h1.588c.192 0 .29.1.332.298.152.554.607.795 1.284.795.773 0 1.186-.326 1.186-.751 0-.369-.415-.54-1.104-.752l-.813-.256c-1.173-.369-2.14-.795-2.14-2.115 0-1.603 1.475-2.483 3.423-2.483 1.519 0 2.762.412 3.12 1.986.015.07.029.141.029.226 0 .142-.124.198-.318.198h-1.504c-.18 0-.276-.085-.36-.27-.165-.37-.538-.596-1.13-.596-.691 0-1.036.27-1.036.653s.332.554 1.284.852l.539.17c1.243.398 2.278.866 2.278 2.059 0 1.732-1.519 2.639-3.59 2.639-1.602 0-2.996-.468-3.313-1.902h-.005zm7.786.455c0-.269.04-.483.083-.725l.676-3.888h-.745c-.22 0-.332-.141-.29-.354l.166-.951c.029-.185.152-.298.344-.298h.8l.29-1.717c.028-.198.152-.298.344-.298h1.519c.22 0 .332.142.29.354l-.29 1.661h.966c.22 0 .332.142.29.356l-.166.951c-.029.186-.152.298-.345.298h-1.02l-.442 2.54c-.083.483-.152.851-.152 1.149 0 .468.152.624.47.624.124 0 .235-.015.318-.015.22 0 .29.17.249.383l-.152.922c-.055.356-.263.412-.76.412-1.297 0-2.443-.071-2.443-1.405m3.995.88 1.63-9.493C27.71.1 27.834 0 28.026 0h1.519c.22 0 .332.141.29.354l-1.643 9.493c-.028.198-.152.298-.344.298h-1.505c-.221 0-.332-.141-.29-.354zm3.147-1.49c0-1.844 1.905-2.468 3.906-2.71.235-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.034.269-1.229.796-.069.185-.18.27-.359.27h-1.407c-.18 0-.304-.085-.304-.241 0-.044.015-.086.028-.128.442-1.334 1.67-2.186 3.508-2.186 1.837 0 2.843.71 2.843 2.428 0 .326-.04.739-.112 1.122l-.372 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.111.341-.318.341h-1.284c-.192 0-.303-.1-.303-.282 0-.17.04-.37.068-.554-.524.539-1.2.978-2.401.978-1.422 0-2.333-.725-2.333-1.986V8.3m4.914-1.205.055-.256-.373.041c-.745.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.505-.78 1.725-1.773zm2.475 2.695 1.16-6.798c.028-.2.152-.298.344-.298h1.421c.22 0 .318.142.275.356l-.11.666c.357-.524 1.13-1.193 2.4-1.193 1.382 0 2.182.88 2.182 2.256 0 .269-.029.54-.083.866l-.731 4.2c-.028.198-.152.298-.344.298h-1.519c-.22 0-.332-.141-.29-.353l.566-3.25c.083-.482.11-.851.11-1.121 0-.766-.274-1.179-.95-1.179-.898 0-1.436.725-1.671 2.086l-.608 3.52c-.028.197-.152.297-.344.297h-1.519c-.22 0-.332-.141-.29-.353m8.063-2.824c0-2.384 1.588-4.456 4.35-4.456 2.14 0 3.45 1.22 3.45 3.42 0 .256-.014.483-.04.71-.028.2-.152.297-.344.297h-5.233c.028 1.051.496 1.689 1.56 1.689.538 0 .91-.198 1.214-.51a.47.47 0 0 1 .387-.186h1.67c.193 0 .305.057.305.2 0 .042-.015.1-.069.198-.705 1.25-1.836 2.071-3.671 2.071-2.098 0-3.576-1.178-3.576-3.434zm5.591-1.405c0-.908-.484-1.476-1.421-1.476-1.009 0-1.616.71-1.78 1.476h3.203zm34.293-.611-1.504 2.6-.764-2.579a.195.195 0 0 0-.185-.141h-1.355a.15.15 0 0 0-.14.195l1.367 4.343-1.236 2.046c-.06.099.009.227.123.227h1.462a.24.24 0 0 0 .206-.12l3.817-6.465a.148.148 0 0 0-.126-.225h-1.46a.23.23 0 0 0-.204.119zM62.935 12c-.135 0-.206-.063-.206-.168 0-.032.01-.074.03-.116l.66-1.613-1.947-5.21c-.03-.084-.052-.126-.052-.189 0-.105.083-.136.216-.136h.7c.135 0 .227.073.268.2l.937 2.816c.176.527.299.886.433 1.329h.02c.176-.517.268-.823.454-1.36l.957-2.785q.078-.202.278-.2h.629c.134 0 .227.041.227.147a.5.5 0 0 1-.052.169l-2.699 6.927c-.051.127-.134.19-.268.19h-.587zm-4.082-1.772c-.927 0-1.524-.422-1.833-.906v.537c0 .158-.083.243-.237.243h-.505c-.154 0-.237-.085-.237-.243V2.803c0-.158.083-.243.237-.243h.577c.154 0 .237.085.237.243v1.381c0 .38 0 .697-.01 1.086.308-.454.906-.875 1.761-.875 1.535 0 2.523 1.244 2.523 2.921s-1.03 2.911-2.513 2.911m-.205-.876c1.009 0 1.596-.801 1.596-2.025s-.597-2.035-1.606-2.035-1.606.855-1.606 2.035.597 2.025 1.617 2.025zm12.82-1.666c1.397 0 2.58-1.043 2.796-2.454.218-1.424-.87-2.666-2.408-2.67h-2.482a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.194zm1.1-2.52c-.082.527-.479.915-1.24.915h-.972l.294-1.916h.955c.788 0 1.044.475.962 1zm7.386-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.656 1.918 0 0-.638 1.929.803 2.988 0 0 1.336 1.019 2.842-.063l-.026.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.182.182 0 0 0-.178-.214zm-1.831 2.72c-.108.705-.675 1.225-1.4 1.225a1.3 1.3 0 0 1-.393-.058c-.537-.178-.844-.705-.757-1.28.108-.706.676-1.226 1.403-1.226q.216 0 .392.06c.54.178.843.707.755 1.28zm11.3.136c1.396 0 2.58-1.043 2.795-2.454.218-1.424-.87-2.666-2.408-2.67h-2.48a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.19v.002zm1.101-2.52c-.082.527-.478.915-1.239.915h-.972l.294-1.916h.955c.786 0 1.043.475.962 1zm7.387-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.655 1.918 0 0-.639 1.929.803 2.988 0 0 1.337 1.019 2.842-.063l-.027.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.183.183 0 0 0-.18-.214m-1.831 2.72c-.109.705-.674 1.225-1.4 1.225q-.216 0-.392-.058c-.537-.178-.845-.705-.757-1.28.108-.706.677-1.226 1.402-1.226q.216 0 .392.06c.537.178.843.707.756 1.28zm3.233-4.82L98.206 9.92a.18.18 0 0 0 .178.212h1.314a.2.2 0 0 0 .192-.169l1.107-7.19a.18.18 0 0 0-.178-.213h-1.315a.2.2 0 0 0-.191.17\"\n            fill=\"#333333\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalFastlane);\n","import React from 'react';\n\nimport { IconPayPalFastlane } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPayPalFastlaneLabel.scss';\n\nconst PoweredByPayPalFastlaneLabel = () => (\n    <div className=\"powered-by-paypal-fastlane\" data-test=\"paypal-fastlane-icon\">\n        <IconPayPalFastlane />\n    </div>\n);\n\nexport default PoweredByPayPalFastlaneLabel;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref, TextareaHTMLAttributes } from 'react';\n\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n    additionalClassName?: string;\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextArea = forwardRef(\n    (\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\n        ref: Ref<HTMLTextAreaElement>,\n    ) => {\n        return (\n            <textarea\n                {...rest}\n                className={\n                    className ||\n                    classNames(\n                        { 'floating-textarea': isFloatingLabelEnabled },\n                        'form-input',\n                        'optimizedCheckout-form-input',\n                        additionalClassName,\n                    )\n                }\n                data-test={testId}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default TextArea;\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: any;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n}\n","import { PaymentMethodId } from './paymentMethod';\n\nexport default function getProviderWithCustomCheckout(methodId?: string | null): string | undefined {\n    if (!methodId) {\n        return undefined;\n    }\n\n    if (methodId === PaymentMethodId.PaypalCommerce || methodId === PaymentMethodId.PaypalCommerceCreditCards) {\n        return PaymentMethodId.PayPalCommerceAcceleratedCheckout;\n    }\n\n    if (methodId === PaymentMethodId.Braintree) {\n        return PaymentMethodId.BraintreeAcceleratedCheckout;\n    }\n\n    return methodId;\n}\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    additionalClassName?: string;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    additionalClassName,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label',\n            additionalClassName,\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport CheckoutContext from './CheckoutContext';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nexport interface CheckoutProviderState {\n    checkoutState: CheckoutSelectors;\n}\n\nexport default class CheckoutProvider extends Component<\n    CheckoutProviderProps,\n    CheckoutProviderState\n> {\n    state: Readonly<CheckoutProviderState>;\n\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne(\n        (checkoutService: CheckoutService, checkoutState: CheckoutSelectors) => {\n            return {\n                checkoutService,\n                checkoutState,\n            };\n        },\n    );\n\n    constructor(props: Readonly<CheckoutProviderProps>) {\n        super(props);\n\n        this.state = {\n            checkoutState: props.checkoutService.getState(),\n        };\n    }\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe((checkoutState) =>\n            this.setState({ checkoutState }),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { checkoutService, children } = this.props;\n        const { checkoutState } = this.state;\n\n        return (\n            <CheckoutContext.Provider value={this.getContextValue(checkoutService, checkoutState)}>\n                {children}\n            </CheckoutContext.Provider>\n        );\n    }\n}\n","import { Address, AddressKey, FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    const fieldValue = address && address[name];\n\n                    addressFormValues[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    )?.toString() || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.date && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.date) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.checkbox) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n    newFontStyle?: boolean;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    newFontStyle = false,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n            { 'sub-header': newFontStyle && !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import { CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName: string, methodId: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n    walletButtonClick(methodId: string): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isPayPalFastlaneCustomer from './is-paypal-fastlane-customer';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\n\nconst usePayPalFastlaneAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getPaymentProviderCustomer } = checkoutState.data;\n    const paymentWithCustomCheckout =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const isPayPalFastlaneEnabled = isPayPalFastlaneMethod(paymentWithCustomCheckout);\n\n    const paymentProviderCustomer = getPaymentProviderCustomer();\n    const paypalFastlaneCustomer = isPayPalFastlaneCustomer(paymentProviderCustomer)\n        ? paymentProviderCustomer\n        : {};\n\n    const customerAuthenticationState =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        paymentProviderCustomer?.authenticationState;\n\n    const paypalFastlaneAddresses = paypalFastlaneCustomer.addresses || [];\n\n    const shouldShowPayPalFastlaneLabel =\n        paypalFastlaneAddresses.length > 0 && isPayPalFastlaneEnabled;\n\n    const shouldShowPayPalFastlaneShippingForm =\n        paypalFastlaneAddresses.length > 0 &&\n        customerAuthenticationState &&\n        customerAuthenticationState !== 'CANCELED' &&\n        customerAuthenticationState !== 'unrecognized';\n\n    return {\n        isPayPalFastlaneEnabled,\n        paypalFastlaneAddresses,\n        shouldShowPayPalFastlaneLabel,\n        shouldShowPayPalFastlaneShippingForm,\n    };\n};\n\nexport default usePayPalFastlaneAddress;\n","import { CurrencyService, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import React, { FunctionComponent, memo } from 'react';\nimport Media, { MediaQueryObject, MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\ninterface QueryResults {\n    [key: string]: boolean;\n}\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: QueryResults) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","import classNames from 'classnames';\nimport React, { FieldsetHTMLAttributes, forwardRef, ReactNode, Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children?: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    Component,\n    createElement,\n    FunctionComponent,\n    memo,\n    useCallback,\n    useMemo,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest}>{renderInnerField}</Field>;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId, meta }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    meta={meta}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\n    componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\n        const {\n            field: { value },\n            onChange = noop,\n        } = this.props;\n        const comparableValue = isDate(value) ? value.getTime() : value;\n        const comparablePrevValue = isDate(prevField.value)\n            ? prevField.value.getTime()\n            : prevField.value;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(value);\n        }\n    }\n\n    render() {\n        const { component = 'input', field, render } = this.props;\n\n        if (render) {\n            return (render as any)(this.props);\n        }\n\n        if (typeof component === 'string') {\n            return createElement(component as any, field);\n        }\n\n        return createElement(component as any, this.props);\n    }\n}\n\nexport default memo(BasicFormField);\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import { createContext, useContext } from 'react';\n\nexport interface StyleContextProps {\n    newFontStyle: boolean;\n}\n\nconst StyleContext = createContext<StyleContextProps | undefined>(undefined);\n\nexport const useStyleContext = () => {\n    const styleContext = useContext(StyleContext);\n\n    if (!styleContext) {\n        throw new Error('useStyleContext must be used within an <StyleContextProvider>');\n    }\n\n    return styleContext;\n};\n\nexport default StyleContext;\n","import CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.indexOf(id) >= 0);\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface LoadingNotificationProps {\n    isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingNotification\">\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\n                <div className=\"spinner\" />\n\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\n                    <TranslatedString id=\"common.loading_text\" />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(LoadingNotification);\n","import React, { PureComponent, ReactNode } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { LoadingOverlay } from '@bigcommerce/checkout/ui';\n\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\ninterface EmptyCartMessageState {\n    isWaiting: boolean;\n}\n\nexport default class EmptyCartMessage extends PureComponent<\n    EmptyCartMessageProps,\n    EmptyCartMessageState\n> {\n    state: EmptyCartMessageState = {\n        isWaiting: true,\n    };\n\n    private waitToken?: number;\n\n    componentDidMount(): void {\n        const { waitInterval } = this.props;\n\n        // @ts-ignore\n        this.waitToken = setTimeout(() => {\n            this.setState({ isWaiting: false });\n        }, waitInterval);\n    }\n\n    componentWillUnmount(): void {\n        clearInterval(this.waitToken);\n    }\n\n    render(): ReactNode {\n        const { loginUrl } = this.props;\n        const { isWaiting } = this.state;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n                <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n            </LoadingOverlay>\n        );\n    }\n}\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n}\n\nexport default CustomerViewType;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote customer-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div className=\"skeleton-container\" key={`skeleton-container-${i}`}>\n                        <div className=\"input-skeleton\" />\n                    </div>\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nimport { isExperimentEnabled, shouldFilterApplePay } from '../common/utility';\n\nconst APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'chasepay',\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n    'googlepaypaypalcommerce',\n    'googlepaytdonlinemart',\n    'stripeocs',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[], checkoutSettings?: CheckoutSettings): string[] => {\n    return methodIds.filter((methodId) => {\n        // TODO: this check have to be deleted after implementation of Apple Pay for third party browsers will be tested and released\n        if (shouldFilterApplePay(methodId, isExperimentEnabled(checkoutSettings, 'PAYPAL-4324.applepay_web_browser_support'))) {\n            return false;\n        }\n\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\n    });\n}\n","import { isApplePayWindow } from './';\n\nexport default function shouldFilterApplePay(methodId: string, isBrowserSupported: boolean): boolean {\n    if (methodId !== 'applepay') {\n        return false;\n    }\n\n    return !isApplePayWindow(window) && !isBrowserSupported;\n}\n","interface ApplePayWindow extends Window {\n    ApplePaySession: void;\n}\n\nexport default function isApplePayWindow(window: Window): window is ApplePayWindow {\n    return 'ApplePaySession' in window;\n}\n","import { ComponentType } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveComponent } from '../common/resolver';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId,\n): ComponentType<CheckoutButtonProps> | undefined {\n    return resolveComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        require('../generated/checkoutButtons'),\n    );\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nconst WALLET_BUTTON_HEIGHT = 36;\n\nexport interface CheckoutButtonProps {\n    containerId: string;\n    methodId: string;\n    isShowingWalletButtonsOnTop?: boolean;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nexport default class CheckoutButton extends PureComponent<CheckoutButtonProps> {\n    componentDidMount() {\n        const {\n            containerId,\n            initialize,\n            isShowingWalletButtonsOnTop,\n            methodId,\n            onError,\n            onClick = noop,\n        } = this.props;\n\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\n            : {};\n\n        initialize({\n            methodId,\n            [methodId]: {\n                ...heightOption,\n                container: containerId,\n                onError,\n                onClick: () => onClick(methodId),\n            },\n        });\n    }\n\n    componentWillUnmount() {\n        const { deinitialize, methodId } = this.props;\n\n        deinitialize({ methodId });\n    }\n\n    render() {\n        const { containerId } = this.props;\n\n        return <div id={containerId} />;\n    }\n}\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst ApplePayButton: FunctionComponent<CheckoutButtonProps> = ({\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                applepay: {\n                    container: rest.containerId,\n                    shippingLabel: localeContext?.language.translate('cart.shipping_text'),\n                    subtotalLabel: localeContext?.language.translate('cart.subtotal_text'),\n                    onError,\n                    onClick: () => onClick(rest.methodId),\n                    onPaymentAuthorize: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} {...rest} />;\n};\n\nexport default ApplePayButton;\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst PayPalCommerceButton: FunctionComponent<CheckoutButtonProps> = ({\n    methodId,\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                [methodId]: {\n                    container: rest.containerId,\n                    onError,\n                    onClick: () => onClick(methodId),\n                    onComplete: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} methodId={methodId} {...rest} />;\n};\n\nexport default PayPalCommerceButton;\n","import { CustomerInitializeOptions, CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\nimport React, { FunctionComponent } from \"react\";\n\nimport CheckoutButton from \"./CheckoutButton\";\nimport { ApplePayButton, PayPalCommerceButton } from \"./customWalletButton\";\n\ninterface CheckoutButtonV1ResolverProps {\n    methodId: string;\n    deinitialize(options: CustomerRequestOptions): void;\n    isShowingWalletButtonsOnTop?: boolean;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodName: string): void;\n}\n\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\n    isShowingWalletButtonsOnTop= false,\n    onError,\n    methodId,\n    ...rest\n}) => {\n    switch (methodId) {\n        case 'applepay':\n            return (\n                <ApplePayButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n\n        case 'paypalcommerce':\n        case 'paypalcommercecredit':\n            return (\n                <PayPalCommerceButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n    }\n\n    return <CheckoutButton\n            containerId={`${methodId}CheckoutButton`}\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n            key={methodId}\n            methodId={methodId}\n            onError={onError}\n            {...rest}\n        />;\n};\n\nexport default CheckoutButtonV1Resolver;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps , useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\nimport { WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\ninterface CheckoutButtonContainerProps {\n    isPaymentStepActive: boolean;\n    checkEmbeddedSupport(methodIds: string[]): void;\n    onUnhandledError(error: Error): void;\n    onWalletButtonClick(methodId: string): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n    availableMethodIds: string[];\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n    isLoading: boolean;\n}\n\nconst paypalCommerceIds = [\n    'paypalcommerce',\n    'paypalcommercecredit',\n    'paypalcommercevenmo',\n];\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\n    {\n        availableMethodIds,\n        checkoutService,\n        checkoutState,\n        checkEmbeddedSupport,\n        isLoading,\n        isPaymentStepActive,\n        onUnhandledError,\n        onWalletButtonClick,\n    }) => {\n    const { language } = useLocale();\n    const { newFontStyle } = useStyleContext();\n\n    try {\n        checkEmbeddedSupport(availableMethodIds);\n    } catch (error) {\n        return null;\n    }\n\n    const renderButtons = () => availableMethodIds.map((methodId) => {\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n            return null;\n        }\n\n        const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\n\n        if (!ResolvedCheckoutButton) {\n            return <CheckoutButtonV1Resolver\n                deinitialize={checkoutService.deinitializeCustomer}\n                initialize={checkoutService.initializeCustomer}\n                isShowingWalletButtonsOnTop={true}\n                key={methodId}\n                methodId={methodId}\n                onClick={onWalletButtonClick}\n                onError={onUnhandledError}\n            />\n        }\n\n        return <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onUnhandledError}\n                    onWalletButtonClick={onWalletButtonClick}\n                />;\n    });\n\n    return (\n        <div className='checkout-button-container'\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\n        >\n            <p className={classNames({\n                'sub-header': newFontStyle,\n            })}>\n                <TranslatedString id=\"remote.start_with_text\" />\n            </p>\n            <div className='checkout-buttons-auto-layout'>\n                <WalletButtonsContainerSkeleton buttonsCount={availableMethodIds.length} isLoading={isLoading}>\n                    <div className=\"checkoutRemote\">\n                        {renderButtons()}\n                    </div>\n                </WalletButtonsContainerSkeleton>\n            </div>\n            <div className='checkout-separator'>\n                <span className={classNames({'sub-header': newFontStyle})}>\n                    <TranslatedString id='remote.or_text' />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n    checkoutState,\n    checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n    const {\n        data: {\n            getConfig,\n            getCustomer,\n            isPaymentDataRequired,\n        },\n        statuses: {\n            isInitializedCustomer,\n        },\n        errors: {\n            getInitializeCustomerError,\n        }\n     } = checkoutState;\n    const config = getConfig();\n    const checkoutSettings = config?.checkoutSettings;\n    const providers = config?.checkoutSettings.remoteCheckoutProviders ?? [];\n\n    const availableMethodIds = getSupportedMethodIds(providers, checkoutSettings);\n    const customer = getCustomer();\n\n    if (!isPaymentDataRequired()) {\n        return null;\n    }\n\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n        return null;\n    }\n\n    const isLoading = availableMethodIds.filter(\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\n    ).length !== availableMethodIds.length;\n\n    return {\n        checkoutService,\n        checkoutState,\n        availableMethodIds,\n        isLoading,\n    }\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({hasBoltAccount});\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { Checkout, Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './getSupportedMethods';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.indexOf(methodId) > -1;\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) === -1,\n    );\n}\n","import { CheckoutSelectors, CustomerRequestOptions, CustomError } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps, useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\nimport { isErrorWithType } from '../common/error';\nimport { isExperimentEnabled } from '../common/utility';\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\n\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\n\nexport interface CustomerInfoProps {\n    onSignOut?(event: CustomerSignOutEvent): void;\n    onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n    isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n    checkoutLink: string;\n    email: string;\n    methodId: string;\n    isRedirectExperimentEnabled: boolean;\n    isSignedIn: boolean;\n    isSigningOut: boolean;\n    logoutLink: string;\n    shouldRedirectToStorefrontForAuth: boolean;\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n    checkoutLink,\n    email,\n    methodId,\n    isSignedIn,\n    isSigningOut,\n    isRedirectExperimentEnabled,\n    logoutLink,\n    shouldRedirectToStorefrontForAuth,\n    onSignOut = noop,\n    onSignOutError = noop,\n    signOut,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    const handleSignOut: () => Promise<void> = async () => {\n        try {\n            if (isRedirectExperimentEnabled && shouldRedirectToStorefrontForAuth) {\n                window.location.assign(`${logoutLink}?redirectTo=${checkoutLink}`);\n\n                return;\n            }\n\n            if (isSupportedSignoutMethod(methodId)) {\n                await signOut({ methodId });\n                onSignOut({ isCartEmpty: false });\n                window.location.reload();\n            } else {\n                await signOut();\n                onSignOut({ isCartEmpty: false });\n            }\n        } catch (error) {\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\n                onSignOut({ isCartEmpty: true });\n            } else {\n                onSignOutError(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\n            <div\n                className={classNames('customerView-body',\n                    { 'body-regular': newFontStyle },\n                )}\n                data-test=\"customer-info\"\n            >\n                {email}\n            </div>\n\n            <div className=\"customerView-actions\">\n                {isSignedIn && (\n                    <Button\n                        className={newFontStyle ? 'body-regular' : ''}\n                        isLoading={isSigningOut}\n                        onClick={handleSignOut}\n                        size={ButtonSize.Tiny}\n                        testId=\"sign-out-link\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"customer.sign_out_action\" />\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer, getConfig },\n        statuses: { isSigningOut },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const config = getConfig();\n\n    if (!billingAddress || !checkout || !customer || !config) {\n        return null;\n    }\n\n    const { checkoutSettings, links: { checkoutLink, logoutLink } } = config;\n\n    const isRedirectExperimentEnabled = isExperimentEnabled(checkoutSettings, 'CHECKOUT-9138.redirect_to_storefront_for_auth');\n\n    const methodId =\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n    return {\n        email: billingAddress.email || customer.email,\n        methodId,\n        isRedirectExperimentEnabled,\n        isSignedIn: canSignOut(customer, checkout, methodId),\n        isSigningOut: isSigningOut(),\n        logoutLink,\n        checkoutLink,\n        shouldRedirectToStorefrontForAuth: checkoutSettings.shouldRedirectToStorefrontForAuth,\n        signOut: checkoutService.signOutCustomer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst CustomerSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\n    const skeleton = (\n        <div className=\"checkout-form customer-skeleton\">\n            <div className=\"customerEmail-container\">\n                <div className=\"customerEmail-body\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"button-skeleton skeleton-container subscription-skeleton\" />\n                </div>\n                <div className=\"customerEmail-action customerEmail-floating--enabled\">\n                    <div className=\"button-skeleton skeleton-container\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default CustomerSkeleton;\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n}\n\nexport default AmazonPayV2Button;\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div') as unknown as HTMLElement;\n    const amazonButton = container?.shadowRoot?.querySelector('.amazonpay-button-view1') as unknown as HTMLElement;\n\n    if (container && amazonButton) {\n        amazonButton.style.height = '36px';\n\n        return;\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n}\n","import {\n    CheckoutSelectors,\n    CheckoutService,\n    CheckoutSettings,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\n\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from './customWalletButton';\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButton from './CheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\nimport { isExperimentEnabled } from '../common/utility';\n\nexport interface CheckoutButtonListProps {\n    checkoutSettings: CheckoutSettings;\n    hideText?: boolean;\n    isInitializing?: boolean;\n    isShowingWalletButtonsOnTop?: boolean;\n    methodIds?: string[];\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onClick?(methodId: string): void;\n    onError?(error: Error): void;\n}\n\ninterface WithCheckoutCheckoutButtonListProps {\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n}\n\nconst CheckoutButtonList: FunctionComponent<WithCheckoutCheckoutButtonListProps & CheckoutButtonListProps> = ({\n    checkoutService,\n    checkoutSettings,\n    checkoutState,\n    hideText = false,\n    isInitializing = false,\n    isShowingWalletButtonsOnTop = false,\n    methodIds = [],\n    checkEmbeddedSupport,\n    deinitialize,\n    initialize,\n    onClick = noop,\n    onError,\n}) => {\n    const { language } = useLocale();\n\n    const shouldUseResolverButtonComponentsApproach = isExperimentEnabled(checkoutSettings, 'PAYPAL-5502.update_wallet_buttons_implementation_in_customer_step');\n\n    const supportedMethodIds = getSupportedMethodIds(methodIds, checkoutSettings);\n\n    if (supportedMethodIds.length === 0) {\n        return null;\n    }\n\n    if (checkEmbeddedSupport) {\n        try {\n            checkEmbeddedSupport(supportedMethodIds);\n        } catch (error) {\n            if (error instanceof Error && onError) {\n                onError(error);\n            } else {\n                throw error;\n            }\n\n            return null;\n        }\n    }\n\n    const renderButtons = () => {\n        if (shouldUseResolverButtonComponentsApproach) {\n            return supportedMethodIds.map((methodId) => {\n                const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\n\n                if (!ResolvedCheckoutButton) {\n                    return <CheckoutButtonV1Resolver\n                        deinitialize={deinitialize}\n                        initialize={initialize}\n                        isShowingWalletButtonsOnTop={false}\n                        key={methodId}\n                        methodId={methodId}\n                        onClick={onClick}\n                        onError={onClick}\n                    />\n                }\n\n                return <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onClick}\n                    onWalletButtonClick={onClick}\n                />;\n            });\n        }\n\n        return methodIds.map((methodId) => {\n            if (methodId === 'applepay') {\n                return (\n                    <ApplePayButton\n                        containerId={`${methodId}CheckoutButton`}\n                        key={methodId}\n                        methodId={methodId}\n                        isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                        deinitialize={deinitialize}\n                        initialize={initialize}\n                        onClick={onClick}\n                        onError={onError}\n                    />\n                );\n            }\n\n            if (methodId === 'amazonpay') {\n                return (\n                    <AmazonPayV2Button\n                        containerId={`${methodId}CheckoutButton`}\n                        key={methodId}\n                        methodId={methodId}\n                        isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                        deinitialize={deinitialize}\n                        initialize={initialize}\n                        onClick={onClick}\n                        onError={onError}\n                    />\n                );\n            }\n\n            if (methodId === 'paypalcommerce' || methodId === 'paypalcommercecredit') {\n                return (\n                    <PayPalCommerceButton\n                        containerId={`${methodId}CheckoutButton`}\n                        key={methodId}\n                        methodId={methodId}\n                        isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                        deinitialize={deinitialize}\n                        initialize={initialize}\n                        onClick={onClick}\n                        onError={onError}\n                    />\n                );\n            }\n\n            return (\n                <CheckoutButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                    deinitialize={deinitialize}\n                    initialize={initialize}\n                    onClick={onClick}\n                    onError={onError}\n                />\n            );\n        });\n    };\n\n    return (\n        <>\n            {!isInitializing && !hideText && (\n                <p>\n                    <TranslatedString id=\"remote.continue_with_text\" />\n                </p>\n            )}\n\n            <div className=\"checkoutRemote\">\n                {renderButtons()}\n            </div>\n        </>\n    );\n};\n\nfunction mapToCheckoutButtonListProps({\n  checkoutState,\n  checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonListProps | null {\n    return {\n        checkoutService,\n        checkoutState,\n    };\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonListProps)(CheckoutButtonList));\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\n// we need to keep this regex for login validation as accounts might have been created using this regex\nexport const EMAIL_REGEXP =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport { EMAIL_REGEXP } from './validationPatterns';\n\nexport interface EmailValidationSchemaOptions {\n    language: LanguageService;\n}\n\nexport default function getEmailValidationSchema({\n    language,\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\n    return object({\n        email: string()\n            .max(256)\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\n            .required(language.translate('customer.email_required_error')),\n    });\n}\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport {\n    CustomFormFieldValues,\n    getCustomFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport { PasswordRequirements } from './getPasswordRequirements';\n\nexport type CreateAccountFormValues = {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    acceptsMarketingEmails?: string[];\n    token?: string;\n} & CustomFormFieldValues;\n\nexport interface CreateCustomerValidationSchema {\n    formFields: FormField[];\n    language: LanguageService;\n    passwordRequirements: PasswordRequirements;\n}\n\n/* istanbul ignore next */ // Currently no limitation on new customer's name\nfunction getTranslateCreateCustomerError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    return (type, { label, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            return language.translate('customer.required_error', { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate('customer.max_error', { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate('customer.min_error', { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate('customer.invalid_characters_error', { label });\n        }\n    };\n}\n\nexport default memoize(function getCreateCustomerValidationSchema({\n    formFields,\n    language,\n    passwordRequirements: { description, numeric, alpha, minLength },\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\n    return object({\n        firstName: string().required(language.translate('address.first_name_required_error')),\n        lastName: string().required(language.translate('address.last_name_required_error')),\n        password: string()\n            .required(language.translate('customer.password_required_error') || description)\n            .matches(\n                numeric,\n                language.translate('customer.password_number_required_error') || description,\n            )\n            .matches(\n                alpha,\n                language.translate('customer.password_letter_required_error') || description,\n            )\n            .min(\n                minLength,\n                language.translate('customer.password_under_minimum_length_error') || description,\n            )\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\n    })\n        .concat(getEmailValidationSchema({ language }))\n        .concat(\n            getCustomFormFieldsValidationSchema({\n                formFields,\n                translate: getTranslateCreateCustomerError(language),\n            }),\n        );\n});\n","/* istanbul ignore file */\n\n// TODO: CHECKOUT-9010 Cover 'Customer registration failure due to using an existing email' in functional tests repo\nimport { FormField } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useMemo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { isRequestError } from '../common/error';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { DynamicFormField, Fieldset, Form } from '../ui/form';\n\nimport getCreateCustomerValidationSchema, {\n    CreateAccountFormValues,\n} from './getCreateCustomerValidationSchema';\nimport getPasswordRequirements from './getPasswordRequirements';\n\nimport './CreateAccountForm.scss';\n\nexport interface CreateAccountFormProps {\n    formFields: FormField[];\n    createAccountError?: Error;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    isCreatingAccount?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onSubmit(values: CreateAccountFormValues): void;\n}\n\nfunction getAcceptsMarketingEmailsDefault(defaultShouldSubscribe: boolean, requiresMarketingConsent: boolean): string[] {\n    if (defaultShouldSubscribe) {\n        return ['1'];\n    }\n\n    return requiresMarketingConsent ? [] : ['0'];\n}\n\nfunction transformFormFieldsData(formFields: FormField[], defaultShouldSubscribe: boolean): FormField[] {\n    return formFields.map(field => {\n        if (field.name === 'acceptsMarketingEmails') {\n            const { options } = field;\n            const items = options?.items || [];\n\n            const updatedItems = items.map(item => {\n                return {\n                    value: defaultShouldSubscribe ? '1' : item.value,\n                    label: item.label,\n                }\n            });\n\n            return {\n                ...field,\n                options: {\n                    items: updatedItems,\n                }\n            }\n        }\n\n        return field;\n    });\n}\n\nconst CreateAccountForm: FunctionComponent<\n    CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\n> = ({ fixNewsletterCheckboxExperimentEnabled, formFields, createAccountError, isCreatingAccount, isExecutingPaymentMethodCheckout, onCancel, isFloatingLabelEnabled, defaultShouldSubscribe }) => {\n    const { newFontStyle } = useStyleContext();\n    const createAccountErrorMessage = useMemo(() => {\n        if (!createAccountError) {\n            return;\n        }\n\n        if (isRequestError(createAccountError) && createAccountError.status === 409) {\n            const splitMessage = createAccountError.message.split(':');\n\n            if (splitMessage.length > 1) {\n                return (\n                    <TranslatedString\n                        data={{ email: splitMessage[1].trim() }}\n                        id=\"customer.email_in_use_text\"\n                    />\n                );\n            }\n\n            return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\n        }\n\n        return createAccountError.message;\n    }, [createAccountError]);\n\n    const fields = fixNewsletterCheckboxExperimentEnabled ?\n        transformFormFieldsData(formFields, defaultShouldSubscribe): formFields;\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset>\n                {createAccountErrorMessage && (\n                    <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\n                )}\n                <div className=\"create-account-form\">\n                    {fields.map((field) => (\n                        <DynamicFormField\n                            autocomplete={field.name}\n                            extraClass={`dynamic-form-field--${field.name}`}\n                            field={field}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            key={field.id}\n                            newFontStyle={newFontStyle}\n                            parentFieldName={field.custom ? 'customFields' : undefined}\n                        />\n                    ))}\n                </div>\n            </Fieldset>\n\n            <div className=\"form-actions\">\n                <Button\n                    className={newFontStyle ? 'body-bold' : ''}\n                    disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    id=\"checkout-customer-create\"\n                    isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    testId=\"customer-continue-create\"\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString id=\"customer.create_account_action\" />\n                </Button>\n\n                <a\n                    className={classNames('button optimizedCheckout-buttonSecondary',\n                        { 'body-bold': newFontStyle })}\n                    data-test=\"customer-cancel-button\"\n                    href=\"#\"\n                    id=\"checkout-customer-cancel\"\n                    onClick={preventDefault(onCancel)}\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </a>\n            </div>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\n        handleSubmit: (values, { props: { onSubmit = noop } }) => {\n            onSubmit(values);\n        },\n        mapPropsToValues: ({ defaultShouldSubscribe, requiresMarketingConsent }) => ({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            customFields: {},\n            acceptsMarketingEmails: getAcceptsMarketingEmailsDefault(defaultShouldSubscribe, requiresMarketingConsent),\n        }),\n        validationSchema: ({\n            language,\n            formFields,\n        }: CreateAccountFormProps & WithLanguageProps) => {\n            const passwordRequirements = formFields.find(\n                ({ requirements }) => requirements,\n            )?.requirements;\n\n            if (!passwordRequirements) {\n                throw new Error('Password requirements missing');\n            }\n\n            const schema = getCreateCustomerValidationSchema({\n                language,\n                formFields,\n                passwordRequirements: getPasswordRequirements(passwordRequirements),\n            });\n\n            return schema;\n        },\n    })(CreateAccountForm),\n);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface EmailFieldProps {\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string): void;\n}\n\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\n    const { newFontStyle } = useStyleContext();\n\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <TextInput\n                {...props.field}\n                autoComplete={props.field.name}\n                id={props.field.name}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                newFontStyle={newFontStyle}\n                type=\"email\"\n            />\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\n\n    return (\n        <FormField\n            input={renderInput}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            labelContent={labelContent}\n            name=\"email\"\n            newFontStyle={newFontStyle}\n            onChange={onChange}\n        />\n    );\n};\n\nexport default memo(EmailField);\n","import { SignInEmail } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useMemo } from 'react';\n\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { LoadingSpinner } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Form } from '../ui/form';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\n\nexport interface EmailLoginFormProps {\n    email?: string;\n    isOpen: boolean;\n    isSendingEmail?: boolean;\n    emailHasBeenRequested?: boolean;\n    sentEmail?: SignInEmail;\n    sentEmailError?: any;\n    isFloatingLabelEnabled?: boolean;\n    onRequestClose?(): void;\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\n}\n\nexport interface EmailLoginFormValues {\n    email: string;\n}\n\nconst EmailLoginForm: FunctionComponent<\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\n> = ({\n    email,\n    isOpen,\n    isSendingEmail = false,\n    emailHasBeenRequested,\n    onRequestClose = noop,\n    sentEmailError,\n    sentEmail,\n    submitForm,\n    isFloatingLabelEnabled,\n    values: { email: formEmail },\n}) => {\n    const modalHeaderStringId = useMemo(() => {\n        if (emailHasBeenRequested) {\n            if (sentEmailError) {\n                return 'common.error_heading';\n            }\n\n            return 'login_email.sent_header';\n        }\n\n        if (email) {\n            return 'login_email.header_with_email';\n        }\n\n        return 'login_email.header';\n    }, [emailHasBeenRequested, sentEmailError, email]);\n\n    const okButton = useMemo(\n        () => (\n            <div className=\"modal-footer\">\n                <Button onClick={onRequestClose}>\n                    <TranslatedString id=\"common.ok_action\" />\n                </Button>\n            </div>\n        ),\n        [onRequestClose],\n    );\n\n    const footer = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return okButton;\n        }\n\n        if (emailHasBeenRequested && !sentEmailError) {\n            if (isSendingEmail) {\n                return <LoadingSpinner isLoading />;\n            }\n\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\n                return okButton;\n            }\n\n            return (\n                <p>\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\n                </p>\n            );\n        }\n\n        return (\n            <div className=\"modal-footer\">\n                <Button\n                    className=\"optimizedCheckout-buttonSecondary\"\n                    onClick={onRequestClose}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </Button>\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\n                    <TranslatedString id=\"login_email.send\" />\n                </Button>\n            </div>\n        );\n    }, [\n        sentEmailError,\n        emailHasBeenRequested,\n        okButton,\n        submitForm,\n        isSendingEmail,\n        onRequestClose,\n        sentEmail,\n    ]);\n\n    const error = useMemo(() => {\n        if (!sentEmailError) {\n            return null;\n        }\n\n        const { status } = sentEmailError;\n\n        return (\n            <Alert type={AlertType.Error}>\n                {status === 429 ? (\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\n                ) : (\n                    <TranslatedString\n                        id={\n                            status === 404\n                                ? 'login_email.error_not_found'\n                                : 'login_email.error_server'\n                        }\n                    />\n                )}\n            </Alert>\n        );\n    }, [sentEmailError]);\n\n    const form = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return null;\n        }\n\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\n            const { expiry, sent_email } = sentEmail;\n\n            return (\n                <p>\n                    <TranslatedHtml\n                        data={{\n                            minutes: Math.round(expiry / 60),\n                        }}\n                        id={\n                            sent_email === 'sign_in'\n                                ? 'login_email.sent_text'\n                                : 'customer.reset_password_before_login_error'\n                        }\n                    />\n                </p>\n            );\n        }\n\n        if (emailHasBeenRequested && !sentEmail) {\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\n        }\n\n        return (\n            <>\n                <p>\n                    <TranslatedString id=\"login_email.text\" />\n                </p>\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n            </>\n        );\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\n\n    return (\n        <Modal\n            additionalBodyClassName=\"modal--withText\"\n            additionalModalClassName=\"modal--medium\"\n            header={\n                <ModalHeader>\n                    <TranslatedString id={modalHeaderStringId} />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={true}\n        >\n            <Form>\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\n                {error}\n                {form}\n                {footer}\n            </Form>\n        </Modal>\n    );\n};\n\nexport default withLanguage(\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n        }),\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\n            onSendLoginEmail(values);\n        },\n        validationSchema: ({ language }: WithLanguageProps) =>\n            getEmailValidationSchema({ language }),\n    })(memo(EmailLoginForm)),\n);\n","import { FastlaneHostWindow } from './types';\n\nexport default function isFastlaneHostWindow(window: Window): window is FastlaneHostWindow {\n    /* eslint-disable no-prototype-builtins */\n    return window.hasOwnProperty('paypalFastlane') || window.hasOwnProperty('braintreeFastlane');\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isFastlaneHostWindow from './is-fastlane-window';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\nimport { FastlanePrivacySettings } from './types';\n\nimport './PayPalFastlaneWatermark.scss';\n\nconst PayPalFastlaneWatermark: FunctionComponent = () => {\n    const { checkoutState } = useCheckout();\n    const { getPaymentMethod, getConfig } = checkoutState.data;\n    const providerWithCustomCheckout = getConfig()?.checkoutSettings?.providerWithCustomCheckout;\n\n    const paymentMethod =\n        providerWithCustomCheckout &&\n        isPayPalFastlaneMethod(providerWithCustomCheckout) &&\n        getPaymentMethod(providerWithCustomCheckout);\n\n    const shouldRenderFastlaneWatermark =\n        !!paymentMethod &&\n        isFastlaneHostWindow(window) &&\n        paymentMethod?.initializationData?.isFastlanePrivacySettingEnabled;\n\n    useEffect(() => {\n        if(shouldRenderFastlaneWatermark && isFastlaneHostWindow(window)) {\n            const fastlane = isBraintreeFastlaneMethod(providerWithCustomCheckout)\n                ? window.braintreeFastlane\n                : window.paypalFastlane;\n\n            fastlane.FastlaneWatermarkComponent({\n                includeAdditionalInfo: true,\n            })\n                .then((result: FastlanePrivacySettings) => {\n                    result.render('#paypalFastlaneWatermark');\n                });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (shouldRenderFastlaneWatermark) {\n        return (\n            <div className='paypalFastlaneWatermark-container'>\n                <div id='paypalFastlaneWatermark' data-test='paypalFastlaneWatermark' />\n            </div>\n        );\n    }\n\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <></>;\n}\n\nexport default PayPalFastlaneWatermark;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { CheckboxFormField, Fieldset } from '../ui/form';\n\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string, newFontStyle?: boolean }> = ({ url, newFontStyle }) => (\n    <CheckboxFormField\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\n        name=\"privacyPolicy\"\n        newFontStyle={newFontStyle}\n        testId=\"privacy-policy-checkbox\"\n    />\n);\n\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string, newFontStyle?: boolean }> = ({ url, newFontStyle }) => (\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\n        <PrivacyPolicyCheckboxFieldLink newFontStyle={newFontStyle} url={url} />\n    </Fieldset>\n);\n\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string, newFontStyle?: boolean }> = ({ url, newFontStyle }) => (\n    <p className={newFontStyle ? 'body-regular' : ''}>\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\n    </p>\n);\n\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\n    url,\n    isExpressPrivacyPolicy,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    if (isExpressPrivacyPolicy) {\n        return <PrivacyPolicyAutoConsent newFontStyle={newFontStyle} url={url} />;\n    }\n\n    return <PrivacyPolicyFieldset newFontStyle={newFontStyle} url={url} />;\n};\n\nexport default memo(PrivacyPolicyField);\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { boolean, BooleanSchema, object, ObjectSchema } from 'yup';\n\nexport interface PrivacyPolicyValidatonSchemaProps {\n    isRequired: boolean;\n    language: LanguageService;\n}\n\nexport default function getPrivacyPolicyValidationSchema({\n    isRequired,\n    language,\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\n    const schemaFields: {\n        privacyPolicy?: BooleanSchema;\n    } = {};\n\n    if (isRequired) {\n        schemaFields.privacyPolicy = boolean().oneOf(\n            [true],\n            language.translate('privacy_policy.required_error'),\n        );\n    }\n\n    return object(schemaFields);\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { Input, Label } from '../ui/form';\n\nexport type SubscribeFieldProps = FieldProps<boolean> & {\n    requiresMarketingConsent: boolean;\n};\n\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\n    field,\n    requiresMarketingConsent,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    return (\n        <>\n            <Input\n                {...field}\n                checked={field.value}\n                className=\"form-checkbox\"\n                id={field.name}\n                testId=\"should-subscribe-checkbox\"\n                type=\"checkbox\"\n                value={String(field.value)}\n            />\n\n            <Label\n                additionalClassName={newFontStyle ? 'body-regular' : ''}\n                htmlFor={field.name}\n            >\n                <TranslatedHtml\n                    id={\n                        requiresMarketingConsent\n                            ? 'customer.guest_marketing_consent'\n                            : 'customer.guest_subscribe_to_newsletter_text'\n                    }\n                />\n            </Label>\n        </>\n    );\n}\n\nexport default memo(SubscribeField);\n","export class SubscribeSessionStorage {\n    static key = 'shouldSubscribe';\n\n    static setSubscribeStatus(shouldSubscribe: boolean) {\n        sessionStorage.setItem(this.key, `${shouldSubscribe}`)\n    }\n\n    static getSubscribeStatus(): boolean {\n        const value = sessionStorage.getItem(this.key);\n\n        return value === 'true';\n    }\n\n    static removeSubscribeStatus() {\n        sessionStorage.removeItem(this.key);\n    }\n}\n","import classNames from 'classnames';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect } from 'react';\nimport { object, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useCheckout, useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\nimport { PayPalFastlaneWatermark } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\n\nimport { isExperimentEnabled } from '../common/utility';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport EmailField from './EmailField';\nimport SubscribeField from './SubscribeField';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nfunction getShouldSubscribeValue(requiresMarketingConsent: boolean, defaultShouldSubscribe: boolean) {\n    if (SubscribeSessionStorage.getSubscribeStatus()) {\n        return true;\n    }\n\n    return requiresMarketingConsent ? false : defaultShouldSubscribe\n}\n\nexport interface GuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    continueAsGuestButtonLabelId: string;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    isLoading: boolean;\n    privacyPolicyUrl?: string;\n    isExpressPrivacyPolicy: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldShowEmailWatermark: boolean;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    onShowLogin(): void;\n}\n\nexport interface GuestFormValues {\n    email: string;\n    shouldSubscribe: boolean;\n}\n\nconst GuestForm: FunctionComponent<\n    GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\n> = ({\n    canSubscribe,\n    checkoutButtons,\n    continueAsGuestButtonLabelId,\n    defaultShouldSubscribe,\n    isLoading,\n    onChangeEmail,\n    onShowLogin,\n    privacyPolicyUrl,\n    requiresMarketingConsent,\n    isExpressPrivacyPolicy,\n    isFloatingLabelEnabled,\n    shouldShowEmailWatermark,\n    setFieldValue,\n}) => {\n    const {\n        checkoutState: {\n            data: { getConfig }\n        }\n    } = useCheckout();\n    const { newFontStyle } = useStyleContext();\n\n    const config = getConfig();\n\n    const renderField = useCallback(\n        (fieldProps: FieldProps<boolean>) => (\n            <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\n        ),\n        [requiresMarketingConsent],\n    );\n\n    useEffect(() => {\n        void setFieldValue(\n            'shouldSubscribe',\n            getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            );\n    }, [requiresMarketingConsent, defaultShouldSubscribe]);\n\n    if (!config) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            shouldRedirectToStorefrontForAuth,\n        },\n        links: {\n            checkoutLink,\n            loginLink,\n        }\n    } = config;\n\n    const isRedirectExperimentEnabled = isExperimentEnabled(config.checkoutSettings, 'CHECKOUT-9138.redirect_to_storefront_for_auth');\n\n    const handleLogin: () => void = () => {\n        if (shouldRedirectToStorefrontForAuth && isRedirectExperimentEnabled) {\n            window.location.assign(`${loginLink}?redirectTo=${checkoutLink}`);\n\n            return;\n        }\n\n        return onShowLogin();\n    }\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-guest\"\n            testId=\"checkout-customer-guest\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.guest_customer_text\" />\n                    </Legend>\n                }\n            >\n                <div className=\"customerEmail-container\">\n                    <div className=\"customerEmail-body\">\n                        <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail}/>\n\n                        {shouldShowEmailWatermark && <PayPalFastlaneWatermark />}\n\n                        {(canSubscribe || requiresMarketingConsent) && (\n                            <BasicFormField name=\"shouldSubscribe\" render={renderField} />\n                        )}\n                    </div>\n\n                    <div\n                        className={classNames('form-actions customerEmail-action', {\n                            'customerEmail-floating--enabled': isFloatingLabelEnabled,\n                        })}\n                    >\n                        <Button\n                            className={classNames('customerEmail-button', {\n                                'body-bold': newFontStyle,\n                            })}\n                            id=\"checkout-customer-continue\"\n                            isLoading={isLoading}\n                            testId=\"customer-continue-as-guest-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </Button>\n                    </div>\n                </div>\n\n                {privacyPolicyUrl && (\n                    <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                )}\n\n                {!isLoading && (\n                    <p className={classNames('customer-login-link',\n                        { 'body-regular': newFontStyle })}\n                    >\n                        <TranslatedString id=\"customer.login_text\" />{' '}\n                        <a\n                            data-test=\"customer-continue-button\"\n                            id=\"checkout-customer-login\"\n                            onClick={handleLogin}\n                            role=\"button\"\n                            tabIndex={0}\n                        >\n                            <TranslatedString id=\"customer.login_action\" />\n                        </a>\n                    </p>\n                )}\n\n                {checkoutButtons}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\n        mapPropsToValues: ({\n            email = '',\n            defaultShouldSubscribe = false,\n            requiresMarketingConsent,\n        }) => ({\n            email,\n            shouldSubscribe: getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            privacyPolicy: false,\n        }),\n        handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n            onContinueAsGuest(values);\n        },\n        validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: GuestFormProps & WithLanguageProps) => {\n            const email = string()\n                .email(language.translate('customer.email_invalid_error'))\n                .max(256)\n                .required(language.translate('customer.email_required_error'));\n\n            const baseSchema = object({ email });\n\n            if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                return baseSchema.concat(\n                    getPrivacyPolicyValidationSchema({\n                        isRequired: !!privacyPolicyUrl,\n                        language,\n                    }),\n                );\n            }\n\n            return baseSchema;\n        },\n    })(memo(GuestForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEye: FunctionComponent = () => (\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEye);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEyeSlash: FunctionComponent = () => (\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEyeSlash);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { FormField, TextInput } from '../ui/form';\nimport Label from '../ui/form/Label';\nimport { IconEye, IconEyeSlash } from '../ui/icon';\nimport { Toggle } from '../ui/toggle';\n\ninterface WithFloatingLabel {\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\n    const { newFontStyle } = useStyleContext();\n\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <Toggle openByDefault={false}>\n                {({ isOpen, toggle }) => (\n                    <div className=\"form-field-password\">\n                        <TextInput\n                            {...props.field}\n                            additionalClassName=\"form-input--withIcon\"\n                            id={props.field.name}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            newFontStyle={newFontStyle}\n                            type={isOpen ? 'text' : 'password'}\n                        />\n                        {isFloatingLabelEnabled && (\n                            <Label\n                                additionalClassName={newFontStyle ? 'floating-form-field-label' : ''}\n                                htmlFor={props.field.name}\n                                id={`${props.field.name}-label`}\n                                isFloatingLabelEnabled={true}\n                            >\n                                <TranslatedString id=\"customer.password_label\" />\n                            </Label>\n                        )}\n                        <a\n                            className=\"form-toggle-password form-input-icon\"\n                            href=\"#\"\n                            onClick={toggle}\n                        >\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\n                        </a>\n                    </div>\n                )}\n            </Toggle>\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\n\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\n};\n\nexport default memo(PasswordField);\n","import classNames from 'classnames';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport CustomerViewType from './CustomerViewType';\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport mapErrorMessage from './mapErrorMessage';\nimport PasswordField from './PasswordField';\n\nexport interface LoginFormProps {\n    canCancel?: boolean;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    forgotPasswordUrl: string;\n    isSignInEmailEnabled?: boolean;\n    isSendingSignInEmail?: boolean;\n    isSigningIn?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    signInError?: Error;\n    signInEmailError?: Error;\n    viewType?: Omit<CustomerViewType, 'guest'>;\n    passwordlessLogin?: boolean;\n    shouldShowCreateAccountLink?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onCreateAccount?(): void;\n    onChangeEmail?(email: string): void;\n    onSignIn(data: LoginFormValues): void;\n    onSendLoginEmail?(): void;\n    onContinueAsGuest?(): void;\n}\n\nexport interface LoginFormValues {\n    email: string;\n    password: string;\n}\n\nconst LoginForm: FunctionComponent<\n    LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\n> = ({\n    canCancel,\n    continueAsGuestButtonLabelId,\n    forgotPasswordUrl,\n    email,\n    isSignInEmailEnabled,\n    isSigningIn,\n    isExecutingPaymentMethodCheckout,\n    language,\n    onCancel = noop,\n    onChangeEmail,\n    onContinueAsGuest,\n    onCreateAccount = noop,\n    onSendLoginEmail = noop,\n    signInError,\n    shouldShowCreateAccountLink,\n    isFloatingLabelEnabled,\n    viewType = CustomerViewType.Login,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    const changeEmailLink = useCallback(() => {\n        if (!email) {\n            return null;\n        }\n\n        return (\n            <p className=\"optimizedCheckout-contentSecondary\">\n                <TranslatedLink\n                    data={{ email }}\n                    id=\"customer.guest_could_login_change_email\"\n                    onClick={onCancel}\n                    testId=\"change-email\"\n                />\n            </p>\n        );\n    }, [email, onCancel]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.returning_customer_text\" />\n                    </Legend>\n                }\n            >\n                {signInError && (\n                    <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\n                        {mapErrorMessage(signInError, (key) => language.translate(key))}\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.SuggestedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.CancellableEnforcedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.EnforcedLogin && (\n                    <Alert type={AlertType.Error}>\n                        <TranslatedLink\n                            id=\"customer.guest_temporary_disabled\"\n                            onClick={onCreateAccount}\n                        />\n                    </Alert>\n                )}\n\n                {(viewType === CustomerViewType.Login ||\n                    viewType === CustomerViewType.EnforcedLogin) && (\n                    <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n                )}\n\n                <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n\n                <p className={classNames('form-legend-container', { 'body-cta': newFontStyle })}>\n                    <span>\n                        { isSignInEmailEnabled &&\n                            <TranslatedLink\n                                id=\"login_email.link\"\n                                onClick={ onSendLoginEmail }\n                                testId=\"customer-signin-link\"\n                            />\n                        }\n                        { !isSignInEmailEnabled &&\n                            <a\n                                data-test=\"forgot-password-link\"\n                                href={ forgotPasswordUrl }\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <TranslatedString id=\"customer.forgot_password_action\" />\n                            </a>\n                        }\n                    </span>\n                    { viewType === CustomerViewType.Login && shouldShowCreateAccountLink &&\n                        <span>\n                            <TranslatedLink\n                                id=\"customer.create_account_to_continue_text\"\n                                onClick={onCreateAccount}\n                            />\n                        </span>\n                    }\n                </p>\n\n                <div className=\"form-actions\">\n                    <Button\n                        className={newFontStyle ? 'body-bold' : ''}\n                        disabled={isSigningIn || isExecutingPaymentMethodCheckout}\n                        id=\"checkout-customer-continue\"\n                        isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\n                        testId=\"customer-continue-button\"\n                        type=\"submit\"\n                        variant={ButtonVariant.Primary}\n                    >\n                        <TranslatedString id=\"customer.sign_in_action\" />\n                    </Button>\n\n                    {viewType === CustomerViewType.SuggestedLogin && (\n                        <a\n                            className={classNames('button optimizedCheckout-buttonSecondary',\n                                { 'body-bold': newFontStyle })}\n                            data-test=\"customer-guest-continue\"\n                            href=\"#\"\n                            id=\"checkout-guest-continue\"\n                            onClick={preventDefault(onContinueAsGuest)}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </a>\n                    )}\n\n                    {canCancel &&\n                        viewType !== CustomerViewType.EnforcedLogin &&\n                        viewType !== CustomerViewType.SuggestedLogin && (\n                            <a\n                            className={classNames('button optimizedCheckout-buttonSecondary',\n                                { 'body-bold': newFontStyle })}\n                                data-test=\"customer-cancel-button\"\n                                href=\"#\"\n                                id=\"checkout-customer-cancel\"\n                                onClick={preventDefault(onCancel)}\n                            >\n                                <TranslatedString\n                                    id={\n                                        viewType === CustomerViewType.CancellableEnforcedLogin\n                                            ? 'login_email.use_another_email'\n                                            : 'common.cancel_action'\n                                    }\n                                />\n                            </a>\n                        )}\n                </div>\n\n                {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n            password: '',\n        }),\n        handleSubmit: (values, { props: { onSignIn } }) => {\n            onSignIn(values);\n        },\n        validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\n            getEmailValidationSchema({ language }).concat(\n                object({\n                    password: string().required(\n                        language.translate('customer.password_required_error'),\n                    ),\n                }),\n            ),\n    })(memo(LoginForm)),\n);\n","export default function mapErrorMessage(\n    error: any, // TODO: Export `RequestError`\n    translate: (key: string) => string,\n): string {\n    const type = error.body && error.body.type;\n\n    switch (type) {\n        case 'throttled_login':\n            return translate('customer.sign_in_throttled_error');\n\n        case 'reset_password_before_login':\n            return translate('customer.reset_password_before_login_error');\n\n        default:\n            return translate('customer.sign_in_error');\n    }\n}\n","import { CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\n\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\n\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\n\nexport default function mapCreateAccountFromFormValues({\n    acceptsMarketingEmails,\n    customFields,\n    ...values\n}: CreateAccountFormValues): CustomerAccountRequestBody {\n    return {\n        ...values,\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\n    };\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect, useState } from 'react';\nimport { object } from 'yup';\n\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport { GuestFormValues } from './GuestForm';\nimport SubscribeField from './SubscribeField';\n\nexport interface StripeGuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    step: CheckoutStepStatus;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    isLoading: boolean;\n    isExpressPrivacyPolicy: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onShowLogin(): void;\n}\n\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\n    continueAsGuestButtonLabelId,\n    isLoading,\n    initialize,\n    isExpressPrivacyPolicy,\n    deinitialize,\n    onChangeEmail,\n    onShowLogin,\n    onContinueAsGuest,\n    canSubscribe,\n    checkoutButtons,\n    defaultShouldSubscribe,\n    requiresMarketingConsent,\n    privacyPolicyUrl,\n    step,\n    status,\n    setFieldValue,\n}) => {\n\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\n    const [emailValue, setEmailValue] = useState('');\n    const [authentication, setAuthentication] = useState(false);\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\n    const [isNewAuth, setIsNewAuth] = useState(false);\n    const handleOnClickSubmitButton = () => {\n        onContinueAsGuest({\n            email: emailValue,\n            shouldSubscribe: !!status?.shouldSubscribe,\n        });\n    };\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\n        setFieldValue('email', email);\n        onChangeEmail(email);\n        setEmailValue(email);\n        setContinueAsAGuestButton(!email);\n        setAuthentication(authenticated);\n\n        if(!authenticated){\n            setIsNewAuth(true);\n        }\n    }, [setContinueAsAGuestButton, onChangeEmail]);\n\n    useEffect(() => {\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\n            handleOnClickSubmitButton();\n        }\n    }, [emailValue, authentication, isNewAuth]);\n\n    useEffect(() => {\n        if (status?.valSuccess) {\n            handleOnClickSubmitButton();\n        }\n    }, [status?.valSuccess]);\n\n    const handleLoading = useCallback((mounted: boolean) => {\n        setIsStripeLoading(mounted);\n    }, []);\n\n    const stripeDeinitialize = () => {\n        deinitialize({\n            methodId: 'stripeupe',\n        });\n    };\n\n    const stripeInitialize = () => {\n        initialize( {\n            methodId: 'stripeupe',\n            stripeupe: {\n                container: 'stripeupeLink',\n                onEmailChange: setEmailCallback,\n                isLoading: handleLoading,\n                getStyles: getStripeStyles,\n                gatewayId: 'stripeupe',\n                methodId: 'card',\n            },\n        })};\n\n    useEffect(() => {\n        stripeInitialize();\n\n        return () => stripeDeinitialize();\n    }, []);\n\n    useEffect(() => {\n        void setFieldValue(\n            'shouldSubscribe',\n            requiresMarketingConsent ? false : defaultShouldSubscribe,\n        );\n    }, [requiresMarketingConsent, defaultShouldSubscribe]);\n\n    const getStylesFromElement = (\n        id: string,\n        properties: string[]) => {\n        const parentContainer = document.getElementById(id);\n\n        if (parentContainer) {\n            return getAppliedStyles(parentContainer, properties);\n        }\n\n            return undefined;\n\n    };\n\n    const containerId = 'stripe-card-component-field';\n\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\n\n        return formLabel && formInput && formError ? {\n            labelText: formLabel.color,\n            fieldText: formInput.color,\n            fieldPlaceholderText: formInput.color,\n            fieldErrorText: formError.color,\n            fieldBackground: formInput['background-color'],\n            fieldInnerShadow: formInput['box-shadow'],\n            fieldBorder: formInput['border-color'],\n        } : undefined;\n    }, [])\n\n    const renderCheckoutThemeStylesForStripeUPE = () => {\n        return (\n            <div\n                className=\"optimizedCheckout-form-input\"\n                id={ `${containerId}--input` }\n            >\n                <div\n                    className=\"form-field--error\"\n                >\n                    <div\n                        className=\"optimizedCheckout-form-label\"\n                        id={ `${containerId}--error` }\n                    />\n                </div>\n                <div\n                    className=\"optimizedCheckout-form-label\"\n                    id={ `${containerId}--label` }\n                />\n            </div>\n        );\n    };\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\n\n    return (\n        <>\n            <CustomerSkeleton isLoading={isStripeLoading}/>\n            <Form\n                className=\"checkout-form\"\n                id=\"checkout-customer-guest\"\n                testId=\"checkout-customer-guest\"\n            >\n                <div className=\"checkout-form\" style={ {display: isStripeLoading ? 'none' : undefined} }>\n                    <Fieldset\n                        legend={ !authentication &&\n                            <Legend hidden>\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\n                            </Legend>\n                        }\n                    >\n                        <div className=\"customerEmail-container\">\n                            <div className=\"customerEmail-body\">\n                                <div id=\"stripeupeLink\"/>\n                                <br/>\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\n                                    name=\"shouldSubscribe\"\n                                    render={ renderField }\n                                /> }\n                            </div>\n\n                            <div className=\"form-actions customerEmail-action\">\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\n                                    className=\"stripeCustomerEmail-button\"\n                                    disabled={ continueAsAGuestButton }\n                                    id=\"stripe-checkout-customer-continue\"\n                                    isLoading={ isLoading }\n                                    testId=\"stripe-customer-continue-as-guest-button\"\n                                    type=\"submit\"\n                                    variant={ ButtonVariant.Primary }\n                                >\n                                    <TranslatedString id={ buttonText }/>\n                                </Button> }\n                            </div>\n                        </div>\n\n                        {privacyPolicyUrl && (\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                        )}\n\n                        {\n                            !isLoading && <p>\n                                <TranslatedString id=\"customer.login_text\"/>\n                                { ' ' }\n                                <a\n                                    data-test=\"customer-continue-button\"\n                                    id=\"checkout-customer-login\"\n                                    onClick={ onShowLogin }\n                                    role=\"button\"\n                                    tabIndex={0}\n                                >\n                                    <TranslatedString id=\"customer.login_action\"/>\n                                </a>\n                            </p>\n                        }\n                        { !authentication && checkoutButtons }\n                    </Fieldset>\n                </div>\n                { renderCheckoutThemeStylesForStripeUPE() }\n            </Form>\n        </>\n    );\n};\n\nexport default withLanguage(\n    withFormik<StripeGuestFormProps, GuestFormValues>({\n            mapPropsToValues: ({\n                email = '',\n                defaultShouldSubscribe = false,\n                requiresMarketingConsent,\n            }) => ({\n                email,\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n                privacyPolicy: false,\n            }),\n            handleSubmit: ( values, { setStatus }) => {\n                setStatus({\n                    valSuccess: true,\n                    shouldSubscribe: values.shouldSubscribe,\n                  });\n            },\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                    return getPrivacyPolicyValidationSchema({\n                            isRequired: !!privacyPolicyUrl,\n                            language,\n                        })\n                }\n\n                return object({});\n            },\n        })(memo(StripeGuestForm))\n)\n\n","import {\n    CheckoutPaymentMethodExecutedOptions,\n    CheckoutSelectors, CheckoutSettings,\n    CustomerAccountRequestBody,\n    CustomerCredentials,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n    FormField,\n    GuestCredentials,\n    SignInEmail,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { Component, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneMethod } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { isErrorWithType } from '../common/error';\nimport { isFloatingLabelEnabled } from '../common/utility';\nimport getProviderWithCustomCheckout from '../payment/getProviderWithCustomCheckout';\nimport { PaymentMethodId } from '../payment/paymentMethod';\n\nimport CheckoutButtonList from './CheckoutButtonList';\nimport CreateAccountForm from './CreateAccountForm';\nimport CustomerViewType from './CustomerViewType';\nimport EmailLoginForm, { EmailLoginFormValues } from './EmailLoginForm';\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\nimport GuestForm, { GuestFormValues } from './GuestForm';\nimport LoginForm from './LoginForm';\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\nimport StripeGuestForm from './StripeGuestForm';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nexport interface CustomerProps {\n    viewType: CustomerViewType;\n    step: CheckoutStepStatus;\n    isEmbedded?: boolean;\n    isSubscribed: boolean;\n    isWalletButtonsOnTop: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    onChangeViewType?(viewType: CustomerViewType): void;\n    onAccountCreated?(): void;\n    onContinueAsGuest?(): void;\n    onContinueAsGuestError?(error: Error): void;\n    onReady?(): void;\n    onSubscribeToNewsletter(subscribe: boolean): void;\n    onSignIn?(): void;\n    onSignInError?(error: Error): void;\n    onUnhandledError?(error: Error): void;\n    onWalletButtonClick?(methodName: string): void;\n}\n\nexport interface WithCheckoutCustomerProps {\n    canSubscribe: boolean;\n    customerAccountFields: FormField[];\n    checkoutButtonIds: string[];\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    firstName?: string;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    checkoutSettings: CheckoutSettings;\n    forgotPasswordUrl: string;\n    isContinuingAsGuest: boolean;\n    isCreatingAccount: boolean;\n    isExecutingPaymentMethodCheckout: boolean;\n    isGuestEnabled: boolean;\n    hasBillingId: boolean;\n    isInitializing: boolean;\n    isSendingSignInEmail: boolean;\n    isSignInEmailEnabled: boolean;\n    isSigningIn: boolean;\n    privacyPolicyUrl?: string;\n    providerWithCustomCheckout?: string;\n    requiresMarketingConsent: boolean;\n    signInEmail?: SignInEmail;\n    signInEmailError?: Error;\n    isAccountCreationEnabled: boolean;\n    isPaymentDataRequired: boolean;\n    createAccountError?: Error;\n    signInError?: Error;\n    isFloatingLabelEnabled?: boolean;\n    isExpressPrivacyPolicy: boolean;\n    clearError(error: Error): Promise<CheckoutSelectors>;\n    continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\n    signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\n    createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n    shouldRenderStripeForm: boolean;\n}\n\nexport interface CustomerState {\n    isEmailLoginFormOpen: boolean;\n    isReady: boolean;\n    hasRequestedLoginEmail: boolean;\n}\n\nclass Customer extends Component<CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps, CustomerState> {\n    state: CustomerState = {\n        isEmailLoginFormOpen: false,\n        isReady: false,\n        hasRequestedLoginEmail: false,\n    };\n\n    private draftEmail?: string;\n\n    async componentDidMount(): Promise<void> {\n        const {\n            initializeCustomer,\n            email,\n            onReady = noop,\n            onUnhandledError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        this.draftEmail = email;\n\n        try {\n            if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n                await initializeCustomer({methodId: providerWithCustomCheckout});\n            }\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        this.setState({ isReady: true });\n\n        onReady();\n    }\n\n    async componentWillUnmount(): Promise<void> {\n        const {\n            deinitializeCustomer = noop,\n            providerWithCustomCheckout,\n            onUnhandledError = noop,\n        } = this.props;\n\n        try {\n            await deinitializeCustomer({ methodId: providerWithCustomCheckout });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { viewType } = this.props;\n        const { isEmailLoginFormOpen, isReady } = this.state;\n        const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\n        const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\n        const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\n\n        return (\n            <CustomerSkeleton isLoading={!isReady}>\n                {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\n                {shouldRenderLoginForm && this.renderLoginForm()}\n                {shouldRenderGuestForm && this.renderGuestForm()}\n                {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\n            </CustomerSkeleton>\n        );\n    }\n\n    private renderGuestForm(): ReactNode {\n        const {\n            canSubscribe,\n            checkEmbeddedSupport,\n            checkoutButtonIds,\n            deinitializeCustomer,\n            email,\n            initializeCustomer,\n            isContinuingAsGuest = false,\n            isExecutingPaymentMethodCheckout = false,\n            isInitializing = false,\n            isSubscribed,\n            isWalletButtonsOnTop,\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            onUnhandledError = noop,\n            onWalletButtonClick = noop,\n            step,\n            isFloatingLabelEnabled,\n            isExpressPrivacyPolicy,\n            isPaymentDataRequired,\n            shouldRenderStripeForm,\n            providerWithCustomCheckout,\n            checkoutSettings,\n        } = this.props;\n\n        const checkoutButtons = isWalletButtonsOnTop || !isPaymentDataRequired\n          ? null\n          : <CheckoutButtonList\n            checkEmbeddedSupport={checkEmbeddedSupport}\n            checkoutSettings={checkoutSettings}\n            deinitialize={deinitializeCustomer}\n            initialize={initializeCustomer}\n            isInitializing={isInitializing}\n            methodIds={checkoutButtonIds}\n            onClick={onWalletButtonClick}\n            onError={onUnhandledError}\n          />;\n\n        const isLoadingGuestForm = isContinuingAsGuest || isExecutingPaymentMethodCheckout;\n\n        return (\n            shouldRenderStripeForm ?\n                <StripeGuestForm\n                    canSubscribe={canSubscribe}\n                    checkoutButtons={checkoutButtons}\n                    continueAsGuestButtonLabelId=\"customer.continue\"\n                    defaultShouldSubscribe={isSubscribed}\n                    deinitialize={deinitializeCustomer}\n                    email={this.draftEmail || email}\n                    initialize={initializeCustomer}\n                    isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                    isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\n                    onChangeEmail={this.handleChangeEmail}\n                    onContinueAsGuest={this.handleContinueAsGuest}\n                    onShowLogin={this.handleShowLogin}\n                    privacyPolicyUrl={privacyPolicyUrl}\n                    requiresMarketingConsent={requiresMarketingConsent}\n                    step={step}\n                />\n                :\n            <GuestForm\n                canSubscribe={canSubscribe}\n                checkoutButtons={checkoutButtons}\n                continueAsGuestButtonLabelId=\"customer.continue\"\n                defaultShouldSubscribe={isSubscribed}\n                email={this.draftEmail || email}\n                isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isLoading={isLoadingGuestForm}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.handleContinueAsGuest}\n                onShowLogin={this.handleShowLogin}\n                privacyPolicyUrl={privacyPolicyUrl}\n                requiresMarketingConsent={requiresMarketingConsent}\n                shouldShowEmailWatermark={isPayPalFastlaneMethod(providerWithCustomCheckout)}\n            />\n        );\n    }\n\n    private renderEmailLoginLinkForm(): ReactNode {\n        const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\n\n        const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\n            this.props;\n\n        return (\n            <EmailLoginForm\n                email={this.draftEmail}\n                emailHasBeenRequested={hasRequestedLoginEmail}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isOpen={isEmailLoginFormOpen}\n                isSendingEmail={isSendingSignInEmail}\n                onRequestClose={this.closeEmailLoginFormForm}\n                onSendLoginEmail={this.handleSendLoginEmail}\n                sentEmail={signInEmail}\n                sentEmailError={signInEmailError}\n            />\n        );\n    }\n\n    private closeEmailLoginFormForm: () => void = () => {\n        this.setState({\n            isEmailLoginFormOpen: false,\n            hasRequestedLoginEmail: false,\n        });\n    };\n\n    private renderCreateAccountForm(): ReactNode {\n        const {\n            customerAccountFields,\n            isExecutingPaymentMethodCheckout,\n            isCreatingAccount,\n            createAccountError,\n            requiresMarketingConsent,\n            isFloatingLabelEnabled,\n            defaultShouldSubscribe,\n            fixNewsletterCheckboxExperimentEnabled,\n        } = this.props;\n\n        return (\n            <CreateAccountForm\n                createAccountError={createAccountError}\n                defaultShouldSubscribe={defaultShouldSubscribe}\n                fixNewsletterCheckboxExperimentEnabled={fixNewsletterCheckboxExperimentEnabled}\n                formFields={customerAccountFields}\n                isCreatingAccount={isCreatingAccount}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                onCancel={this.handleCancelCreateAccount}\n                onSubmit={this.handleCreateAccount}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderLoginForm(): ReactNode {\n        const {\n            isEmbedded,\n            email,\n            forgotPasswordUrl,\n            isSignInEmailEnabled,\n            isGuestEnabled,\n            isSendingSignInEmail,\n            isSigningIn,\n            isExecutingPaymentMethodCheckout,\n            isAccountCreationEnabled,\n            providerWithCustomCheckout,\n            signInError,\n            isFloatingLabelEnabled,\n            viewType,\n        } = this.props;\n\n        return (\n            <LoginForm\n                canCancel={isGuestEnabled}\n                continueAsGuestButtonLabelId={\n                    providerWithCustomCheckout\n                        ? 'customer.continue'\n                        : 'customer.continue_as_guest_action'\n                }\n                email={this.draftEmail || email}\n                forgotPasswordUrl={forgotPasswordUrl}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isSendingSignInEmail={isSendingSignInEmail}\n                isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\n                isSigningIn={isSigningIn}\n                onCancel={this.handleCancelSignIn}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\n                onCreateAccount={this.showCreateAccount}\n                onSendLoginEmail={this.handleEmailLoginClicked}\n                onSignIn={this.handleSignIn}\n                shouldShowCreateAccountLink={isAccountCreationEnabled}\n                signInError={signInError}\n                viewType={viewType}\n            />\n        );\n    }\n\n    private handleEmailLoginClicked: () => void = async () => {\n        const { viewType } = this.props;\n\n        try {\n            if (viewType !== CustomerViewType.Login && this.draftEmail) {\n                await this.handleSendLoginEmail({ email: this.draftEmail });\n            }\n        } finally {\n            this.setState({\n                isEmailLoginFormOpen: true,\n            });\n        }\n    };\n\n    private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\n        values,\n    ) => {\n        const { sendLoginEmail } = this.props;\n\n        try {\n            await sendLoginEmail(values);\n        } catch (error) {\n        // Need to write catch block since one test covers the case when `sendLoginEmail` fails\n        } finally {\n            this.setState({\n                hasRequestedLoginEmail: true,\n            });\n        }\n    };\n\n    private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\n        formValues,\n    ) => {\n        const {\n            canSubscribe,\n            continueAsGuest,\n            hasBillingId,\n            defaultShouldSubscribe,\n            onChangeViewType = noop,\n            onContinueAsGuest = noop,\n            onContinueAsGuestError = noop,\n            onSubscribeToNewsletter,\n        } = this.props;\n\n        const email = formValues.email.trim();\n        const updateSubscriptionWhenUnchecked =\n            hasBillingId || defaultShouldSubscribe ? false : undefined;\n\n        try {\n            const { data } = await continueAsGuest({\n                email,\n                acceptsMarketingNewsletter:\n                    canSubscribe && formValues.shouldSubscribe\n                        ? true\n                        : updateSubscriptionWhenUnchecked,\n                acceptsAbandonedCartEmails: formValues.shouldSubscribe\n                    ? true\n                    : updateSubscriptionWhenUnchecked,\n            });\n\n            onSubscribeToNewsletter(formValues.shouldSubscribe);\n\n            SubscribeSessionStorage.setSubscribeStatus(formValues.shouldSubscribe);\n\n            const customer = data.getCustomer();\n\n            const paymentProviderCustomer = data.getPaymentProviderCustomer();\n\n            if (customer && customer.shouldEncourageSignIn && customer.isGuest && !paymentProviderCustomer?.stripeLinkAuthenticationState) {\n                return onChangeViewType(CustomerViewType.SuggestedLogin);\n            }\n\n            await this.executePaymentMethodCheckoutOrContinue();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            if (\n                isErrorWithType(error) &&\n                (error.type === 'update_subscriptions' ||\n                    error.type === 'payment_method_client_invalid')\n            ) {\n                this.draftEmail = undefined;\n\n                onContinueAsGuest();\n            }\n\n            if (isErrorWithType(error) && error.status === 429) {\n                return onChangeViewType(CustomerViewType.EnforcedLogin);\n            }\n\n            if (isErrorWithType(error) && error.status === 403) {\n                return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\n            }\n\n            onContinueAsGuestError(error);\n        }\n    };\n\n    private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\n        credentials,\n    ) => {\n        const {\n            signIn,\n            onSignIn = noop,\n            onSignInError = noop,\n        } = this.props;\n\n        try {\n            await signIn(credentials);\n\n            onSignIn();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            onSignInError(error);\n        }\n    };\n\n    private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\n        const {\n            createAccount = noop,\n            onAccountCreated = noop,\n        } = this.props;\n\n        await createAccount(mapCreateAccountFromFormValues(values));\n\n        onAccountCreated();\n    };\n\n    private showCreateAccount: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.CreateAccount);\n    };\n\n    private handleCancelCreateAccount: () => void = () => {\n        const { clearError, onChangeViewType = noop, createAccountError } = this.props;\n\n        if (createAccountError) {\n            clearError(createAccountError);\n        }\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private handleCancelSignIn: () => void = () => {\n        const { clearError, onChangeViewType = noop, signInError } = this.props;\n\n        if (signInError) {\n            clearError(signInError);\n        }\n\n        onChangeViewType(CustomerViewType.Guest);\n    };\n\n    private handleChangeEmail: (email: string) => void = (email) => {\n        const { analyticsTracker } = this.props;\n\n        this.draftEmail = email;\n        analyticsTracker.customerEmailEntry(email);\n    };\n\n    private handleShowLogin: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private executePaymentMethodCheckoutOrContinue: () => void = async () => {\n        const {\n            executePaymentMethodCheckout,\n            onContinueAsGuest = noop,\n            providerWithCustomCheckout\n        } = this.props;\n\n        if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onContinueAsGuest,\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n            });\n        } else {\n            onContinueAsGuest();\n        }\n    };\n\n    private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.customerPaymentMethodExecuted(payload);\n    }\n}\n\nexport function mapToWithCheckoutCustomerProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\n    const {\n        data: {\n            getBillingAddress,\n            getCustomerAccountFields,\n            getCheckout,\n            getCustomer,\n            getCart,\n            getSignInEmail,\n            getConfig,\n            isPaymentDataRequired,\n        },\n        errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\n        statuses: {\n            isContinuingAsGuest,\n            isExecutingPaymentMethodCheckout,\n            isInitializingCustomer,\n            isSigningIn,\n            isSendingSignInEmail,\n            isCreatingCustomerAccount,\n        },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const cart = getCart();\n    const signInEmail = getSignInEmail();\n    const config = getConfig();\n\n    if (!checkout || !config || !cart) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            isSignInEmailEnabled,\n            isAccountCreationEnabled,\n            isExpressPrivacyPolicy,\n            features,\n        },\n    } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\n\n    const providerWithCustomCheckout = getProviderWithCustomCheckout(\n        config.checkoutSettings.providerWithCustomCheckout,\n    );\n\n    const fixNewsletterCheckboxExperimentEnabled = features['CHECKOUT-8033.fix_newletter_checkbox'];\n\n    return {\n        customerAccountFields: getCustomerAccountFields(),\n        canSubscribe: config.shopperConfig.showNewsletterSignup,\n        checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\n        clearError: checkoutService.clearError,\n        createAccount: checkoutService.createCustomerAccount,\n        continueAsGuest: checkoutService.continueAsGuest,\n        sendLoginEmail: checkoutService.sendSignInEmail,\n        defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        email: billingAddress?.email || customer?.email,\n        firstName: customer?.firstName,\n        fixNewsletterCheckboxExperimentEnabled,\n        forgotPasswordUrl: config.links.forgotPasswordLink,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isCreatingAccount: isCreatingCustomerAccount(),\n        createAccountError: getCreateCustomerAccountError(),\n        hasBillingId: !!billingAddress?.id,\n        isContinuingAsGuest: isContinuingAsGuest(),\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        isInitializing: isInitializingCustomer(),\n        isSignInEmailEnabled,\n        isAccountCreationEnabled,\n        isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\n        isSigningIn: isSigningIn(),\n        isSendingSignInEmail: isSendingSignInEmail(),\n        signInEmail,\n        signInEmailError: getSignInEmailError(),\n        privacyPolicyUrl,\n        providerWithCustomCheckout,\n        requiresMarketingConsent,\n        signIn: checkoutService.signInCustomer,\n        signInError: getSignInError(),\n        isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\n        isExpressPrivacyPolicy,\n        isPaymentDataRequired: isPaymentDataRequired(),\n        shouldRenderStripeForm: providerWithCustomCheckout === PaymentMethodId.StripeUPE && shouldUseStripeLinkByMinimumAmount(cart),\n        checkoutSettings: config.checkoutSettings,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { Banner, Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\n\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\nimport './StaticConsignment.scss';\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\n\ninterface StaticConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    compactView?: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\n    consignment,\n    cart,\n    compactView,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const { shippingAddress: address, selectedShippingOption } = consignment;\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    return (\n        <div className=\"staticConsignment\">\n            <StaticAddress address={address} type={AddressType.Shipping} />\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticConsignment);\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { localizeAddress, TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout , useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport ConsignmentLineItemDetail from './ConsignmentLineItemDetail';\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\n\nimport './StaticMultiConsignment.scss';\n\ninterface StaticMultiConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    consignmentNumber: number;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticMultiConsignment: FunctionComponent<StaticMultiConsignmentProps> = ({\n    consignment,\n    cart,\n    consignmentNumber,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const {\n        checkoutState: {\n            data: { getShippingCountries },\n        },\n    } = useCheckout();\n    const { newFontStyle } = useStyleContext();\n\n    const { shippingAddress: addressWithoutLocalization, selectedShippingOption } = consignment;\n    const address = localizeAddress(addressWithoutLocalization, getShippingCountries());\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticMultiConsignment\">\n            <h3 className={classNames('staticMultiConsignment-header',\n                { 'body-bold': newFontStyle })}>\n                <TranslatedString data={{ consignmentNumber }} id=\"shipping.multishipping_consignment_index_heading\" />\n            </h3>\n\n            <div className=\"checkout-address--static\">\n                <p className={classNames('address-entry',\n                    { 'sub-text': newFontStyle })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n                <div className=\"address-details\">\n                    <p className={classNames('street-address address-entry',\n                        { 'sub-text': newFontStyle })}>\n                        <span className=\"address-line-1\">{`${address.address1}`}</span>\n                        {address.address2 && (\n                            <span className=\"address-line-2\">{`, ${address.address2}`}</span>\n                        )}\n                    </p>\n\n                    <p className={classNames('address-entry',\n                        { 'sub-text': newFontStyle })}>\n                        {address.city && <span className=\"locality\">{`${address.city}`}</span>}\n                        {address.localizedProvince && (\n                            <span className=\"region\">{`, ${address.localizedProvince}`}</span>\n                        )}\n                        {address.localizedCountry && (\n                            <span className=\"country-name\">{`, ${address.localizedCountry}`}</span>\n                        )}\n                        {address.postalCode && (\n                            <span className=\"postal-code\">{` ${address.postalCode}`}</span>\n                        )}\n                    </p>\n                </div>\n            </div>\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            <div className=\"staticConsignment-items\">\n                <span className={newFontStyle ? 'body-bold' : ''}>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n                </span>\n            \n                <ConsignmentLineItemDetail lineItems={lineItems} isMultiShippingSummary />\n        </div>\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticMultiConsignment);\n","\nimport { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport StaticConsignment from './StaticConsignment';\nimport StaticMultiConsignment from './StaticMultiConsignment';\n\n\ninterface ShippingSummaryProps {\n    isShippingDiscountDisplayEnabled: boolean;\n    isMultiShippingMode: boolean;\n    consignments: Consignment[];\n    cart: Cart;\n}\n\nconst ShippingSummary: FunctionComponent<ShippingSummaryProps> = ({\n    isShippingDiscountDisplayEnabled,\n    isMultiShippingMode,\n    consignments,\n    cart\n}) => {\n    if (isMultiShippingMode) {\n        return (\n            <>\n                {consignments.map((consignment, index) => (\n                    <div className=\"staticMultiConsignmentContainer\" key={consignment.id}>\n                        <StaticMultiConsignment\n                            cart={cart}\n                            consignment={consignment}\n                            consignmentNumber={index + 1}\n                            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                        />\n                    </div>\n                ))}\n            </>\n        );\n    }\n\n    return (\n        <>\n            {consignments.map((consignment) => (\n                <div className=\"staticConsignmentContainer\" key={consignment.id}>\n                    <StaticConsignment\n                        cart={cart}\n                        compactView={consignments.length < 2}\n                        consignment={consignment}\n                        isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                    />\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default memo(ShippingSummary);\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n\nexport interface CheckoutStepHeaderProps {\n    heading: ReactNode;\n    isActive?: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n    heading,\n    isActive,\n    isComplete,\n    isEditable,\n    onEdit,\n    summary,\n    type,\n}) => {\n    const { newFontStyle } = useStyleContext();\n\n    return (\n        <div\n            className={classNames('stepHeader', {\n                'is-readonly': !isEditable,\n                'is-clickable': isEditable && !isActive,\n            })}\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n        >\n            <div className=\"stepHeader-figure stepHeader-column\">\n                <IconCheck\n                    additionalClassName={classNames(\n                        'stepHeader-counter',\n                        'optimizedCheckout-step',\n                        { 'stepHeader-counter--complete': isComplete },\n                    )}\n                />\n\n                <h2\n                    className={classNames('stepHeader-title optimizedCheckout-headingPrimary',\n                        { 'header': newFontStyle && (isActive || isComplete) },\n                        { 'header-secondary': newFontStyle && !isActive && !isComplete })}\n                >{heading}</h2>\n            </div>\n\n            <div\n                className={classNames('stepHeader-body stepHeader-column optimizedCheckout-contentPrimary',\n                    { 'body-regular': newFontStyle })}\n                data-test=\"step-info\"\n            >\n                {!isActive && isComplete && summary}\n            </div>\n\n            {isEditable && !isActive && (\n                <div className=\"stepHeader-actions stepHeader-column\">\n                    <Button\n                        aria-expanded={isActive}\n                        className={classNames({ 'body-regular': newFontStyle })}\n                        size={ButtonSize.Tiny}\n                        testId=\"step-edit-button\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"common.edit_action\" />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { Component, createRef, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n    children?: ReactNode;\n    heading?: ReactNode;\n    isActive?: boolean;\n    isBusy: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    suggestion?: ReactNode;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onExpanded?(step: CheckoutStepType): void;\n    onEdit?(step: CheckoutStepType): void;\n}\n\nexport interface CheckoutStepState {\n    isClosed: boolean;\n}\n\nexport default class CheckoutStep extends Component<CheckoutStepProps, CheckoutStepState> {\n    state = {\n        isClosed: true,\n    };\n\n    private containerRef = createRef<HTMLLIElement>();\n    private contentRef = createRef<HTMLDivElement>();\n    private timeoutRef?: number;\n    private timeoutDelay?: number;\n\n    componentDidMount(): void {\n        const { isActive } = this.props;\n\n        if (isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<CheckoutStepProps>): void {\n        const { isActive } = this.props;\n\n        if (isActive && isActive !== prevProps.isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentWillUnmount(): void {\n        if (this.timeoutRef) {\n            window.clearTimeout(this.timeoutRef);\n\n            this.timeoutRef = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { heading, isActive, isComplete, isEditable, onEdit, suggestion, summary, type } =\n            this.props;\n\n        const { isClosed } = this.state;\n\n        return (\n            <li\n                className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n                    [`checkout-step--${type}`]: !!type,\n                })}\n                ref={this.containerRef}\n            >\n                <div className=\"checkout-view-header\">\n                    <CheckoutStepHeader\n                        heading={heading}\n                        isActive={isActive}\n                        isComplete={isComplete}\n                        isEditable={isEditable}\n                        onEdit={onEdit}\n                        summary={summary}\n                        type={type}\n                    />\n                </div>\n\n                {suggestion && isClosed && !isActive && (\n                    <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n                        {suggestion}\n                    </div>\n                )}\n\n                {this.renderContent()}\n            </li>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { children, isActive, isBusy } = this.props;\n\n        return (\n            <MobileView>\n                {(matched) => (\n                    <CSSTransition\n                        addEndListener={this.handleTransitionEnd}\n                        classNames=\"checkout-view-content\"\n                        enter={!matched}\n                        exit={!matched}\n                        in={isActive}\n                        mountOnEnter\n                        onExited={ this.onAnimationEnd }\n                        timeout={ {} }\n                        unmountOnExit\n                    >\n                        <div\n                            aria-busy={isBusy}\n                            className=\"checkout-view-content\"\n                            ref={this.contentRef}\n                        >\n                            {isActive ? children : null}\n                        </div>\n                    </CSSTransition>\n                )}\n            </MobileView>\n        );\n    }\n\n    private focusStep(): void {\n        const delay = isMobileView() ? 0 : this.getTransitionDelay();\n\n        this.setState({ isClosed: false });\n\n        this.timeoutRef = window.setTimeout(() => {\n            const input = this.getChildInput();\n            const position = this.getScrollPosition();\n            const { type, onExpanded = noop } = this.props;\n\n            if (input) {\n                input.focus();\n            }\n\n            if (position !== undefined && !isNaN(position)) {\n                window.scrollTo(0, position);\n            }\n\n            onExpanded(type);\n\n            this.timeoutRef = undefined;\n        }, delay);\n    }\n\n    private getChildInput(): HTMLElement | undefined {\n        const container = this.containerRef.current;\n\n        if (!container) {\n            return;\n        }\n\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n        return input || undefined;\n    }\n\n    private getScrollPosition(): number | undefined {\n        const container = this.getParentContainer();\n        const { isComplete } = this.props;\n\n        if (!container || window !== window.top) {\n            return;\n        }\n\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\n        const containerOffset =\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n        return containerOffset - topOffset;\n    }\n\n    // For now, we need to find the parent container because `CheckoutStep`\n    // isn't the outer container yet. Once both the header and body are\n    // moved inside this component, we can remove the lookup.\n    private getParentContainer(): HTMLElement | undefined {\n        let container: HTMLElement | null = this.containerRef.current;\n\n        while (container && container.parentElement) {\n            if (container.parentElement.classList.contains('checkout-step')) {\n                return container.parentElement;\n            }\n\n            container = container.parentElement;\n        }\n\n        return this.containerRef.current ? this.containerRef.current : undefined;\n    }\n\n    private getTransitionDelay(): number {\n        if (this.timeoutDelay !== undefined) {\n            return this.timeoutDelay;\n        }\n\n        // Cache the result to avoid unnecessary reflow\n        this.timeoutDelay =\n            parseFloat(\n                this.contentRef.current\n                    ? getComputedStyle(this.contentRef.current).transitionDuration\n                    : '0s',\n            ) * 1000;\n\n        return this.timeoutDelay;\n    }\n\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\n        node.addEventListener('transitionend', ({ target }) => {\n            if (target === node) {\n                done();\n            }\n        });\n    };\n\n    private onAnimationEnd = (): void => {\n        const { isActive } = this.props;\n\n        if (!isActive) {\n            this.setState({ isClosed: true });\n        }\n    }\n}\n","enum CheckoutStepType {\n    Billing = 'billing',\n    Customer = 'customer',\n    Payment = 'payment',\n    Shipping = 'shipping',\n}\n\nexport default CheckoutStepType;\n","import { Cart, StoreConfig } from '@bigcommerce/checkout-sdk';\n\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\n    if (!cart) {\n        return false;\n    }\n\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\n        return true;\n    }\n\n    if (config && cart.lineItems.customItems\n    ) {\n        return cart.lineItems.customItems.length > 0;\n    }\n\n    return false;\n};\n\nexport default itemsRequireShipping;\n","import { CheckoutPayment, CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n    hasSelectedShippingOptions,\n    hasUnassignedLineItems,\n    itemsRequireShipping,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n// In this step, we require that the customer strategy be reloaded the first time.\nconst getStripeLinkAndCheckoutPageIsReloaded = (\n    isUsingWallet: boolean,\n    hasEmail: boolean,\n    isGuest: boolean,\n    shouldUseStripeLinkByMinimumAmount: boolean,\n    providerWithCustomCheckout?: string | null,\n) => {\n    return !isUsingWallet && providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount;\n}\n\nconst getCustomerStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => data.getPaymentProviderCustomer(),\n    (checkout, customer, billingAddress, config, cart, paymentProviderCustomer) => {\n        const hasEmail = !!(\n            (customer && customer.email) ||\n            (billingAddress && billingAddress.email)\n        );\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment: CheckoutPayment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n                  )\n                : false;\n        const isGuest = !!(customer && customer.isGuest);\n        const isComplete = hasEmail || isUsingWallet;\n        const isEditable = isComplete && !isUsingWallet && isGuest;\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\n            isUsingWallet,\n            hasEmail,\n            isGuest,\n            cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\n            config?.checkoutSettings.providerWithCustomCheckout,\n        );\n\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n            return {\n                type: CheckoutStepType.Customer,\n                isActive: false,\n                isComplete: paymentProviderCustomer?.stripeLinkAuthenticationState !== undefined,\n                isEditable,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Customer,\n            isActive: false,\n            isComplete,\n            isEditable,\n            isRequired: true,\n        };\n    },\n);\n\nconst getBillingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => {\n        const billingAddress = data.getBillingAddress();\n\n        return billingAddress\n            ? data.getBillingAddressFields(billingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (checkout, billingAddress, billingAddressFields, config) => {\n        const hasAddress = billingAddress\n            ? isValidAddress(billingAddress, billingAddressFields)\n            : false;\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n                  )\n                : false;\n        const isComplete = hasAddress || isUsingWallet;\n        const isUsingAmazonPay =\n            checkout && checkout.payments\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n                : false;\n\n        if (isUsingAmazonPay) {\n            const billingAddressCustomFields = billingAddressFields.filter(\n                ({ custom }: { custom: boolean }) => custom,\n            );\n            const hasCustomFields = billingAddressCustomFields.length > 0;\n            const isAmazonPayBillingStepComplete =\n                billingAddress && hasCustomFields\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\n                    : true;\n\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: isAmazonPayBillingStepComplete,\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n                isRequired: true,\n            };\n        }\n\n        const isGooglePayBillingAddressEditingEnabled = isExperimentEnabled(\n            config?.checkoutSettings,\n            'STRIPE-546.allow_billing_address_editing_for_all_Google_Pay_providers',\n        );\n        const isUsingGooglePay =\n            isGooglePayBillingAddressEditingEnabled && (checkout && checkout.payments\n                ? checkout.payments.some((payment) => (payment?.providerId || '').startsWith('googlepay'))\n                : false);\n\n        if (isUsingGooglePay) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        const isUsingPaypal =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment) =>\n                        [\n                            'braintreepaypal',\n                            'braintreepaypalcredit',\n                            'braintreevenmo',\n                            'paypalcommerce',\n                            'paypalcommercecredit',\n                            'paypalcommercevenmo'\n                        ]\n                            .includes(payment.providerId))\n                : false;\n\n        if (isUsingPaypal) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Billing,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && !isUsingWallet,\n            isRequired: true,\n        };\n    },\n);\n\nconst getShippingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => {\n        const shippingAddress = data.getShippingAddress();\n\n        return shippingAddress\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n        const hasAddress = shippingAddress\n            ? isValidAddress(shippingAddress, shippingAddressFields)\n            : false;\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n        const hasUnassignedItems =\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n        const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n        const isRequired = itemsRequireShipping(cart, config);\n        const isCustomShippingSelected =\n            isExperimentEnabled(\n                config?.checkoutSettings,\n                'PROJECT-5015.manual_order.display_custom_shipping',\n            ) &&\n            hasOptions &&\n            consignments?.some(\n                ({ selectedShippingOption }) => selectedShippingOption?.type === 'custom',\n            );\n\n        return {\n            type: CheckoutStepType.Shipping,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && isRequired && !isCustomShippingSelected,\n            isRequired,\n        };\n    },\n);\n\nconst getPaymentStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getOrder(),\n    (order) => {\n        const isComplete = order ? order.isComplete : false;\n\n        return {\n            type: CheckoutStepType.Payment,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getOrderSubmitStatus = createSelector(\n    ({ statuses }: CheckoutSelectors) => statuses.isSubmittingOrder(),\n    (status) => status,\n);\n\nconst getCheckoutStepStatuses = createSelector(\n    getCustomerStepStatus,\n    getShippingStepStatus,\n    getBillingStepStatus,\n    getPaymentStepStatus,\n    getOrderSubmitStatus,\n    (customerStep, shippingStep, billingStep, paymentStep, orderStatus) => {\n        const isSubmittingOrder = orderStatus;\n\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\n\n        const defaultActiveStep =\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n        return steps.map((step, index) => {\n            const isPrevStepComplete = steps\n                .slice(0, index)\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n            return {\n                ...step,\n                isActive: defaultActiveStep.type === step.type,\n                isBusy: false,\n                // A step is only editable if its previous step is complete or not required\n                isEditable: isPrevStepComplete && step.isEditable && !isSubmittingOrder,\n            };\n        });\n    },\n);\n\nexport default getCheckoutStepStatuses;\n","import {\n    Address,\n    Cart,\n    CartChangedError,\n    CheckoutParams,\n    CheckoutSelectors,\n    Consignment,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    ExtensionRegion,\n    FlashMessage,\n    PaymentMethod,\n    Promotion,\n RequestOptions } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { Extension, ExtensionContextProps, withExtension } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { AddressFormSkeleton, ChecklistSkeleton , LazyContainer, LoadingNotification, LoadingOverlay } from '@bigcommerce/checkout/ui';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n    CheckoutButtonContainer,\n    CheckoutSuggestion,\n    Customer,\n    CustomerInfo,\n    CustomerSignOutEvent,\n    CustomerViewType,\n} from '../customer';\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\nimport { SubscribeSessionStorage } from '../customer/SubscribeSessionStorage';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping, ShippingSummary } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport CheckoutSupport from './CheckoutSupport';\nimport mapToCheckoutProps from './mapToCheckoutProps';\n\nconst Billing = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"billing\" */\n                '../billing/Billing'\n            ),\n    ),\n);\n\nconst CartSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary\" */\n                '../cart/CartSummary'\n            ),\n    ),\n);\n\nconst CartSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary-drawer\" */\n                '../cart/CartSummaryDrawer'\n            ),\n    ),\n);\n\nconst Payment = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"payment\" */\n                '../payment/Payment'\n            ),\n    ),\n);\n\nconst Shipping = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"shipping\" */\n                '../shipping/Shipping'\n            ),\n    ),\n);\n\nexport interface CheckoutProps {\n    checkoutId: string;\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n    activeStepType?: CheckoutStepType;\n    isBillingSameAsShipping: boolean;\n    customerViewType?: CustomerViewType;\n    defaultStepType?: CheckoutStepType;\n    error?: Error;\n    flashMessages?: FlashMessage[];\n    isMultiShippingMode: boolean;\n    isCartEmpty: boolean;\n    isRedirecting: boolean;\n    hasSelectedShippingOptions: boolean;\n    isSubscribed: boolean;\n    buttonConfigs: PaymentMethod[];\n}\n\nexport interface WithCheckoutProps {\n    billingAddress?: Address;\n    cart?: Cart;\n    consignments?: Consignment[];\n    error?: Error;\n    hasCartChanged: boolean;\n    flashMessages?: FlashMessage[];\n    isGuestEnabled: boolean;\n    isLoadingCheckout: boolean;\n    isPending: boolean;\n    isPriceHiddenFromGuests: boolean;\n    isShowingWalletButtonsOnTop: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n    loginUrl: string;\n    cartUrl: string;\n    createAccountUrl: string;\n    promotions?: Promotion[];\n    steps: CheckoutStepStatus[];\n    clearError(error?: Error): void;\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n    loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n}\n\nclass Checkout extends Component<\n    CheckoutProps &\n        WithCheckoutProps &\n        WithLanguageProps &\n        AnalyticsContextProps &\n        ExtensionContextProps,\n    CheckoutState\n> {\n    state: CheckoutState = {\n        isBillingSameAsShipping: true,\n        isCartEmpty: false,\n        isRedirecting: false,\n        isMultiShippingMode: false,\n        hasSelectedShippingOptions: false,\n        isSubscribed: false,\n        buttonConfigs: [],\n    };\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n    private unsubscribeFromConsignments?: () => void;\n\n    componentWillUnmount(): void {\n        if (this.unsubscribeFromConsignments) {\n            this.unsubscribeFromConsignments();\n            this.unsubscribeFromConsignments = undefined;\n        }\n\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\n        this.handleBeforeExit();\n    }\n\n    componentDidUpdate(prevProps: WithCheckoutProps): void {\n        if(prevProps.steps.length === 0 && this.props.steps && this.props.steps.length > 0) {\n            this.handleReady();\n        }\n    }\n\n    async componentDidMount(): Promise<void> {\n        const {\n            analyticsTracker,\n            checkoutId,\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            extensionService,\n            loadCheckout,\n            loadPaymentMethodByIds,\n            subscribeToConsignments,\n        } = this.props;\n\n        try {\n            const [{ data }] = await Promise.all([loadCheckout(checkoutId, {\n                params: {\n                    include: [\n                        'cart.lineItems.physicalItems.categoryNames',\n                        'cart.lineItems.digitalItems.categoryNames',\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n                },\n            }), extensionService.loadExtensions()]);\n\n            const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\n            const checkoutSettings = data.getConfig()?.checkoutSettings;\n\n            const supportedProviders = getSupportedMethodIds(providers, checkoutSettings);\n\n            if (providers.length > 0) {\n                const configs = await loadPaymentMethodByIds(supportedProviders);\n\n                this.setState({\n                    buttonConfigs: configs.data.getPaymentMethods() || [],\n                });\n            }\n\n            extensionService.preloadExtensions();\n\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n            const errorFlashMessages = data.getFlashMessages('error') || [];\n\n            if (errorFlashMessages.length) {\n                const { language } = this.props;\n\n                this.setState({\n                    error: new CustomError({\n                        title:\n                            errorFlashMessages[0].title ||\n                            language.translate('common.error_heading'),\n                        message: errorFlashMessages[0].message,\n                        data: {},\n                        name: 'default',\n                    }),\n                });\n            }\n\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n            this.unsubscribeFromConsignments = subscribeToConsignments(\n                this.handleConsignmentsUpdated,\n            );\n            this.embeddedMessenger = messenger;\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n            messenger.postFrameLoaded({ contentId: containerId });\n            messenger.postLoaded();\n\n            analyticsTracker.checkoutBegin();\n\n            const consignments = data.getConsignments();\n            const cart = data.getCart();\n\n            const hasMultiShippingEnabled =\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n            const checkoutBillingSameAsShippingEnabled =\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n            const defaultNewsletterSignupOption =\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\n                false;\n            const isMultiShippingMode =\n                !!cart &&\n                !!consignments &&\n                hasMultiShippingEnabled &&\n                isUsingMultiShipping(consignments, cart.lineItems);\n\n            this.setState({\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n                isSubscribed: defaultNewsletterSignupOption,\n            });\n\n            if (isMultiShippingMode) {\n                this.setState({ isMultiShippingMode });\n            }\n\n            window.addEventListener('beforeunload', this.handleBeforeExit);\n\n        } catch (error) {\n            if (error instanceof Error) {\n                this.handleUnhandledError(error);\n            }\n        }\n    }\n\n    render(): ReactNode {\n        const { error } = this.state;\n        let errorModal = null;\n\n        if (error) {\n            if (isCustomError(error)) {\n                errorModal = (\n                    <ErrorModal\n                        error={error}\n                        onClose={this.handleCloseErrorModal}\n                        title={error.title}\n                    />\n                );\n            } else {\n                errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\n            }\n        }\n\n        return (\n            <div className={classNames('remove-checkout-step-numbers', { 'is-embedded': isEmbedded() })} data-test=\"checkout-page-container\" id=\"checkout-page-container\">\n                <div className=\"layout optimizedCheckout-contentPrimary\">\n                    {this.renderContent()}\n                </div>\n                {errorModal}\n            </div>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop, extensionState } = this.props;\n\n        const { activeStepType, defaultStepType, isCartEmpty, isRedirecting } = this.state;\n\n        if (isCartEmpty) {\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n        }\n\n        const isPaymentStepActive = activeStepType\n            ? activeStepType === CheckoutStepType.Payment\n            : defaultStepType === CheckoutStepType.Payment;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isRedirecting}>\n                <div className=\"layout-main\">\n                    <LoadingNotification isLoading={(!isShowingWalletButtonsOnTop && isPending) || extensionState.isShowingLoadingIndicator} />\n\n                    {/* <Extension region={ExtensionRegion.GlobalWebWorker} /> */}\n                    <PromotionBannerList promotions={promotions} />\n\n                    {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\n                        <CheckoutButtonContainer\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\n                            isPaymentStepActive={isPaymentStepActive}\n                            onUnhandledError={this.handleUnhandledError}\n                            onWalletButtonClick={this.handleWalletButtonClick}\n                        />\n                    )}\n\n                    <ol className=\"checkout-steps\">\n                        {steps\n                            .filter((step) => step.isRequired)\n                            .map((step) =>\n                                this.renderStep({\n                                    ...step,\n                                    isActive: activeStepType\n                                        ? activeStepType === step.type\n                                        : defaultStepType === step.type,\n                                    isBusy: isPending,\n                                }),\n                            )}\n                    </ol>\n                </div>\n\n                {this.renderCartSummary()}\n            </LoadingOverlay>\n        );\n    }\n\n    private renderStep(step: CheckoutStepStatus): ReactNode {\n        switch (step.type) {\n            case CheckoutStepType.Customer:\n                return this.renderCustomerStep(step);\n\n            case CheckoutStepType.Shipping:\n                return this.renderShippingStep(step);\n\n            case CheckoutStepType.Billing:\n                return this.renderBillingStep(step);\n\n            case CheckoutStepType.Payment:\n                return this.renderPaymentStep(step);\n\n            default:\n                return null;\n        }\n    }\n\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n        const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\n        const {\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n            isSubscribed,\n        } = this.state;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                suggestion={<CheckoutSuggestion />}\n                summary={\n                    <CustomerInfo\n                        onSignOut={this.handleSignOut}\n                        onSignOutError={this.handleError}\n                    />\n                }\n            >\n                <Customer\n                    checkEmbeddedSupport={this.checkEmbeddedSupport}\n                    isEmbedded={isEmbedded()}\n                    isSubscribed={isSubscribed}\n                    isWalletButtonsOnTop = {isShowingWalletButtonsOnTop }\n                    onAccountCreated={this.navigateToNextIncompleteStep}\n                    onChangeViewType={this.setCustomerViewType}\n                    onContinueAsGuest={this.navigateToNextIncompleteStep}\n                    onContinueAsGuestError={this.handleError}\n                    onReady={this.handleReady}\n                    onSignIn={this.navigateToNextIncompleteStep}\n                    onSignInError={this.handleError}\n                    onSubscribeToNewsletter={this.handleNewsletterSubscription}\n                    onUnhandledError={this.handleUnhandledError}\n                    onWalletButtonClick={this.handleWalletButtonClick}\n                    step={step}\n                    viewType={customerViewType}\n                />\n            </CheckoutStep>\n        );\n    }\n\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\n        const { hasCartChanged, cart, consignments = [], isShippingDiscountDisplayEnabled } = this.props;\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\n\n        if (!cart) {\n            return;\n        }\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={<ShippingSummary cart={cart} consignments={consignments} isMultiShippingMode={isMultiShippingMode} isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}/>}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Shipping\n                        cartHasChanged={hasCartChanged}\n                        isBillingSameAsShipping={isBillingSameAsShipping}\n                        isMultiShippingMode={isMultiShippingMode}\n                        navigateNextStep={this.handleShippingNextStep}\n                        onCreateAccount={this.handleShippingCreateAccount}\n                        onReady={this.handleReady}\n                        onSignIn={this.handleShippingSignIn}\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\n                        onUnhandledError={this.handleUnhandledError}\n                        step={step}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n        const { billingAddress } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Billing\n                        navigateNextStep={this.navigateToNextIncompleteStep}\n                        onReady={this.handleReady}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n        const { consignments, cart, errorLogger } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n            >\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n                    <Payment\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\n                        errorLogger={errorLogger}\n                        isEmbedded={isEmbedded()}\n                        isUsingMultiShipping={\n                            cart && consignments\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\n                                : false\n                        }\n                        onCartChangedError={this.handleCartChangedError}\n                        onFinalize={this.navigateToOrderConfirmation}\n                        onReady={this.handleReady}\n                        onSubmit={this.navigateToOrderConfirmation}\n                        onSubmitError={this.handleError}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderCartSummary(): ReactNode {\n        const { isMultiShippingMode } = this.state;\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer>\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                                <CartSummaryDrawer isMultiShippingMode={isMultiShippingMode} />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <CartSummary isMultiShippingMode={isMultiShippingMode} />\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                            </LazyContainer>\n                        </aside>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n        const { clearError, error, steps } = this.props;\n        const { activeStepType } = this.state;\n        const step = find(steps, { type });\n\n        if (!step) {\n            return;\n        }\n\n        if (activeStepType === step.type) {\n            return;\n        }\n\n        if (options && options.isDefault) {\n            this.setState({ defaultStepType: step.type });\n        } else {\n            this.setState({ activeStepType: step.type });\n        }\n\n        if (error) {\n            clearError(error);\n        }\n    }\n\n    private handleToggleMultiShipping: () => void = () => {\n        const { isMultiShippingMode } = this.state;\n\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\n    };\n\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\n        options,\n    ) => {\n        const { steps, analyticsTracker } = this.props;\n        const activeStepIndex = findIndex(steps, { isActive: true });\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n        if (!activeStep) {\n            return;\n        }\n\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n        if (previousStep) {\n            analyticsTracker.trackStepCompleted(previousStep.type);\n        }\n\n        this.navigateToStep(activeStep.type, options);\n    };\n\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n        const { steps, analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postComplete();\n        }\n\n        SubscribeSessionStorage.removeSubscribeStatus();\n\n        this.setState({ isRedirecting: true }, () => {\n            navigateToOrderConfirmation(orderId);\n        });\n    };\n\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n        const { embeddedSupport } = this.props;\n\n        return embeddedSupport.isSupported(...methodIds);\n    };\n\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\n        this.navigateToStep(CheckoutStepType.Shipping);\n    };\n\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType, defaultStepType } =\n            this.state;\n\n        const { steps } = this.props;\n\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\n            data.getConsignments() || [],\n        );\n\n        const isDefaultStepPaymentOrBilling =\n            !activeStepType &&\n            (defaultStepType === CheckoutStepType.Payment ||\n                defaultStepType === CheckoutStepType.Billing);\n\n        const isShippingStepFinished =\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\n                findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n        if (\n            prevHasSelectedShippingOptions &&\n            !newHasSelectedShippingOptions &&\n            isShippingStepFinished\n        ) {\n            this.navigateToStep(CheckoutStepType.Shipping);\n            this.setState({ error: new ShippingOptionExpiredError() });\n        }\n\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n    };\n\n    private handleCloseErrorModal: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepViewed(type);\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        this.handleError(error);\n\n        // For errors that are not caught and handled by child components, we\n        // handle them here by displaying a generic error modal to the shopper.\n        this.setState({ error });\n    };\n\n    private handleError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n        this.navigateToStep(type);\n    };\n\n    private handleReady: () => void = () => {\n        this.navigateToNextIncompleteStep({ isDefault: true });\n    };\n\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n        this.setState({ isSubscribed: subscribed });\n    }\n\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\n\n        if (isPriceHiddenFromGuests) {\n            if (window.top) {\n                return (window.top.location.href = cartUrl);\n            }\n        }\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postSignedOut();\n        }\n\n        if (isGuestEnabled) {\n            this.setCustomerViewType(CustomerViewType.Guest);\n        }\n\n        if (isCartEmpty) {\n            this.setState({ isCartEmpty: true });\n\n            if (!isEmbedded()) {\n                if (window.top) {\n                    return window.top.location.assign(loginUrl);\n                }\n            }\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n    };\n\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\n        isBillingSameAsShipping,\n    ) => {\n        this.setState({ isBillingSameAsShipping });\n\n        if (isBillingSameAsShipping) {\n            this.navigateToNextIncompleteStep();\n        } else {\n            this.navigateToStep(CheckoutStepType.Billing);\n        }\n    };\n\n    private handleShippingSignIn: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.Login);\n    };\n\n    private handleShippingCreateAccount: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\n    };\n\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n        const { createAccountUrl } = this.props;\n\n        if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n            if (window.top) {\n                window.top.location.replace(createAccountUrl);\n            }\n\n            return;\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n        this.setState({ customerViewType });\n    };\n\n    private handleBeforeExit: () => void = () => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.exitCheckout();\n    }\n\n    private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.walletButtonClick(methodName);\n    }\n}\n\nexport default withExtension(\n    withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\n);\n","import { CheckoutSelectors, CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\n\nimport { WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n    const { data, errors, statuses } = checkoutState;\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\n    const {\n        checkoutSettings: {\n            guestCheckoutEnabled: isGuestEnabled = false,\n            checkoutUserExperienceSettings = {\n                walletButtonsOnTop: false,\n                floatingLabelEnabled: false,\n            },\n        } = {},\n        links: {\n            loginLink: loginUrl = '',\n            createAccountLink: createAccountUrl = '',\n            cartLink: cartUrl = '',\n        } = {},\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n    } = data.getConfig() || {};\n\n    const subscribeToConsignmentsSelector = createSelector(\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n        },\n    );\n\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop); \n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        data.getConfig()?.checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return {\n        billingAddress: data.getBillingAddress(),\n        cart: data.getCart(),\n        clearError: checkoutService.clearError,\n        consignments: data.getConsignments(),\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n        isGuestEnabled,\n        isLoadingCheckout: statuses.isLoadingCheckout(),\n        isShippingDiscountDisplayEnabled,\n        isPending: statuses.isPending(),\n        isPriceHiddenFromGuests,\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n        loadCheckout: checkoutService.loadCheckout,\n        loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\n        loginUrl,\n        cartUrl,\n        createAccountUrl,\n        promotions,\n        subscribeToConsignments: subscribeToConsignmentsSelector({\n            checkoutService,\n            checkoutState,\n        }),\n        steps: data.getCheckout() ? getCheckoutStepStatuses(checkoutState) : EMPTY_ARRAY,\n    };\n}\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider, StyleProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nexport default class CheckoutApp extends Component<CheckoutAppProps> {\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private embeddedSupport = createEmbeddedCheckoutSupport(getLanguageService());\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<CheckoutAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render() {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider\n                                checkoutService={this.checkoutService}\n                                errorLogger={createErrorLogger()}\n                            >\n                                <StyleProvider>\n                                    <Checkout\n                                        {...this.props}\n                                        createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                        embeddedStylesheet={this.embeddedStylesheet}\n                                        embeddedSupport={this.embeddedSupport}\n                                        errorLogger={this.errorLogger}\n                                    />\n                                </StyleProvider>\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n}\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\n}\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { createRequestSender, RequestSender } from '@bigcommerce/request-sender';\n\nimport { CreatedCustomer, CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface PasswordField {\n    minLength: number;\n}\n\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\n    const renderPasswordInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const renderPasswordConfirmationInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const passwordLabelContent = useMemo(\n        () => (\n            <>\n                <TranslatedString id=\"customer.password_label\" />{' '}\n                <small>\n                    {`${minLength}-`}\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\n                </small>\n            </>\n        ),\n        [minLength],\n    );\n\n    const passwordConfirmationLabelContent = useMemo(\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\n        [],\n    );\n\n    return (\n        <>\n            <FormField\n                input={renderPasswordInput}\n                labelContent={passwordLabelContent}\n                name=\"password\"\n            />\n\n            <FormField\n                input={renderPasswordConfirmationInput}\n                labelContent={passwordConfirmationLabelContent}\n                name=\"confirmPassword\"\n            />\n        </>\n    );\n};\n\nexport default memo(SignUpPasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\nimport { object, ref, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { PasswordRequirements } from '../customer';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport SignUpPasswordField from './SignUpPasswordField';\n\nexport interface SignUpFormProps {\n    isSigningUp?: boolean;\n    customerCanBeCreated: boolean;\n    passwordRequirements: PasswordRequirements;\n    onSignUp(data: SignUpFormValues): void;\n}\n\nexport interface SignUpFormValues {\n    password: string;\n    confirmPassword: string;\n}\n\nconst GuestSignUpForm: FunctionComponent<\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\n    <Fieldset\n        legend={\n            <Legend>\n                <TranslatedString\n                    id={\n                        customerCanBeCreated\n                            ? 'customer.create_account_text'\n                            : 'customer.set_password_text'\n                    }\n                />\n            </Legend>\n        }\n    >\n        {!customerCanBeCreated && (\n            <p>\n                <TranslatedString id=\"customer.account_created_text\" />\n            </p>\n        )}\n\n        <Form className=\"guest-signup form\">\n            <SignUpPasswordField minLength={minLength} />\n\n            <div className=\"form-actions\">\n                <Button\n                    id=\"createAccountButton\"\n                    isLoading={isSigningUp}\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString\n                        id={\n                            customerCanBeCreated\n                                ? 'customer.create_account_action'\n                                : 'customer.set_password_action'\n                        }\n                    />\n                </Button>\n            </div>\n        </Form>\n    </Fieldset>\n);\n\nexport default withLanguage(\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\n        mapPropsToValues: () => ({\n            password: '',\n            confirmPassword: '',\n        }),\n        handleSubmit: (values, { props: { onSignUp } }) => {\n            onSignUp(values);\n        },\n        validationSchema: ({\n            language,\n            passwordRequirements: { description, numeric, alpha, minLength },\n        }: SignUpFormProps & WithLanguageProps) =>\n            object({\n                password: string()\n                    .required(description || language.translate('customer.password_required_error'))\n                    .matches(\n                        numeric,\n                        description ||\n                            language.translate('customer.password_number_required_error'),\n                    )\n                    .matches(\n                        alpha,\n                        description ||\n                            language.translate('customer.password_letter_required_error'),\n                    )\n                    .min(\n                        minLength,\n                        description ||\n                            language.translate('customer.password_under_minimum_length_error'),\n                    )\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\n                confirmPassword: string()\n                    .required(language.translate('customer.password_confirmation_required_error'))\n                    .oneOf(\n                        [ref('password')],\n                        language.translate('customer.password_confirmation_error'),\n                    ),\n            }),\n    })(memo(GuestSignUpForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.set_password_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default PasswordSavedSuccessAlert;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst SignedUpSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.create_account_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default SignedUpSuccessAlert;\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationRequirementsError extends CustomError {\n    constructor(data: Error, requirements: string) {\n        super({\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\n            message: requirements,\n            title: getLanguageService().translate(\n                'customer.create_account_requirements_error_heading',\n            ),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationFailedError extends CustomError {\n    constructor(data: Error) {\n        super({\n            name: 'ACCOUNT_CREATION_FAILED',\n            message: getLanguageService().translate('customer.create_account_error'),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\n    }\n}\n","import { GatewayOrderPayment, Order, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isGiftCertificatePayment } from '../giftCertificate';\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport interface PaymentInstructionsProps {\n    order: Order;\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\n}\n\nfunction getPaymentInstructions(order: Order): string {\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\n\n    return instructions || '';\n}\n\nexport default getPaymentInstructions;\n","import { GiftCertificate, OrderPayments } from '@bigcommerce/checkout-sdk';\n\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\n\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\n        code: detail.code,\n        remaining: detail.remaining,\n        used: amount,\n        balance: amount + detail.remaining,\n        purchaseDate: '',\n    }));\n}\n","import { OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\n    return (payments || [])\n        .filter(isStoreCreditPayment)\n        .reduce((total, payment) => total + payment.amount, 0);\n}\n","import { Order } from '@bigcommerce/checkout-sdk';\n\nimport { mapFromPayments } from '../giftCertificate';\n\nimport getOrderShippingCostAfterAutomaticDiscount from './getOrderShippingCostAfterAutomaticDiscount';\nimport getStoreCreditAmount from './getStoreCreditAmount';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    baseAmount,\n    discountAmount,\n    isTaxIncluded,\n    shippingCostBeforeDiscount,\n    payments,\n    handlingCostTotal,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n    consignments,\n}: Order,\nisShippingDiscountDisplayEnabled: boolean,\n): OrderSummarySubtotalsProps {\n\n    const shippingAmount = isShippingDiscountDisplayEnabled && consignments.shipping.length > 0\n    ? getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments.shipping)\n    : shippingCostBeforeDiscount;\n\n    return {\n        subtotalAmount: baseAmount,\n        shippingAmount,\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled ? shippingCostBeforeDiscount : undefined,\n        giftWrappingAmount: giftWrappingCostTotal,\n        discountAmount,\n        storeCreditAmount: getStoreCreditAmount(payments),\n        handlingAmount: handlingCostTotal,\n        coupons,\n        giftCertificates: payments && mapFromPayments(payments),\n        taxes,\n        isTaxIncluded,\n        fees,\n    };\n}\n","import { OrderShippingConsignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: OrderShippingConsignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: OrderShippingConsignment) {\n    return consignment.discounts\n    .filter(discount => !discount.code)\n    .reduce((total, discount) => total + discount.amount, 0);\n}\n","import React, { FunctionComponent } from 'react';\n\nconst OrderConfirmationSection: FunctionComponent<{ children?: React.ReactNode }> = ({ children }) => (\n    <section className=\"orderConfirmation-section\">{children}</section>\n);\n\nexport default OrderConfirmationSection;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface MandateTextComponentProps {\n    mandateText: {\n        [key: string]: string;\n    },\n    methodId: string;\n    providerId: string;\n}\n\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\n    mandateText,\n    providerId,\n    methodId,\n}) => {\n    if (!Object.keys(mandateText).length) {\n        return null;\n    }\n\n    return (\n        <ul data-test='order-confirmation-mandate-text-list'>\n            {Object.entries(mandateText).map((field, index) => {\n                return (\n                    <li data-test={`order-confirmation-mandate-text-list-item-${index}`} key={index}>\n                        <TranslatedString\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\n                        />:\n                        <b>\n                            {` ${field[1]}`}\n                        </b>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n","import { GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { MandateTextComponent } from './MandateTextComponent';\n\nexport interface PaymentsWithMandatesProps {\n    paymentsWithMandates: GatewayOrderPayment[];\n}\n\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\n    paymentsWithMandates,\n}) => <>\n    {paymentsWithMandates.map((payment) => {\n        if (payment?.mandate?.url) {\n            return (\n                <a\n                    data-test=\"order-confirmation-mandate-link-text\"\n                    href={payment.mandate.url}\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TranslatedString\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </a>\n            );\n        } else if (payment?.mandate?.id) {\n            return (\n                <p\n                    data-test=\"order-confirmation-mandate-id-text\"\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                >\n                    <TranslatedString\n                        data={{ mandate: payment.mandate.id }}\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </p>\n            );\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\n            return <MandateTextComponent\n                key='mandateTextList'\n                mandateText={payment.mandate.mandateText}\n                methodId={payment.methodId}\n                providerId={payment.providerId}\n            />\n        }\n    })}\n</>\n","import { GatewayOrderPayment, GiftCertificateOrderPayment, Order, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\n\nexport interface OrderStatusProps {\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber?: string;\n    order: Order;\n}\n\ntype PaymentWithMandate = GatewayOrderPayment &\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\n\nconst isPaymentWithMandate = (\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\n\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\n    config,\n    order,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\n\n    return (\n        <OrderConfirmationSection>\n            {order.orderId && (\n                <p data-test=\"order-confirmation-order-number-text\">\n                    <TranslatedHtml\n                        data={{ orderNumber: order.orderId }}\n                        id=\"order_confirmation.order_number_text\"\n                    />\n                </p>\n            )}\n\n            <p data-test=\"order-confirmation-order-status-text\">\n                <OrderStatusMessage\n                    config={config}\n                    orderNumber={order.orderId}\n                    orderStatus={order.status}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n            </p>\n            <PaymentsWithMandates\n                paymentsWithMandates={paymentsWithMandates}\n            />\n            {order.hasDigitalItems && (\n                <p data-test=\"order-confirmation-digital-items-text\">\n                    <TranslatedHtml\n                        id={\n                            order.isDownloadable\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\n                        }\n                    />\n                </p>\n            )}\n        </OrderConfirmationSection>\n    );\n};\n\ninterface OrderStatusMessageProps {\n    config: StoreConfig;\n    orderNumber: number;\n    orderStatus: string;\n    supportEmail?: string;\n    supportPhoneNumber?: string;\n}\n\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\n    config,\n    orderNumber,\n    orderStatus,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    switch (orderStatus) {\n        case 'MANUAL_VERIFICATION_REQUIRED':\n        case 'AWAITING_PAYMENT':\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\n\n        case 'PENDING':\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_pending_status_text\"\n                />\n            );\n\n        case 'INCOMPLETE':\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\n                return (\n                    <TranslatedHtml\n                        data={{ orderNumber, supportEmail }}\n                        id=\"order_confirmation.order_pending_status_text\"\n                    />\n                );\n            }\n\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_incomplete_status_text\"\n                />\n            );\n\n        default:\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\n                    id={\n                        supportPhoneNumber\n                            ? 'order_confirmation.order_with_support_number_text'\n                            : 'order_confirmation.order_without_support_number_text'\n                    }\n                />\n            );\n    }\n};\n\nexport default memo(OrderStatus);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPrint: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconPrint);\n","import { throttle } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconPrint } from '../ui/icon';\n\nexport interface PrintLinkProps {\n    className?: string;\n}\n\nconst PRINT_MODAL_THROTTLE = 500;\n\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\n    const handleClick = useCallback(\n        throttle(() => {\n            window.print();\n        }, PRINT_MODAL_THROTTLE),\n        [],\n    );\n\n    if (typeof window.print !== 'function') {\n        return null;\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            href=\"#\"\n            id=\"cart-print-link\"\n            onClick={preventDefault(handleClick)}\n        >\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\n        </a>\n    );\n};\n\nexport default memo(PrintLink);\n","import React, { FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    children: React.ReactNode;\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import {\n    CheckoutSelectors,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    Order,\n    ShopperConfig,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { LazyContainer, LoadingSpinner } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport { ErrorModal } from '../common/error';\nimport { isExperimentEnabled, retry } from '../common/utility';\nimport { getPasswordRequirementsFromConfig } from '../customer';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport {\n    CreatedCustomer,\n    GuestSignUpForm,\n    PasswordSavedSuccessAlert,\n    SignedUpSuccessAlert,\n    SignUpFormValues,\n} from '../guestSignup';\nimport {\n    AccountCreationFailedError,\n    AccountCreationRequirementsError,\n} from '../guestSignup/errors';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { MobileView } from '../ui/responsive';\n\nimport getPaymentInstructions from './getPaymentInstructions';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport OrderStatus from './OrderStatus';\nimport PrintLink from './PrintLink';\nimport ThankYouHeader from './ThankYouHeader';\n\nconst OrderSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary\" */\n                './OrderSummary'\n            ),\n    ),\n);\n\nconst OrderSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary-drawer\" */\n                './OrderSummaryDrawer'\n            ),\n    ),\n);\n\nexport interface OrderConfirmationState {\n    error?: Error;\n    hasSignedUp?: boolean;\n    isSigningUp?: boolean;\n}\n\nexport interface OrderConfirmationProps {\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    errorLogger: ErrorLogger;\n    orderId: number;\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\ninterface WithCheckoutOrderConfirmationProps {\n    order?: Order;\n    config?: StoreConfig;\n    loadOrder(orderId: number): Promise<CheckoutSelectors>;\n    isLoadingOrder(): boolean;\n}\n\nclass OrderConfirmation extends Component<\n    OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\n    OrderConfirmationState\n> {\n    state: OrderConfirmationState = {};\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n\n    componentDidMount(): void {\n        const {\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            loadOrder,\n            orderId,\n            analyticsTracker\n        } = this.props;\n\n        loadOrder(orderId)\n            .then(({ data }) => {\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n                this.embeddedMessenger = messenger;\n\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n                messenger.postFrameLoaded({ contentId: containerId });\n\n                analyticsTracker.orderPurchased();\n            })\n            .catch(this.handleUnhandledError);\n    }\n\n    render(): ReactNode {\n        const { order, config, isLoadingOrder } = this.props;\n\n        if (!order || !config || isLoadingOrder()) {\n            return <LoadingSpinner isLoading={true} />;\n        }\n\n        const paymentInstructions = getPaymentInstructions(order);\n        const {\n            storeProfile: { orderEmail, storePhoneNumber },\n            shopperConfig,\n            links: { siteLink },\n        } = config;\n\n        return (\n            <div\n                className={classNames('layout optimizedCheckout-contentPrimary', {\n                    'is-embedded': isEmbedded(),\n                })}\n            >\n                <div className=\"layout-main\">\n                    <div className=\"orderConfirmation\">\n                        <ThankYouHeader name={order.billingAddress.firstName} />\n\n                        <OrderStatus\n                            config={config}\n                            order={order}\n                            supportEmail={orderEmail}\n                            supportPhoneNumber={storePhoneNumber}\n                        />\n\n                        {paymentInstructions && (\n                            <OrderConfirmationSection>\n                                <div\n                                    dangerouslySetInnerHTML={{\n                                        __html: DOMPurify.sanitize(paymentInstructions),\n                                    }}\n                                    data-test=\"payment-instructions\"\n                                />\n                            </OrderConfirmationSection>\n                        )}\n\n                        {this.renderGuestSignUp({\n                            shouldShowPasswordForm: order.customerCanBeCreated,\n                            customerCanBeCreated: !order.customerId,\n                            shopperConfig,\n                        })}\n\n                        <div className=\"continueButtonContainer\">\n                            <form action={siteLink} method=\"get\" target=\"_top\">\n                                <Button type=\"submit\" variant={ButtonVariant.Secondary}>\n                                    <TranslatedString id=\"order_confirmation.continue_shopping\" />\n                                </Button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n\n                {this.renderOrderSummary()}\n                {this.renderErrorModal()}\n            </div>\n        );\n    }\n\n    private renderGuestSignUp({\n        customerCanBeCreated,\n        shouldShowPasswordForm,\n        shopperConfig,\n    }: {\n        customerCanBeCreated: boolean;\n        shouldShowPasswordForm: boolean;\n        shopperConfig: ShopperConfig;\n    }): ReactNode {\n        const { isSigningUp, hasSignedUp } = this.state;\n\n        const { order } = this.props;\n\n        return (\n            <>\n                {shouldShowPasswordForm && !hasSignedUp && (\n                    <GuestSignUpForm\n                        customerCanBeCreated={customerCanBeCreated}\n                        isSigningUp={isSigningUp}\n                        onSignUp={this.handleSignUp}\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\n                    />\n                )}\n\n                {hasSignedUp &&\n                    (order?.customerId ? <PasswordSavedSuccessAlert /> : <SignedUpSuccessAlert />)}\n            </>\n        );\n    }\n\n    private renderOrderSummary(): ReactNode {\n        const { order, config } = this.props;\n\n        if (!order || !config) {\n            return null;\n        }\n\n        const { currency, shopperCurrency, checkoutSettings } = config;\n\n        const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n            checkoutSettings,\n            'PROJECT-6643.enable_shipping_discounts_in_orders',\n        );\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer>\n                                <OrderSummaryDrawer\n                                    {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                                    headerLink={\n                                        <PrintLink className=\"modal-header-link cart-modal-link\" />\n                                    }\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <OrderSummary\n                                    headerLink={<PrintLink />}\n                                    {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        </aside>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private renderErrorModal(): ReactNode {\n        const { error } = this.state;\n\n        return (\n            <ErrorModal\n                error={error}\n                onClose={this.handleErrorModalClose}\n                shouldShowErrorCode={false}\n            />\n        );\n    }\n\n    private handleErrorModalClose: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleSignUp: (values: SignUpFormValues) => void = ({ password, confirmPassword }) => {\n        const { createAccount, config } = this.props;\n\n        const shopperConfig = config && config.shopperConfig;\n        const passwordRequirements =\n            (shopperConfig &&\n                shopperConfig.passwordRequirements &&\n                shopperConfig.passwordRequirements.error) ||\n            '';\n\n        this.setState({\n            isSigningUp: true,\n        });\n\n        createAccount({\n            password,\n            confirmPassword,\n        })\n            .then(() => {\n                this.setState({\n                    hasSignedUp: true,\n                    isSigningUp: false,\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error:\n                        error.status < 500\n                            ? new AccountCreationRequirementsError(error, passwordRequirements)\n                            : new AccountCreationFailedError(error),\n                    hasSignedUp: false,\n                    isSigningUp: false,\n                });\n            });\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        this.setState({ error });\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n}\n\nexport function mapToOrderConfirmationProps(\n    context: CheckoutContextProps,\n): WithCheckoutOrderConfirmationProps | null {\n    const {\n        checkoutState: {\n            data: { getOrder, getConfig },\n            statuses: { isLoadingOrder },\n        },\n        checkoutService,\n    } = context;\n\n    const config = getConfig();\n    const order = getOrder();\n\n    return {\n        config,\n        isLoadingOrder,\n        loadOrder: checkoutService.loadOrder,\n        order,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component, ReactNode } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider, StyleProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, CreatedCustomer, SignUpFormValues } from '../guestSignup';\n\nimport OrderConfirmation from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\n    private accountService = new AccountService();\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render(): ReactNode {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider checkoutService={this.checkoutService} errorLogger={createErrorLogger()}>\n                                <StyleProvider>\n                                    <OrderConfirmation\n                                        {...this.props}\n                                        createAccount={this.createAccount}\n                                        createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                        embeddedStylesheet={this.embeddedStylesheet}\n                                        errorLogger={this.errorLogger}\n                                    />\n                                </StyleProvider>\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\n        password,\n        confirmPassword,\n    }) => {\n        const { orderId } = this.props;\n\n        return this.accountService.create({\n            orderId,\n            newsletter: false,\n            password,\n            confirmPassword,\n        });\n    };\n}\n\nexport default OrderConfirmationApp;\n","import { Cart } from '@bigcommerce/checkout-sdk';\n\n/**\n * Minimum charge amounts due to the Stripe documentation\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\n */\nenum stripeLinkMinAmount {\n    'USD' = 0.5,\n    'AED' = 2,\n    'AUD' = 0.5,\n    'BGN' = 1,\n    'BRL' = 0.5,\n    'CAD' = 0.5,\n    'CHF' = 0.5,\n    'CZK' = 15,\n    'DKK' = 2.5,\n    'EUR' = 0.5,\n    'GBP' = 0.3,\n    'HKD' = 4,\n    'HUF' = 175,\n    'INR' = 0.5,\n    'JPY' = 50,\n    'MXN' = 10,\n    'MYR' = 2,\n    'NOK' = 3,\n    'NZD' = 0.5,\n    'PLN' = 2,\n    'RON' = 2,\n    'SEK' = 3,\n    'SGD' = 0.5,\n    'THB' = 10,\n}\n\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\n    return code in stripeLinkMinAmount;\n};\n\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\n    const {\n        currency: { code },\n        cartAmount,\n    } = cart;\n\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default shouldUseStripeLinkByMinimumAmount;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBigCommercePaymentsFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.BigCommercePaymentsCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BigCommercePaymentsFastLane\n    );\n};\n\nexport default isBigCommercePaymentsFastlaneMethod;\n","import { Address, Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\ninterface LocalizedGeography {\n    localizedCountry: string;\n    localizedProvince: string;\n}\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import { CustomerPasswordRequirements, ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","import React, { ComponentType } from 'react';\n\nimport ResolvableComponent from './ResolvableComponent';\n\nexport default function toResolvableComponent<TProps extends Record<string, any>, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n    resolveIds: TIdentifier[],\n): ResolvableComponent<TProps, TIdentifier> {\n    return Object.assign((props: TProps) => <Component {...props} />, { resolveIds });\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode, useId } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n    children?: ReactNode;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => {\n    const describedBy = useId();\n\n    return (\n        <div\n            aria-describedby={describedBy}\n            className={classNames(\n                'alertBox',\n                additionalClassName,\n                { 'alertBox--info': type === AlertType.Info || !type },\n                { 'alertBox--error': type === AlertType.Error },\n                { 'alertBox--success': type === AlertType.Success },\n                { 'alertBox--warning': type === AlertType.Warning },\n            )}\n            data-test={testId}\n        >\n            <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n            <div\n                id={describedBy}\n                aria-live={type === AlertType.Error ? 'assertive' : 'polite'}\n                className=\"alertBox-column alertBox-message\"\n                role={type === AlertType.Error ? 'alert' : 'status'}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default Alert;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nexport default PaymentMethodId;\n","export default function parseAnchor(text: string): string[] {\n    const div = document.createElement('div');\n\n    div.innerHTML = text;\n\n    const anchor = div.querySelector('a');\n\n    if (!anchor) {\n        return [];\n    }\n\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\n\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\n}\n","import { CurrencyService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithCurrencyProps {\n    currency: CurrencyService;\n}\n\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithCurrency',\n    pickProps: (value, key) => key === 'currency' && !!value,\n});\n\nexport default withCurrency;\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    ArraySchema,\n    date,\n    number,\n    NumberSchema,\n    object,\n    ObjectSchema,\n    Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.checkbox) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.checkbox\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import React, { FunctionComponent } from 'react';\n\nimport { withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nexport interface ShopperCurrencyProps {\n    amount: number;\n}\n\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\n    amount,\n    currency,\n}) => <>{currency.toCustomerCurrency(amount)}</>;\n\nexport default withCurrency(ShopperCurrency);\n","import isBigCommercePaymentsFastlaneMethod from './is-bigcommerce-payments-fastlane-method';\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\n\nconst isPaypalFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        isBraintreeFastlaneMethod(methodId) ||\n        isPayPalCommerceFastlaneMethod(methodId) ||\n        isBigCommercePaymentsFastlaneMethod(methodId)\n    );\n};\n\nexport default isPaypalFastlaneMethod;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithDateProps {\n    date: {\n        inputFormat: string;\n    };\n}\n\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'withDate',\n    pickProps: (value, key) => key === 'date' && !!value,\n});\n\nexport default withDate;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading,\n    renderWhileLoading,\n}) => {\n    const skeleton = (\n        <div className=\"checkout-form\">\n            <div className=\"form-legend-container\">\n                <div className=\"address-form-heading-skeleton form-legend optimizedCheckout-headingSecondary\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name-fields-skeleton\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                </div>\n                <div className=\"skeleton-container\">\n                    <div className=\"input-skeleton\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPayPalCommerceFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.PaypalCommerceCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\n    );\n};\n\nexport default isPayPalCommerceFastlaneMethod;\n","import { kebabCase } from 'lodash';\n\nexport default function getAppliedStyles(\n    element: HTMLElement,\n    properties: string[],\n): { [key: string]: string } {\n    const declaration = window.getComputedStyle(element);\n\n    return properties.reduce(\n        (result, propertyName) => ({\n            ...result,\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\n        }),\n        {},\n    );\n}\n","import { Address, FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(\n    address: Address,\n    formFields: FormField[],\n): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import React, { FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n    isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div\n            aria-busy=\"true\"\n            className=\"loadingSpinner loadingOverlay-container\"\n            role=\"status\"\n            style={{ height: 100 }}\n        >\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n        </div>\n    );\n};\n\nexport default memo(LoadingSpinner);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport CheckboxInput from './CheckboxInput';\nimport FormFieldError from './FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n    testId?: string;\n    newFontStyle?: boolean;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n    testId,\n    newFontStyle = false,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                    newFontStyle={newFontStyle}\n                    testId={testId}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","import { LineItem } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\n}\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import { Address, CheckoutPayment, FormField } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nexport interface StaticBillingAddressProps {\n    address: Address;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n    fields: FormField[];\n    payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY }) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n        return (\n            <p>\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\n            </p>\n        );\n    }\n\n    return (\n        <>\n            <StaticAddress address={address} type={AddressType.Billing} />\n\n            {showPayPalFastlaneLabel && <PoweredByPayPalFastlaneLabel />}\n        </>\n    );\n};\n\nexport function mapToStaticBillingAddressProps(\n    { checkoutState }: CheckoutContextProps,\n    { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n    const {\n        data: { getBillingAddressFields, getCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n\n    return {\n        fields: getBillingAddressFields(address.countryCode),\n        payments: checkout && checkout.payments,\n    };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import {\n    CheckoutPayment,\n    GiftCertificateOrderPayment,\n    OrderPayment,\n} from '@bigcommerce/checkout-sdk';\n\nexport default function isGiftCertificatePayment(\n    payment: OrderPayment | CheckoutPayment,\n): payment is GiftCertificateOrderPayment {\n    return payment.providerId === 'giftcertificate';\n}\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n    newFontStyle?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            newFontStyle = false,\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n                { 'floating-form-field-input': newFontStyle && isFloatingLabelEnabled },\n                { 'body-regular': newFontStyle && !isFloatingLabelEnabled },\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","import { ComponentType } from 'react';\n\nimport { ResolvableComponent } from '.';\n\nexport default function isResolvableComponent<TProps, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n): Component is ResolvableComponent<TProps, TIdentifier> {\n    return 'resolveIds' in Component;\n}\n","import { ComponentType } from 'react';\n\nimport { isResolvableComponent } from '@bigcommerce/checkout/payment-integration-api';\n\ninterface ResolveResult<TProps> {\n    component: ComponentType<TProps>;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n): ComponentType<TProps> | undefined {\n    const results: Array<ResolveResult<TProps>> = [];\n\n    for (const [_, Component] of Object.entries(components)) {\n        if (!isResolvableComponent<TProps, TResolveId>(Component)) {\n            continue;\n        }\n\n        for (const resolverId of Component.resolveIds) {\n            const result = { component: Component, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .filter((result) => result.matches > 0)[0];\n\n    return matched?.component ?? results.find((result) => result.default)?.component;\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import { useContext } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const useExtensions = () => {\n    const extensionContext = useContext(ExtensionContext);\n\n    if (!extensionContext) {\n        throw new Error('useExtensions must be used within an <ExtensionProvider>');\n    }\n\n    return extensionContext;\n};\n","import { CheckoutPayment, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\n    return payment.providerId === 'storecredit';\n}\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent, ReactNode, SyntheticEvent } from 'react';\n\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isHtmlError from './isHtmlError';\nimport isRequestError from './isRequestError';\n\nimport { CustomError } from './index';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError | CustomError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nexport default class ErrorModal extends PureComponent<ErrorModalProps> {\n    private aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    render(): ReactNode {\n        const { error } = this.props;\n\n        return (\n            <Modal\n                additionalModalClassName=\"modal--error\"\n                aria={this.aria}\n                footer={this.renderFooter()}\n                header={this.renderHeader()}\n                isOpen={!!error}\n                onRequestClose={this.handleOnRequestClose}\n            >\n                {this.renderBody()}\n            </Modal>\n        );\n    }\n\n    private renderHeader(): ReactNode {\n        const { error, title = error && isCustomError(error) && error.title } = this.props;\n\n        return (\n            <ModalHeader>\n                <IconError\n                    additionalClassName=\"icon--error modal-header-icon\"\n                    size={IconSize.Small}\n                />\n                <span aria-live=\"assertive\" role=\"alert\">\n                    {title || <TranslatedString id=\"common.error_heading\" />}\n                </span>\n            </ModalHeader>\n        );\n    }\n\n    private renderBody(): ReactNode {\n        const { error, message = error && error.message } = this.props;\n\n        return (\n            <>\n                {error && isHtmlError(error) &&\n                    <TranslatedHtml id={error.data.translationKey} />\n                }\n                {message && (\n                    <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                        {message}\n                    </p>\n                )}\n\n                <div className=\"optimizedCheckout-contentSecondary\">{this.renderErrorCode()}</div>\n            </>\n        );\n    }\n\n    private renderFooter(): ReactNode {\n        return (\n            <Button onClick={this.handleOnRequestClose} size={ButtonSize.Small}>\n                <TranslatedString id=\"common.ok_action\" />\n            </Button>\n        );\n    }\n\n    private renderErrorCode(): ReactNode {\n        const { error, shouldShowErrorCode = true } = this.props;\n\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    }\n\n    private handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        const { error, onClose = noop } = this.props;\n\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n}\n","import { CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\n\nexport default function isHtmlError(error: Error): error is CustomError {\n\n    return 'type' in error &&\n        error.type === 'custom' &&\n        'data' in error &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        'shouldBeTranslatedAsHtml' in error.data &&\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\n}\n","import { createContext } from 'react';\n\nimport { ExtensionState } from './ExtensionProvider';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionContextProps {\n    extensionService: ExtensionService;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","import { Cart, Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\n\nexport interface StaticConsignmentItemListProps {\n    consignment: Consignment;\n    cart: Cart;\n}\n\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\n    cart,\n    consignment,\n}) => {\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticConsignment-items\">\n            <strong>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n            </strong>\n\n            <ul>\n                {lineItems.map((item) => (\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(StaticConsignmentItemList);\n","import { forIn, isDate, padStart } from 'lodash';\n\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\n    [id: string]: any;\n}): Array<{ fieldId: string; fieldValue: string }> {\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\n\n    forIn(customFieldsObject, (value, key) => {\n        let fieldValue: string;\n\n        if (isDate(value)) {\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\n            const padDay = padStart(value.getDate().toString(), 2, '0');\n\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\n        } else {\n            fieldValue = value;\n        }\n\n        customFields.push({\n            fieldId: key,\n            fieldValue,\n        });\n    });\n\n    return customFields;\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string, StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label, maxLength }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name}));\n                }\n\n                if ((name === 'address1' || name === 'address2') && maxLength) {\n                    schema[name] = schema[name]\n                        .max(maxLength, translate('max', { label, name, max: maxLength }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { ObjectSchema } from 'yup';\n\nimport {\n    FormFieldValues,\n    getFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_min_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","import React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import { Component, ReactNode } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children: (props: { toggle: any; isOpen: boolean }) => ReactNode;\n}\n\nexport interface ToggleState {\n    isOpen: boolean;\n}\n\nexport default class Toggle extends Component<ToggleProps, ToggleState> {\n    constructor(props: ToggleProps) {\n        super(props);\n\n        this.state = { isOpen: !!props.openByDefault };\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { isOpen } = this.state;\n\n        return children({\n            isOpen,\n            toggle: this.toggle,\n        });\n    }\n\n    private toggle: (event: Event) => void = (event) => {\n        const { isOpen } = this.state;\n\n        event.preventDefault();\n\n        this.setState({ isOpen: !isOpen });\n    };\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","export default function getNestedValue(obj: any, path: string): any{\n    return path.split('.').reduce((acc, key) => acc && acc[key], obj);\n};\n","import { ErrorMessage, useFormikContext } from 'formik';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nimport { getNestedValue } from '../../common/utility';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const formikContext = useFormikContext<{ [key: string]: any }>();\n\n    const hasError = getNestedValue(formikContext?.errors, name) && getNestedValue(formikContext?.touched, name);\n\n    const renderMessage = useCallback(\n        (message: string) => (\n            <label\n                aria-live=\"polite\"\n                className=\"form-inlineMessage\"\n                htmlFor={name}\n                id={errorId}\n                role=\"alert\"\n            >\n                {message}\n            </label>\n        ),\n        [errorId, name],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({isSubmitted}) => (\n                <ul className=\"form-field-errors\" data-test={testId}>\n                    <li className=\"form-field-error\">\n                        {(hasError && isSubmitted) ? <ErrorMessage name={name} render={renderMessage} /> :\n                            <span\n                                aria-hidden=\"true\"\n                                className=\"is-srOnly\"\n                                id={errorId}\n                            />\n                        }\n                    </li>\n                </ul>\n            )}\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import { ExtensionAction, ExtensionActionType, ExtensionState } from './ExtensionProvider';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            if (typeof action.payload === 'boolean') {\n                return { ...state, isShowingLoadingIndicator: action.payload };\n            }\n\n            break;\n\n        case ExtensionActionType.RE_RENDER_SHIPPING_FORM:\n            if (typeof action.payload === 'number') {\n                return { ...state, shippingFormRenderTimestamp: action.payload };\n            }\n\n            break;\n\n        default:\n            return state;\n    }\n\n    return state;\n};\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingFormHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingForm> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingForm,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionMessageType, ExtensionQueryType } from '@bigcommerce/checkout-sdk';\n\nimport { QueryHandler, QueryHandlerProps } from './QueryHandler';\n\nexport function createGetConsignmentHandler({\n    checkoutService,\n    extension,\n}: QueryHandlerProps): QueryHandler<ExtensionQueryType.GetConsignments> {\n    return {\n        queryType: ExtensionQueryType.GetConsignments,\n        handler: async (data) => {\n            if (!data.payload?.useCache) {\n                await checkoutService.loadCheckout();\n            }\n\n            const consignments = checkoutService.getState().data.getCheckout()?.consignments || [];\n\n            checkoutService.postMessageToExtension(extension.id, {\n                type: ExtensionMessageType.GetConsignments,\n                payload: {\n                    consignments,\n                },\n            });\n        },\n    };\n}\n","import {\n    CheckoutService,\n    Extension,\n    ExtensionCommandMap,\n    ExtensionQueryMap,\n    ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ErrorLevelType, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionAction } from './ExtensionProvider';\nimport { CommandHandler, QueryHandler } from './handler';\nimport * as commandHandlerFactories from './handler/commandHandlers';\nimport * as queryHandlerFactories from './handler/queryHandlers';\n\nexport class ExtensionService {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private dispatch: React.Dispatch<ExtensionAction>,\n        private errorLogger: ErrorLogger,\n    ) {}\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    preloadExtensions(): void {\n        const state = this.checkoutService.getState();\n        const extensions = state.data.getExtensions();\n        const cartId = state.data.getCart()?.id;\n        const parentOrigin = state.data.getConfig()?.links.siteLink;\n\n        if (!cartId || !parentOrigin) {\n            return;\n        }\n\n        extensions?.forEach((extension) => {\n            const url = new URL(extension.url);\n\n            url.searchParams.set('extensionId', extension.id);\n            url.searchParams.set('cartId', cartId);\n            url.searchParams.set('parentOrigin', parentOrigin);\n\n            const link = document.createElement('link');\n\n            link.rel = 'preload';\n            link.as = 'document';\n            link.href = url.toString();\n\n            const head = document.head;\n\n            head.appendChild(link);\n        });\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        try {\n            await this.checkoutService.renderExtension(container, region);\n\n            this.registerHandlers(extension);\n        } catch (error: unknown) {\n            if (error instanceof Error) {\n                this.errorLogger.log(\n                    error,\n                    { errorCode: 'checkoutExtension' },\n                    ErrorLevelType.Error,\n                    { extensionId: extension.id, region },\n                );\n            }\n        }\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        this.checkoutService.clearExtensionCache(region);\n\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(commandHandlerFactories).forEach((createCommandHandlerFactory) => {\n            const handlerFactory = createCommandHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n\n        Object.values(queryHandlerFactories).forEach((createQueryHandlerFactory) => {\n            const handlerFactory = createQueryHandlerFactory(handlerProps);\n\n            if (this.isQueryHandler(handlerFactory.queryType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionQuery(\n                        extension.id,\n                        handlerFactory.queryType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n\n    private isQueryHandler<T extends keyof ExtensionQueryMap>(\n        type: T,\n        handler: QueryHandler<any>,\n    ): handler is QueryHandler<T> {\n        return handler.queryType === type;\n    }\n}\n","import { CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useReducer } from 'react';\n\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n    shippingFormRenderTimestamp: undefined | number;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean | number;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n    RE_RENDER_SHIPPING_FORM,\n}\n\nexport interface ExtensionProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n    errorLogger: ErrorLogger;\n}\n\nexport const ExtensionProvider = ({\n    checkoutService,\n    children,\n    errorLogger,\n}: ExtensionProviderProps) => {\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n        shippingFormRenderTimestamp: undefined,\n    });\n    const extensionService = new ExtensionService(checkoutService, dispatch, errorLogger);\n\n    const extensionValues = {\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import { CheckoutService, createCurrencyService, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nexport interface LocaleProviderState {\n    config?: StoreConfig;\n}\n\nclass LocaleProvider extends Component<LocaleProviderProps> {\n    state: Readonly<LocaleProviderState> = {};\n\n    private languageService = getLanguageService();\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne((config?: StoreConfig) => {\n        return {\n            currency: config ? createCurrencyService(config) : undefined,\n            date: config\n                ? {\n                      inputFormat: config.inputDateFormat,\n                  }\n                : undefined,\n            language: this.languageService,\n        };\n    });\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                this.setState({ config: data.getConfig() });\n            },\n            ({ data }) => data.getConfig(),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { config } = this.state;\n\n        return (\n            <LocaleContext.Provider value={this.getContextValue(config)}>\n                {children}\n            </LocaleContext.Provider>\n        );\n    }\n}\n\nexport default LocaleProvider;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(\n            <div className=\"skeleton-container\" key={`checklist-skeleton-item${i}`}>\n                <div className=\"checklist-skeleton-circle\" />\n                <div className=\"checklist-skeleton-rectangle\" />\n            </div>,\n        );\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import { isFunction, noop } from 'lodash';\nimport React, { createContext, FunctionComponent, memo, ReactNode, useMemo, useState } from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import React, { ComponentType, Context, FunctionComponent, memo, useContext, useMemo } from 'react';\nimport { Omit } from 'utility-types';\n\nimport { MatchedProps } from './InjectHoc';\nimport MappableInjectHoc, { MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children?: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","export default function isBuyNowCart(): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n\n    return !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout');\n}\n","import { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import {\n    Address,\n    CheckoutSelectors,\n    Country,\n    ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { localizeAddress } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps , useStyleContext } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n    address: Address;\n    type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n    countries?: Country[];\n}\n\nconst StaticAddress: FunctionComponent<\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\n    > = ({\n        countries,\n        address: addressWithoutLocalization,\n    }) => {\n\n    const { newFontStyle } = useStyleContext();    \n\n    const address = localizeAddress(addressWithoutLocalization, countries);\n    const isValid = !isEmpty(address);\n\n    return !isValid ? null : (\n        <div className=\"vcard checkout-address--static\" data-test=\"static-address\">\n            {(address.firstName || address.lastName) && (\n                <p className={classNames('fn address-entry',\n                    { 'body-regular': newFontStyle })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n            )}\n\n            {(address.phone || address.company) && (\n                <p className={classNames('address-entry',\n                    { 'body-regular': newFontStyle })}>\n                    <span className=\"company-name\">{`${address.company} `}</span>\n                    <span className=\"tel\">{address.phone}</span>\n                </p>\n            )}\n\n            <div className=\"adr\">\n                <p className={classNames('street-address address-entry',\n                    { 'body-regular': newFontStyle })}>\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\n                    {address.address2 && (\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\n                    )}\n                </p>\n\n                <p className={classNames('address-entry',\n                    { 'body-regular': newFontStyle })}>\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n                    {address.localizedProvince && (\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\n                    )}\n                    {address.postalCode && (\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\n                    )}\n                    {address.localizedCountry && (\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport function mapToStaticAddressProps(\n    context: CheckoutContextProps,\n    { type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n    const {\n        checkoutState: {\n            data: { getBillingCountries, getShippingCountries },\n        },\n    } = context;\n\n    return {\n        countries: type === AddressType.Billing\n            ? getBillingCountries()\n            : getShippingCountries(),\n    };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","import { isEmpty, pickBy } from 'lodash';\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\n\nimport InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    newFontStyle?: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, testId, newFontStyle = false, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                testId={testId}\n                type=\"checkbox\"\n            />\n            <Label additionalClassName={`${newFontStyle ? 'body-regular' : ''}`} htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n    newFontStyle?: boolean;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n    newFontStyle = false,\n}) => {\n    const renderField = useCallback(\n        (props: FieldProps<string>) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label && (typeof label === 'function' ? label(name) : label)}\n                {labelContent && !label && (\n                    <Label\n                        additionalClassName={newFontStyle ? 'floating-form-field-label' : ''}\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import {\n  ErrorLevelType,\n  ErrorLogger,\n  ErrorMeta,\n  ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\n// tslint:disable:no-console\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import {\n    BrowserOptions,\n    captureException,\n    Event,\n    init,\n    Integrations,\n    SeverityLevel,\n    StackFrame,\n    withScope,\n} from '@sentry/browser';\nimport { RewriteFrames } from '@sentry/integrations';\nimport { EventHint, Exception } from '@sentry/types';\n\nimport {\n    ErrorLevelType,\n    ErrorLogger,\n    ErrorMeta,\n    ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n\n        init({\n            sampleRate,\n            beforeSend: this.handleBeforeSend,\n            denyUrls: [\n                ...(config.denyUrls || []),\n                'polyfill~checkout',\n                'sentry~checkout',\n            ],\n            integrations: [\n                new Integrations.GlobalHandlers({\n                    onerror: false,\n                    onunhandledrejection: true,\n                }),\n                new RewriteFrames({\n                    iteratee: this.handleRewriteFrame,\n                }),\n            ],\n            ...config,\n        });\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        withScope((scope) => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            if (errorCode) {\n                scope.setTags({ errorCode });\n            }\n\n            scope.setLevel(this.mapToSentryLevel(level));\n\n            if (payload) {\n                scope.setExtras(payload);\n            }\n\n            scope.setFingerprint(['{{ default }}']);\n\n            captureException(error);\n        });\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: Event, hint?: EventHint) => Event | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  ErrorLogger,\n  ErrorLoggerOptions,\n  ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","enum DynamicFormFieldType {\n    telephone = 'tel',\n    dropdown = 'dropdown',\n    number = 'number',\n    password = 'password',\n    checkbox = 'checkbox',\n    multiline = 'multiline',\n    date = 'date',\n    radio = 'radio',\n    text = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBraintreeFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isBraintreeFastlaneMethod;\n","import React, { FunctionComponent, ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n    <ErrorBoundary\n        fallback={\n            <div className=\"lazyContainer-error\">\n                <TranslatedString id=\"common.unstable_network_error\" />\n            </div>\n        }\n        filter={filterError}\n    >\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n    </ErrorBoundary>\n);\n\nexport default LazyContainer;\n"],"names":["findLineItems","cart","consignment","compact","map","lineItemIds","itemId","find","lineItems","physicalItems","item","id","isNil","parentId","PaymentMethodId","memo","description","className","Toggle","openByDefault","length","isOpen","toggle","onClick","preventDefault","TranslatedString","displayAdditionalInformation","method","shippingCostAfterDiscount","newFontStyle","imageUrl","alt","src","transitTime","additionalDescription","undefined","cost","ShopperCurrency","amount","CheckoutContext","createContext","useCheckout","context","useContext","Error","data","testId","translatedString","translate","parsedString","href","navigateToOrderConfirmation","orderId","url","toString","window","location","pathname","replace","Promise","noop","displayNamePrefix","pickProps","value","key","createAnalyticsService","createFn","createArguments","analyticsTracker","checkoutService","children","getStepTracker","useMemo","createStepTracker","getBodlService","createBodlService","subscribe","getBraintreeAnalyticTracker","createBraintreeAnalyticTracker","getPayPalCommerceAnalyticTracker","createPayPalCommerceAnalyticTracker","checkoutBegin","trackCheckoutStarted","trackStepCompleted","currentStep","stepCompleted","trackStepViewed","step","orderPurchased","trackOrderComplete","customerEmailEntry","email","customerSuggestionInit","payload","customerSuggestionExecute","customerPaymentMethodExecuted","showShippingMethods","selectedPaymentMethod","methodName","methodId","clickPayButton","paymentRejected","paymentComplete","exitCheckout","walletButtonClick","AnalyticsContext","A","Provider","isPayPalFastlaneCustomer","customer","ExtensionRegionContainer","extensionRegionToContainerMap","ShippingShippingAddressFormBefore","ShippingShippingAddressFormAfter","ShippingSelectedShippingMethod","SummaryAfter","SummaryLastItemAfter","Extension","region","getExtensions","getConfig","getCheckout","extensions","config","checkout","extensionService","useExtensions","isRegionEnabled","containerId","useEffect","renderExtension","removeListeners","toResolvableComponent","deinitializeCustomer","initializeCustomer","checkoutButtonContainerClass","onUnhandledError","onWalletButtonClick","additionalInitializationOptions","container","beautifyAmazonButton","document","querySelector","amazonButton","shadowRoot","HTMLElement","style","height","setTimeout","props","onComplete","onError","message","object","prototype","name","EmbeddedCheckoutUnsupportedError","Object","setPrototypeOf","hasProto","__proto__","language","split","methods","role","viewBox","width","xmlns","d","fill","normalizeAddress","address","omit","addresses","some","paypalFastlaneAddress","bcAddress","isEqual","isEqualToPayPalFastlaneAddress","hasSelectedShippingOptions","consignments","every","selectedShippingOption","type","isCustomError","error","customError","title","isExperimentEnabled","checkoutSettings","experimentName","Boolean","features","getShippingCostAfterAutomaticDiscount","shippingCostBeforeDiscount","reduce","total","discounts","discountTotal","discount","getTotalAutomaticDiscount","additionalClassName","state","getDerivedStateFromError","componentDidCatch","this","filter","logger","log","render","fallback","Component","hideContentWhenLoading","unmountContentWhenLoading","isLoading","display","fn","event","forwardRef","ref","label","checked","rest","Input","Label","htmlFor","withDate","date","fieldType","onChange","options","placeholder","isFloatingLabelEnabled","inputFormat","handleDateChange","useCallback","dateValue","target","DynamicFormFieldType","dropdown","IconChevronDown","optionValue","radio","checkbox","CheckboxInput","Array","isArray","includes","autoComplete","calendarClassName","dateFormat","maxDate","max","Date","minDate","min","placeholderText","toUpperCase","popperClassName","selected","isDate","multiline","TextArea","TextInput","password","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","form","values","errors","push","remove","handleSelectAll","checkedValues","difference","forEach","val","handleSelectNone","handleInputChange","indexOf","FormFieldContainer","hasError","FormFieldError","errorId","kebabCase","renderField","renderProps","pick","field","secret","fieldLabel","required","maxLength","parentFieldName","inputId","autocomplete","extraClass","fieldInputId","fieldName","isFloatingLabelSupportedFieldType","labelComponent","labelClassName","dynamicFormFieldType","number","telephone","text","renderInput","items","helperLabel","rows","FormField","input","StyleProvider","isErrorWithType","obj","hasOwnProperty","call","FALLBACK_LOCALE","languageService","getLanguageService","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","locale","defaultTranslations","LoadingSkeleton","renderWhileLoading","skeleton","shouldShowChildren","position","left","top","renderItemContent","isMultiShippingSummary","quantity","option","join","renderProductOptionDetails","MOBILE_MAX_WIDTH","SMALL_SCREEN_MAX_WIDTH","captureStackTrace","CustomError","stack","getProviderWithCustomCheckout","PaypalCommerce","PaypalCommerceCreditCards","PayPalCommerceAcceleratedCheckout","Braintree","BraintreeAcceleratedCheckout","hidden","getContextValue","memoizeOne","checkoutState","getState","componentDidMount","unsubscribe","setState","componentWillUnmount","mapAddressToFormValues","fields","addressFormValues","custom","defaultValue","customFields","fieldValue","getValue","shouldSaveAddress","stateOrProvince","stateOrProvinceCode","getDefaultValue","year","month","day","Number","getPaymentProviderCustomer","paymentWithCustomCheckout","providerWithCustomCheckout","isPayPalFastlaneEnabled","paymentProviderCustomer","paypalFastlaneCustomer","customerAuthenticationState","authenticationState","paypalFastlaneAddresses","shouldShowPayPalFastlaneLabel","shouldShowPayPalFastlaneShippingForm","LocaleContext","useLocale","EMPTY_ARRAY","freeze","setDefaultValues","defaultError","defaultTitle","queries","print","mobile","matches","legend","toCSSRule","selector","mergedStyles","assign","styles","pickBy","parse","rules","body","secondaryText","heading","secondaryHeading","link","focus","hover","button","active","disabled","secondaryButton","select","icon","checklist","discountBanner","loadingBanner","orderSummary","embeddedCheckoutStyleParser","_parser","append","createElement","head","appendChild","sheet","CSSStyleSheet","rule","index","insertRule","appendStylesheet","createEmbeddedCheckoutStylesheet","Consumer","isSubmitted","InnerField","component","meta","InnerFieldInput","prevForm","prevField","prevProps","nextForm","nextField","nextProps","componentDidUpdate","getTime","renderInnerField","isMobileView","matchMedia","StyleContext","useStyleContext","styleContext","isSupported","unsupportedMethods","langService","ids","UNSUPPORTED_METHODS","withExtension","createInjectHoc","ExtensionContext","isWaiting","waitInterval","waitToken","clearInterval","loginUrl","LoadingOverlay","TranslatedHtml","PureComponent","CustomerViewType","buttonsCount","_v","i","SUPPORTED_METHODS","getSupportedMethodIds","methodIds","isBrowserSupported","isApplePayWindow","shouldFilterApplePay","resolveCheckoutButton","resolveId","resolveComponent","initialize","isShowingWalletButtonsOnTop","heightOption","buttonHeight","deinitialize","localeContext","initializeOptions","applepay","shippingLabel","subtotalLabel","onPaymentAuthorize","paypalCommerceIds","withCheckout","getCustomer","isPaymentDataRequired","isInitializedCustomer","getInitializeCustomerError","providers","remoteCheckoutProviders","availableMethodIds","isGuest","checkEmbeddedSupport","isPaymentStepActive","isPayPalCommerce","ResolvedCheckoutButton","analyticsContext","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","useState","showSuggestion","setShowSuggestion","bolt","onInit","hasBoltAccount","stopPropagation","provider","providerFlow","Button","IconBolt","Bolt","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","payments","payment","providerId","getBillingAddress","isSigningOut","billingAddress","checkoutLink","logoutLink","isRedirectExperimentEnabled","isSignedIn","shouldRedirectToStorefrontForAuth","signOut","signOutCustomer","onSignOut","onSignOutError","isCartEmpty","reload","size","Tiny","variant","Secondary","hideText","isInitializing","shouldUseResolverButtonComponentsApproach","supportedMethodIds","EMAIL_REGEXP","getEmailValidationSchema","getTranslateCreateCustomerError","memoize","formFields","passwordRequirements","numeric","alpha","minLength","firstName","lastName","concat","getCustomFormFieldsValidationSchema","getAcceptsMarketingEmailsDefault","defaultShouldSubscribe","requiresMarketingConsent","withLanguage","handleSubmit","onSubmit","mapPropsToValues","acceptsMarketingEmails","validationSchema","requirements","getCreateCustomerValidationSchema","getPasswordRequirements","fixNewsletterCheckboxExperimentEnabled","createAccountError","isCreatingAccount","onCancel","createAccountErrorMessage","isRequestError","status","splitMessage","trim","updatedItems","transformFormFieldsData","Form","Fieldset","Alert","DynamicFormField","Primary","labelContent","onSendLoginEmail","isSendingEmail","emailHasBeenRequested","onRequestClose","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","footer","LoadingSpinner","sent_email","TranslatedLink","expiry","minutes","Math","round","Modal","additionalBodyClassName","additionalModalClassName","header","ModalHeader","shouldShowCloseButton","isFastlaneHostWindow","getPaymentMethod","paymentMethod","shouldRenderFastlaneWatermark","initializationData","isFastlanePrivacySettingEnabled","braintreeFastlane","paypalFastlane","FastlaneWatermarkComponent","includeAdditionalInfo","then","result","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","isExpressPrivacyPolicy","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","oneOf","String","setSubscribeStatus","shouldSubscribe","sessionStorage","setItem","getSubscribeStatus","getItem","removeSubscribeStatus","removeItem","getShouldSubscribeValue","SubscribeSessionStorage","onContinueAsGuest","privacyPolicyUrl","baseSchema","canSubscribe","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","shouldShowEmailWatermark","setFieldValue","fieldProps","loginLink","Legend","BasicFormField","tabIndex","withIconContainer","onSignIn","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","Login","changeEmailLink","mapErrorMessage","SuggestedLogin","Info","CancellableEnforcedLogin","EnforcedLogin","rel","mapCreateAccountFromFormValues","mapCustomFormFieldsFromFormValues","setStatus","valSuccess","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","onEmailChange","getStyles","getStripeStyles","gatewayId","getStylesFromElement","properties","parentContainer","getElementById","getAppliedStyles","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","buttonText","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","shouldEncourageSignIn","stripeLinkAuthenticationState","executePaymentMethodCheckoutOrContinue","handleSignIn","credentials","signIn","onSignInError","handleCreateAccount","createAccount","onAccountCreated","showCreateAccount","CreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","Guest","handleChangeEmail","handleShowLogin","StripeUPE","continueWithCheckoutCallback","checkoutPaymentMethodExecuted","onReady","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","checkoutButtonIds","isContinuingAsGuest","isSubscribed","isWalletButtonsOnTop","shouldRenderStripeForm","isLoadingGuestForm","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isEmbedded","isGuestEnabled","isAccountCreationEnabled","withAnalytics","getCustomerAccountFields","getCart","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","shopperConfig","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","links","forgotPasswordLink","guestCheckoutEnabled","signInCustomer","shouldUseStripeLinkByMinimumAmount","Customer","dangerouslySetInnerHTML","__html","sanitize","banners","promotion","banner","hasUnassignedLineItems","addedByPromotion","isUsingMultiShipping","compactView","isShippingDiscountDisplayEnabled","usePayPalFastlaneAddress","showPayPalFastlaneAddressLabel","StaticAddress","AddressType","Shipping","PoweredByPayPalFastlaneLabel","StaticConsignmentItemList","StaticShippingOption","consignmentNumber","getShippingCountries","addressWithoutLocalization","localizeAddress","address1","address2","city","localizedProvince","localizedCountry","postalCode","count","getLineItemsCount","ConsignmentLineItemDetail","isMultiShippingMode","ShippingOptionExpiredError","isActive","isEditable","onEdit","summary","isClosed","containerRef","createRef","contentRef","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","focusStep","timeoutRef","clearTimeout","suggestion","renderContent","isBusy","MobileView","matched","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","delay","getTransitionDelay","getChildInput","getScrollPosition","onExpanded","isNaN","scrollTo","current","getParentContainer","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","parentElement","classList","contains","timeoutDelay","parseFloat","getComputedStyle","transitionDuration","CheckoutStepType","lineItem","isShippingRequired","customItems","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","getStripeLinkAndCheckoutPageIsReloaded","getBillingStepStatus","getBillingAddressFields","countryCode","billingAddressFields","hasAddress","isValidAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","Billing","startsWith","getShippingStepStatus","getShippingAddress","getConsignments","shippingAddress","getShippingAddressFields","shippingAddressFields","hasOptions","hasUnassignedItems","isCustomShippingSelected","getPaymentStepStatus","getOrder","order","Payment","getOrderSubmitStatus","isSubmittingOrder","customerStep","shippingStep","billingStep","paymentStep","orderStatus","steps","defaultActiveStep","isPrevStepComplete","slice","prevStep","lazy","retry","CartSummary","CartSummaryDrawer","isBillingSameAsShipping","isRedirecting","buttonConfigs","handleToggleMultiShipping","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","navigateToStep","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","handleUnhandledError","handleError","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","createAccountUrl","handleBeforeExit","handleWalletButtonClick","unsubscribeFromConsignments","removeEventListener","checkoutId","createEmbeddedMessenger","embeddedStylesheet","loadCheckout","loadPaymentMethodByIds","subscribeToConsignments","all","params","include","loadExtensions","supportedProviders","configs","getPaymentMethods","preloadExtensions","siteLink","errorFlashMessages","getFlashMessages","messenger","parentOrigin","receiveStyles","postFrameLoaded","contentId","postLoaded","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","defaultNewsletterSignupOption","errorModal","ErrorModal","onClose","isPending","promotions","extensionState","isShowingLoadingIndicator","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","hasCartChanged","LazyContainer","loadingSkeleton","AddressFormSkeleton","cartHasChanged","navigateNextStep","onToggleMultiShipping","StaticBillingAddress","errorLogger","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","statuses","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","Checkout","createCheckoutService","getLocale","shouldWarnMutation","createErrorLogger","sentry","sentryConfig","errorTypes","publicPath","sampleRate","sentrySampleRate","ErrorBoundary","LocaleProvider","CheckoutProvider","AnalyticsProvider","ExtensionProvider","createEmbeddedCheckoutMessenger","requestSender","createRequestSender","create","put","response","renderPasswordInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","confirmPassword","onSignUp","isSigningUp","customerCanBeCreated","Success","AccountCreationRequirementsError","AccountCreationFailedError","isDefaultOrderPayment","isGiftCertificatePayment","isStoreCreditPayment","gatewayPayment","detail","instructions","mapFromPayments","code","remaining","used","balance","purchaseDate","getStoreCreditAmount","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","fees","shippingAmount","shipping","getOrderShippingCostAfterAutomaticDiscount","subtotalAmount","shippingAmountBeforeDiscount","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","MandateTextComponent","mandateText","keys","entries","PaymentsWithMandates","paymentsWithMandates","mandate","isPaymentWithMandate","OrderStatusMessage","orderNumber","supportEmail","supportPhoneNumber","hasDigitalItems","isDownloadable","handleClick","throttle","OrderSummary","OrderSummaryDrawer","handleErrorModalClose","handleSignUp","hasSignedUp","catch","loadOrder","isLoadingOrder","paymentInstructions","orderEmail","storePhoneNumber","renderGuestSignUp","shouldShowPasswordForm","customerId","action","renderOrderSummary","renderErrorModal","currency","shopperCurrency","headerLink","storeCurrency","orderAmount","shouldShowErrorCode","OrderConfirmation","accountService","newsletter","stripeLinkMinAmount","cartAmount","isStripeLinkMinAmount","BigCommercePaymentsCreditCards","BigCommercePaymentsFastLane","countries","country","states","isEmpty","subdivisions","getPasswordRequirementsFromConfig","minlength","allSlashes","RegExp","resolveIds","AlertType","describedBy","useId","Warning","IconError","renderDefaultIcon","parseAnchor","div","innerHTML","anchor","anchorSiblings","outerHTML","schema","maxValue","minValue","nullable","transform","originalValue","requiredErrorMessage","toCustomerCurrency","path","currentScript","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","renderOrderConfirmation","OrderConfirmationApp","element","declaration","propertyName","getPropertyValue","isValidSync","ADD_ATTR","IconSize","OriginalComponent","Small","Large","Medium","showPayPalFastlaneLabel","appearFocused","isResolvableComponent","query","components","results","resolverId","default","sort","a","b","ButtonVariant","ButtonSize","getClassName","isFullWidth","Action","extensionContext","aria","labelledby","handleOnRequestClose","nativeEvent","renderFooter","renderHeader","renderBody","shouldBeTranslatedAsHtml","isHtmlError","translationKey","renderErrorCode","headers","errorCode","computeErrorCode","customFieldsObject","forIn","padMonth","padStart","getMonth","padDay","getDate","getFullYear","fieldId","WHITELIST_REGEXP","getTranslateAddressError","requiredFieldErrorTranslationIds","company","phone","getFormFieldsValidationSchema","useRef","focusOnError","erroredFormField","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","setSubmitted","noValidate","onSubmitCapture","getNestedValue","acc","formikContext","touched","renderMessage","FormContext","extensionReducer","ExtensionActionType","SHOW_LOADING_INDICATOR","RE_RENDER_SHIPPING_FORM","shippingFormRenderTimestamp","createReloadCheckoutHandler","commandType","ExtensionCommandType","ReloadCheckout","handler","createSetIframeStyleHandler","extension","SetIframeStyle","extensionContainer","iframe","createShowLoadingIndicatorHandler","dispatch","ShowLoadingIndicator","show","createReRenderShippingFormHandler","ReRenderShippingForm","now","createGetConsignmentHandler","queryType","ExtensionQueryType","GetConsignments","useCache","postMessageToExtension","handlers","cartId","URL","searchParams","set","as","getExtensionByRegion","registerHandlers","extensionId","clearExtensionCache","removers","remover","handlerProps","createCommandHandlerFactory","handlerFactory","isCommandHandler","handleExtensionCommand","createQueryHandlerFactory","isQueryHandler","handleExtensionQuery","useReducer","extensionValues","ExtensionService","createCurrencyService","inputDateFormat","content","FormProvider","initialIsSubmitted","contextValue","isFunction","ContextComponent","mapToPropsOrFactory","InnerDecoratedComponent","DecoratedComponent","mapToProps","isMapToPropsFactory","mappedProps","mergedProps","displayName","closeButtonLabel","additionalHeaderClassName","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","isBuyNowCart","lastPathName","pop","ErrorLevelType","getBillingCountries","DEFAULT_OPTIONS","interval","resolve","injectedProps","customConsole","console","tags","level","info","warn","SeverityLevelEnum","FILENAME_PREFIX","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","consoleLogger","beforeSend","denyUrls","integrations","GlobalHandlers","onerror","onunhandledrejection","RewriteFrames","iteratee","scope","setTags","setLevel","mapToSentryLevel","setExtras","setFingerprint","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","serviceConfig","filterError","Suspense"],"sourceRoot":""}