{"version":3,"file":"933-eb634716.js","mappings":"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","sources":["webpack://checkout/./packages/ui/src/modal/ConfirmationModal.tsx","webpack://checkout/./packages/core/src/app/cart/mapToCartSummaryProps.ts","webpack://checkout/./packages/ui/src/icon/IconClose.tsx","webpack://checkout/./packages/ui/src/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/cart/EditLink.tsx","webpack://checkout/./packages/core/src/app/coupon/AppliedCoupon.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/AppliedGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconRemove.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemables.tsx","webpack://checkout/./packages/core/src/app/cart/Redeemable.tsx","webpack://checkout/./packages/core/src/app/cart/withRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/cart/mapToRedeemableProps.ts","webpack://checkout/./packages/ui/src/modal/ModalHeader.tsx"],"sourcesContent":["import { noop } from 'lodash';\nimport React, { ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize, ButtonVariant } from '../button';\n\nimport Modal from './Modal';\nimport ModalHeader from './ModalHeader';\n\ninterface ConfirmationModalProps {\n    headerId: string;\n    messageId: string;\n    isModalOpen: boolean;\n    onRequestClose?: () => void;\n    action: () => void;\n    actionButtonLabel?: ReactNode;\n    shouldShowCloseButton?: boolean;\n}\n\nconst ConfirmationModal = ({\n    headerId,\n    messageId,\n    isModalOpen,\n    action,\n    actionButtonLabel,\n    onRequestClose = noop,\n    shouldShowCloseButton = true,\n}: ConfirmationModalProps) => {\n    return (\n        <Modal\n            additionalModalClassName=\"modal--confirm\"\n            footer={\n                <Button onClick={action} size={ButtonSize.Small} variant={ButtonVariant.Primary}>\n                    {actionButtonLabel ?? <TranslatedString id=\"common.confirm_action\" />}\n                </Button>\n            }\n            header={\n                <ModalHeader>\n                    <span aria-live=\"assertive\" role=\"alert\">\n                        <TranslatedString id={headerId} />\n                    </span>\n                </ModalHeader>\n            }\n            isOpen={isModalOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={shouldShowCloseButton}\n        >\n            <p aria-live=\"assertive\" role=\"alert\">\n                <TranslatedString id={messageId} />\n            </p>\n        </Modal>\n    );\n};\n\nexport default ConfirmationModal;\n","import { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isBuyNowCart } from '@bigcommerce/checkout/utility';\n\nimport { isExperimentEnabled } from '../common/utility';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport mapToRedeemableProps from './mapToRedeemableProps';\n\nexport default function mapToCartSummaryProps(\n    context: CheckoutContextProps,\n): WithCheckoutCartSummaryProps | null {\n    const {\n        checkoutState: {\n            data: { getConfig, getCustomer, getCheckout },\n        },\n    } = context;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n    const customer = getCustomer();\n    const redeemableProps = mapToRedeemableProps(context);\n\n    if (!checkout || !config || !redeemableProps || !customer) {\n        return null;\n    }\n\n    const { isStoreCreditApplied, grandTotal } = checkout;\n    const { storeCredit } = customer;\n\n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        config.checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return {\n        isBuyNowCart: isBuyNowCart(checkout.cart),\n        isShippingDiscountDisplayEnabled,\n        checkout,\n        shopperCurrency: config.shopperCurrency,\n        cartUrl: config.links.cartLink,\n        storeCurrency: config.currency,\n        storeCreditAmount: isStoreCreditApplied ? Math.min(grandTotal, storeCredit) : undefined,\n        ...redeemableProps,\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children?: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {Boolean(closeButtonLabel) && (\n                            <span className=\"is-srOnly\">{closeButtonLabel}</span>\n                        )}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, useState } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { ConfirmationModal, useThemeContext } from '@bigcommerce/checkout/ui';\n\nexport interface EditLinkProps {\n    className?: string;\n    isMultiShippingMode: boolean;\n    url: string;\n}\n\nconst EditLink: FunctionComponent<EditLinkProps> = ({ className, url, isMultiShippingMode }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const { themeV2 } = useThemeContext();\n\n    const gotoCartPage = () => {\n        window.location.assign(url);\n    };\n\n    if (isMultiShippingMode) {\n        return (\n            <>\n                <ConfirmationModal\n                    action={gotoCartPage}\n                    headerId=\"cart.edit_cart_action\"\n                    isModalOpen={isModalOpen}\n                    messageId=\"cart.edit_multi_shipping_cart_message\"\n                    onRequestClose={() => setIsModalOpen(false)}\n                />\n                <a\n                    className={classNames((className || 'cart-header-link'),\n                        { 'body-cta': themeV2 })}\n                    data-test=\"cart-edit-link\"\n                    href=\"#\"\n                    id=\"cart-edit-link\"\n                    onClick={preventDefault(() => setIsModalOpen(true))}\n                >\n                    <TranslatedString id=\"cart.edit_cart_action\" />\n                </a>\n            </>\n        );\n    }\n\n    return (\n        <a\n            className={classNames((className || 'cart-header-link'),\n                { 'body-cta': themeV2 })}\n            data-test=\"cart-edit-link\"\n            href={url}\n            id=\"cart-edit-link\"\n            target=\"_top\"\n        >\n            <TranslatedString id=\"cart.edit_cart_action\" />\n        </a>\n    );\n};\n\nexport default memo(EditLink);\n","import { Coupon } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface AppliedCouponProps {\n    coupon: Coupon;\n}\n\nconst AppliedCoupon: FunctionComponent<AppliedCouponProps> = ({ coupon }) => (\n    <div className=\"redeemable-column redeemable-info\" data-test=\"redeemable-item--coupon\">\n        <span className=\"redeemable-info-header\">\n            <span className=\"redeemable-info-header--highlight\" data-test=\"coupon-amount\">\n                {coupon.displayName}\n            </span>{' '}\n            <TranslatedString id=\"redeemable.coupon_text\" />\n        </span>\n\n        <span className=\"redeemable-info-subHeader\" data-test=\"coupon-code\">\n            {coupon.code}\n        </span>\n    </div>\n);\n\nexport default memo(AppliedCoupon);\n","import { GiftCertificate } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface AppliedGiftCertificateProps {\n    giftCertificate: GiftCertificate;\n}\n\nconst AppliedGiftCertificate: FunctionComponent<AppliedGiftCertificateProps> = ({\n    giftCertificate,\n}) => (\n    <div className=\"redeemable-column redeemable-info\" data-test=\"redeemable-item--giftCertificate\">\n        <span className=\"redeemable-info-header\">\n            <span className=\"redeemable-info-header--highlight\" data-test=\"giftCertificate-amount\">\n                <ShopperCurrency amount={giftCertificate.used} />\n            </span>{' '}\n            <TranslatedString id=\"redeemable.gift_certificate_text\" />\n        </span>\n\n        <span className=\"redeemable-info-subHeader\">\n            {giftCertificate.remaining > 0 && (\n                <span className=\"redeemable-info-subHeader--remaining\">\n                    <TranslatedString id=\"redeemable.gift_certificate_remaining_text\" />{' '}\n                    <span data-test=\"giftCertificate-remaining\">\n                        <ShopperCurrency amount={giftCertificate.remaining} />\n                    </span>\n                </span>\n            )}\n\n            <span data-test=\"giftCertificate-code\">{giftCertificate.code}</span>\n        </span>\n    </div>\n);\n\nexport default memo(AppliedGiftCertificate);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconRemove: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconRemove);\n","import classNames from 'classnames';\nimport React, {FunctionComponent, ReactNode} from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconRemove } from '../ui/icon';\n\nimport './AppliedRedeemable.scss';\n\nexport interface AppliedRedeemableProps {\n    children: ReactNode;\n    isRemoving: boolean;\n    onRemove(): void;\n}\n\nconst AppliedRedeemable: FunctionComponent<AppliedRedeemableProps> = ({\n    children,\n    isRemoving,\n    onRemove,\n}) => (\n    <div className=\"form-checklist-header\">\n        <div className=\"form-checklist-checkbox optimizedCheckout-form-checklist-checkbox\">\n            <span className=\"is-srOnly\">\n                <TranslatedString id=\"redeemable.applied_text\" />\n            </span>\n        </div>\n\n        <div className=\"form-label form-label-redeemable\">\n            <div className=\"redeemable\">\n                {children}\n                <div className=\"redeemable-column redeemable-actions\">\n                    <button\n                        className={classNames('redeemable-remove', { 'is-loading': isRemoving })}\n                        data-test=\"redeemable-remove\"\n                        disabled={isRemoving}\n                        onClick={onRemove}\n                        type=\"button\"\n                    >\n                        <IconRemove />\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nexport default AppliedRedeemable;\n","import { Coupon, GiftCertificate } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { AppliedCoupon } from '../coupon';\nimport { AppliedGiftCertificate } from '../giftCertificate';\n\nimport AppliedRedeemable from './AppliedRedeemable';\n\ninterface AppliedCouponProps {\n    coupon: Coupon;\n    isRemoving?: boolean;\n    onRemoved(code: string): void;\n}\n\nconst AppliedCouponChecklistItem: FunctionComponent<AppliedCouponProps> = ({\n    coupon,\n    onRemoved,\n    isRemoving = false,\n}) => {\n    const handleRemove = useCallback(() => {\n        onRemoved(coupon.code);\n    }, [coupon, onRemoved]);\n\n    return (\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\n            <AppliedRedeemable isRemoving={isRemoving} onRemove={handleRemove}>\n                <AppliedCoupon coupon={coupon} />\n            </AppliedRedeemable>\n        </li>\n    );\n};\n\ninterface AppliedGiftCertificateProps {\n    giftCertificate: GiftCertificate;\n    isRemoving?: boolean;\n    onRemoved(code: string): void;\n}\n\nconst AppliedGiftCertificateChecklistItem: FunctionComponent<AppliedGiftCertificateProps> = ({\n    giftCertificate,\n    onRemoved,\n    isRemoving = false,\n}) => {\n    const handleRemove = useCallback(() => {\n        onRemoved(giftCertificate.code);\n    }, [giftCertificate, onRemoved]);\n\n    return (\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\n            <AppliedRedeemable isRemoving={isRemoving} onRemove={handleRemove}>\n                <AppliedGiftCertificate giftCertificate={giftCertificate} />\n            </AppliedRedeemable>\n        </li>\n    );\n};\n\nexport interface AppliedRedeemablesProps {\n    coupons?: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    isRemovingGiftCertificate?: boolean;\n    isRemovingCoupon?: boolean;\n    onRemovedCoupon(code: string): void;\n    onRemovedGiftCertificate(code: string): void;\n}\n\nconst AppliedRedeemables: FunctionComponent<AppliedRedeemablesProps> = ({\n    coupons = [],\n    giftCertificates = [],\n    isRemovingCoupon = false,\n    isRemovingGiftCertificate = false,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n}) => {\n    if (!coupons.length && !giftCertificates.length) {\n        return null;\n    }\n\n    return (\n        <ul\n            className=\"form-checklist optimizedCheckout-form-checklist\"\n            data-test=\"redeemables-list\"\n        >\n            {coupons.map((coupon) => (\n                <AppliedCouponChecklistItem\n                    coupon={coupon}\n                    isRemoving={isRemovingCoupon}\n                    key={coupon.code}\n                    onRemoved={onRemovedCoupon}\n                />\n            ))}\n\n            {giftCertificates.map((giftCertificate) => (\n                <AppliedGiftCertificateChecklistItem\n                    giftCertificate={giftCertificate}\n                    isRemoving={isRemovingGiftCertificate}\n                    key={giftCertificate.code}\n                    onRemoved={onRemovedGiftCertificate}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default memo(AppliedRedeemables);\n","import { CheckoutSelectors, RequestError } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport classNames from 'classnames';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, {FunctionComponent, KeyboardEvent, memo, ReactNode, useCallback} from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { FormContextType, FormProvider, useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { FormField, Label, TextInput } from '../ui/form';\nimport { Toggle } from '../ui/toggle';\n\nimport AppliedRedeemables, { AppliedRedeemablesProps } from './AppliedRedeemables';\n\nexport interface RedeemableFormValues {\n    redeemableCode: string;\n}\n\nexport type ReedemableChildrenProps = Pick<\n    RedeemableProps,\n    | 'onRemovedCoupon'\n    | 'onRemovedGiftCertificate'\n    | 'isRemovingGiftCertificate'\n    | 'isRemovingCoupon'\n    | 'coupons'\n    | 'giftCertificates'\n>;\n\nexport type RedeemableProps = {\n    appliedRedeemableError?: RequestError;\n    isApplyingRedeemable?: boolean;\n    isRemovingRedeemable?: boolean;\n    removedRedeemableError?: RequestError;\n    showAppliedRedeemables?: boolean;\n    shouldCollapseCouponCode?: boolean;\n    applyCoupon(code: string): Promise<CheckoutSelectors>;\n    applyGiftCertificate(code: string): Promise<CheckoutSelectors>;\n    clearError(error: Error): void;\n} & AppliedRedeemablesProps;\n\nconst Redeemable: FunctionComponent<\n    RedeemableProps & WithLanguageProps & FormikProps<RedeemableFormValues>\n    > = ({ shouldCollapseCouponCode, showAppliedRedeemables, ...formProps }) => {\n        const { themeV2 } = useThemeContext();\n\n        return (\n            <Toggle openByDefault={!shouldCollapseCouponCode}>\n                {({ toggle, isOpen }): ReactNode => (\n                    <>\n                        {shouldCollapseCouponCode && (\n                            <a\n                                aria-controls=\"redeemable-collapsable\"\n                                aria-expanded={isOpen}\n                                className={classNames('redeemable-label', { 'body-cta': themeV2 })}\n                                data-test=\"redeemable-label\"\n                                href=\"#\"\n                                onClick={preventDefault(toggle)}\n                            >\n                                <TranslatedString id=\"redeemable.toggle_action\" />\n                            </a>\n                        )}\n                        {!shouldCollapseCouponCode && (\n                            <div className={classNames('redeemable-label', { 'body-cta': themeV2 })}>\n                                <TranslatedString id=\"redeemable.toggle_action\" />\n                            </div>\n                        )}\n                        {(isOpen || !shouldCollapseCouponCode) && (\n                            <div data-test=\"redeemable-collapsable\" id=\"redeemable-collapsable\">\n                                <RedeemableForm {...formProps} />\n                                {showAppliedRedeemables && <AppliedRedeemables {...formProps} />}\n                            </div>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        );\n    }\n\nconst RedeemableForm: FunctionComponent<\n    Partial<RedeemableProps> & FormikProps<RedeemableFormValues> & WithLanguageProps\n> = ({ appliedRedeemableError, isApplyingRedeemable, clearError = noop, submitForm, language }) => {\n    const {\n        checkoutState: {\n            statuses: { isSubmittingOrder }\n        }\n    } = useCheckout();\n    const { themeV2 } = useThemeContext();\n\n    const handleSubmitForm = (setSubmitted: FormContextType['setSubmitted']) => {\n        if (isSubmittingOrder()) {\n            return;\n        }\n\n        setSubmitted(true);\n        submitForm();\n    }\n\n    const handleKeyDown = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => (event: KeyboardEvent) => {\n            if (appliedRedeemableError) {\n                clearError(appliedRedeemableError);\n            }\n\n            // note: to prevent submitting main form, we manually intercept\n            // the enter key event and submit the \"subform\".\n            if (event.keyCode === 13 || event.key === 'Enter') {\n                handleSubmitForm(setSubmitted);\n                event.preventDefault();\n            }\n        }),\n        [appliedRedeemableError, clearError, submitForm],\n    );\n\n    const handleSubmit = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => () => {\n            handleSubmitForm(setSubmitted);\n        }),\n        [],\n    );\n\n    const renderLabel = useCallback(\n        (name: string) => (\n            <Label hidden htmlFor={name}>\n                <TranslatedString id=\"redeemable.code_label\" />\n            </Label>\n        ),\n        [],\n    );\n\n    const renderErrorMessage = useCallback((errorCode: string, errorMessage?: string) => {\n        switch (errorCode) {\n            case 'min_purchase':\n                return <TranslatedString id=\"redeemable.coupon_min_order_total\" />;\n\n            case 'not_applicable':\n                return <TranslatedString id=\"redeemable.coupon_location_error\" />;\n\n            default:\n                return errorMessage || <TranslatedString id=\"redeemable.code_invalid_error\" />;\n        }\n    }, []);\n\n    const renderInput = useCallback(\n        (setSubmitted: FormContextType['setSubmitted']) =>\n            ({ field }: FieldProps) =>\n                (\n                    <>\n                        {appliedRedeemableError &&\n                            appliedRedeemableError.errors &&\n                            appliedRedeemableError.errors[0] && (\n                                <Alert type={AlertType.Error}>\n                                    {renderErrorMessage(appliedRedeemableError.errors[0].code, appliedRedeemableError.errors[0].message)}\n                                </Alert>\n                            )}\n\n                        <div className=\"form-prefixPostfix\">\n                            <TextInput\n                                {...field}\n                                aria-label={language.translate('redeemable.code_label')}\n                                className=\"form-input optimizedCheckout-form-input\"\n                                onKeyDown={handleKeyDown(setSubmitted)}\n                                testId=\"redeemableEntry-input\"\n                                themeV2={themeV2}\n                            />\n\n                            <Button\n                                className={classNames('form-prefixPostfix-button--postfix', {\n                                    'body-bold': themeV2,\n                                })}\n                                disabled={isSubmittingOrder()}\n                                id=\"applyRedeemableButton\"\n                                isLoading={isApplyingRedeemable}\n                                onClick={handleSubmit(setSubmitted)}\n                                testId=\"redeemableEntry-submit\"\n                                variant={ButtonVariant.Secondary}\n                            >\n                                <TranslatedString id=\"redeemable.apply_action\" />\n                            </Button>\n                        </div>\n                    </>\n                ),\n        [\n            appliedRedeemableError,\n            handleKeyDown,\n            handleSubmit,\n            isApplyingRedeemable,\n            language,\n            isSubmittingOrder,\n            renderErrorMessage,\n        ],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => (\n            <FormField\n                input={renderInput(setSubmitted)}\n                label={renderLabel}\n                name=\"redeemableCode\"\n            />\n        )),\n        [renderLabel, renderInput],\n    );\n\n    return (\n        <fieldset className=\"form-fieldset redeemable-entry\">\n            <FormProvider>{renderContent}</FormProvider>\n        </fieldset>\n    );\n};\n\nexport default withLanguage(\n    withFormik<RedeemableProps & WithLanguageProps, RedeemableFormValues>({\n        mapPropsToValues() {\n            return {\n                redeemableCode: '',\n            };\n        },\n\n        async handleSubmit(\n            { redeemableCode },\n            { props: { applyCoupon, applyGiftCertificate, clearError } },\n        ) {\n            const code = redeemableCode.trim();\n\n            try {\n                await applyGiftCertificate(code);\n            } catch (error) {\n                if (error instanceof Error) {\n                    clearError(error);\n                }\n\n                applyCoupon(code);\n            }\n        },\n\n        validationSchema({ language }: RedeemableProps & WithLanguageProps) {\n            return object({\n                redeemableCode: string().required(\n                    language.translate('redeemable.code_required_error'),\n                ),\n            });\n        },\n    })(memo(Redeemable)),\n);\n","import React, { ComponentType, FunctionComponent } from 'react';\n\nimport { OrderSummaryProps, OrderSummarySubtotalsProps } from '../order';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport Redeemable from './Redeemable';\n\nexport default function withRedeemable(\n    OriginalComponent: ComponentType<OrderSummaryProps & OrderSummarySubtotalsProps>,\n): FunctionComponent<WithCheckoutCartSummaryProps & { headerLink?: any }> {\n    return (props) => {\n        const {\n            checkout,\n            storeCurrency,\n            shopperCurrency,\n            headerLink,\n            onRemovedCoupon,\n            onRemovedGiftCertificate,\n            storeCreditAmount,\n            isShippingDiscountDisplayEnabled,\n            ...redeemableProps\n        } = props;\n\n        return (\n            <OriginalComponent\n                {...mapToOrderSummarySubtotalsProps(checkout, isShippingDiscountDisplayEnabled)}\n                additionalLineItems={\n                    <Redeemable\n                        {...{\n                            ...redeemableProps,\n                            onRemovedCoupon,\n                            onRemovedGiftCertificate,\n                        }}\n                    />\n                }\n                headerLink={headerLink}\n                lineItems={checkout.cart.lineItems}\n                onRemovedCoupon={onRemovedCoupon}\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\n                shopperCurrency={shopperCurrency}\n                storeCreditAmount={storeCreditAmount}\n                storeCurrency={storeCurrency}\n                total={checkout.outstandingBalance}\n            />\n        );\n    };\n}\n","import { Checkout } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummarySubtotalsProps } from '../order';\nimport { getShippingCostAfterAutomaticDiscount, hasSelectedShippingOptions } from '../shipping';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    subtotal,\n    cart: { discountAmount, isTaxIncluded },\n    giftCertificates,\n    consignments,\n    handlingCostTotal,\n    shippingCostBeforeDiscount,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n}: Checkout,\nisShippingDiscountDisplayEnabled: boolean,\n): OrderSummarySubtotalsProps {\n    const allConsignmentsHaveSelectedShippingOption = hasSelectedShippingOptions(consignments);\n\n    const shippingAmount = allConsignmentsHaveSelectedShippingOption\n        ? isShippingDiscountDisplayEnabled\n            ? getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments)\n            : shippingCostBeforeDiscount\n        : undefined;\n\n    return {\n        subtotalAmount: subtotal,\n        discountAmount,\n        giftCertificates,\n        giftWrappingAmount: giftWrappingCostTotal,\n        shippingAmount,\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled && allConsignmentsHaveSelectedShippingOption\n            ? shippingCostBeforeDiscount\n            : undefined,\n        handlingAmount: handlingCostTotal,\n        coupons,\n        taxes,\n        fees,\n        isTaxIncluded,\n    };\n}\n","import { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY } from '../common/utility';\n\nimport { RedeemableProps } from './Redeemable';\n\nexport default function mapToRedeemableProps(\n    context: CheckoutContextProps,\n): RedeemableProps | null {\n    const {\n        checkoutService,\n        checkoutState: {\n            data: { getConfig, getCoupons, getGiftCertificates },\n            statuses: {\n                isApplyingCoupon,\n                isApplyingGiftCertificate,\n                isRemovingCoupon,\n                isRemovingGiftCertificate,\n            },\n            errors: {\n                getApplyCouponError,\n                getApplyGiftCertificateError,\n                getRemoveCouponError,\n                getRemoveGiftCertificateError,\n            },\n        },\n    } = context;\n\n    const config = getConfig();\n\n    if (!config) {\n        return null;\n    }\n\n    return {\n        appliedRedeemableError: getApplyCouponError() || getApplyGiftCertificateError(),\n        applyCoupon: checkoutService.applyCoupon,\n        applyGiftCertificate: checkoutService.applyGiftCertificate,\n        clearError: checkoutService.clearError,\n        coupons: getCoupons() || EMPTY_ARRAY,\n        giftCertificates: getGiftCertificates() || EMPTY_ARRAY,\n        isApplyingRedeemable: isApplyingCoupon() || isApplyingGiftCertificate(),\n        isRemovingCoupon: isRemovingCoupon(),\n        isRemovingGiftCertificate: isRemovingGiftCertificate(),\n        onRemovedCoupon: checkoutService.removeCoupon,\n        onRemovedGiftCertificate: checkoutService.removeGiftCertificate,\n        removedRedeemableError: getRemoveCouponError() || getRemoveGiftCertificateError(),\n        shouldCollapseCouponCode: config.checkoutSettings.isCouponCodeCollapsed,\n    };\n}\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\ninterface ModalHeaderProps {\n    children: React.ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n"],"names":["headerId","messageId","isModalOpen","action","actionButtonLabel","onRequestClose","noop","shouldShowCloseButton","additionalModalClassName","footer","onClick","size","Small","variant","Primary","id","header","role","isOpen","mapToCartSummaryProps","context","getConfig","getCustomer","checkout","getCheckout","config","customer","redeemableProps","isStoreCreditApplied","grandTotal","storeCredit","isShippingDiscountDisplayEnabled","checkoutSettings","isBuyNowCart","cart","shopperCurrency","cartUrl","links","cartLink","storeCurrency","currency","storeCreditAmount","Math","min","undefined","height","viewBox","width","xmlns","d","children","closeButtonLabel","additionalHeaderClassName","additionalBodyClassName","rest","handleClose","useCallback","event","ariaHideApp","bodyOpenClassName","className","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","href","preventDefault","Boolean","memo","url","isMultiShippingMode","useState","setIsModalOpen","themeV2","window","location","assign","target","coupon","displayName","TranslatedString","code","giftCertificate","ShopperCurrency","amount","used","remaining","isRemoving","onRemove","disabled","type","AppliedCouponChecklistItem","onRemoved","handleRemove","AppliedGiftCertificateChecklistItem","coupons","giftCertificates","isRemovingCoupon","isRemovingGiftCertificate","onRemovedCoupon","onRemovedGiftCertificate","length","map","key","RedeemableForm","appliedRedeemableError","isApplyingRedeemable","clearError","submitForm","language","isSubmittingOrder","handleSubmitForm","setSubmitted","handleKeyDown","memoizeOne","keyCode","handleSubmit","renderLabel","name","Label","hidden","htmlFor","renderErrorMessage","errorCode","errorMessage","renderInput","field","errors","Alert","A","Error","message","TextInput","translate","onKeyDown","testId","Button","isLoading","Secondary","renderContent","FormField","input","label","withLanguage","mapPropsToValues","redeemableCode","props","applyCoupon","applyGiftCertificate","trim","validationSchema","required","shouldCollapseCouponCode","showAppliedRedeemables","formProps","Toggle","openByDefault","toggle","withRedeemable","OriginalComponent","headerLink","subtotal","discountAmount","isTaxIncluded","consignments","handlingCostTotal","shippingCostBeforeDiscount","giftWrappingCostTotal","taxes","fees","allConsignmentsHaveSelectedShippingOption","hasSelectedShippingOptions","subtotalAmount","giftWrappingAmount","shippingAmount","getShippingCostAfterAutomaticDiscount","shippingAmountBeforeDiscount","handlingAmount","mapToOrderSummarySubtotalsProps","additionalLineItems","Redeemable","lineItems","total","outstandingBalance","mapToRedeemableProps","checkoutService","data","getCoupons","getGiftCertificates","statuses","isApplyingCoupon","isApplyingGiftCertificate","getApplyCouponError","getApplyGiftCertificateError","getRemoveCouponError","getRemoveGiftCertificateError","removeCoupon","removeGiftCertificate","removedRedeemableError","isCouponCodeCollapsed","additionalClassName"],"sourceRoot":""}