{"version":3,"file":"checkout-c840e5ba.js","mappings":"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","sources":["webpack://checkout/./packages/ui/src/form/Label/Label.tsx","webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/utility/src/navigateToOrderConfirmation.ts","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation/ContinueButton.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/getOrderShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation/OrderSummaryContainer.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation/OrderConfirmationPage.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/ui/src/form/TextInput/TextInput.tsx","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/ui/src/form/Input/Input.tsx","webpack://checkout/./packages/core/src/app/payment/getProviderWithCustomCheckout.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionAdditionalDescription.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/StaticShippingOption.tsx","webpack://checkout/./packages/utility/src/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/currency/ShopperCurrency.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/core/src/app/shipping/findLineItems.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/ui/src/icon/IconChevronDown.tsx","webpack://checkout/./packages/ui/src/form/TextArea/TextArea.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/DynamicInput.tsx","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/locale/src/withCurrency.tsx","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/ui/src/form/RadioInput/RadioInput.tsx","webpack://checkout/./packages/core/src/app/shipping/getShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CheckoutPageSkeleton.tsx","webpack://checkout/./packages/ui/src/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/generated/checkoutButtons/index.ts","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-fastlane-window.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/PayPalFastlaneWatermark.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/SubscribeSessionStorage.ts","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/RedirectToStorefrontLogin.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/StaticMultiConsignment.tsx","webpack://checkout/./packages/core/src/app/shipping/ShippingSummary.tsx","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/shipping/itemsRequireShipping.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutPage.tsx","webpack://checkout/./packages/core/src/app/checkout/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/hooks/useLoadCheckout.ts","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutIntermediate.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/ui/src/form/FormFieldError/FormFieldError.tsx","webpack://checkout/./packages/ui/src/form/FormField/FormField.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/ui/src/form/DynamicFormField/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalFastlane.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/PoweredByPayPalFastlaneLabel.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/usePayPalFastlaneAddress.ts","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/MultiCheckboxControl.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/CheckboxGroupFormField.tsx","webpack://checkout/./packages/ui/src/form/DynamicFormField/DynamicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-address.ts","webpack://checkout/./packages/core/src/app/common/utility/getNestedValue.ts","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveLazyComponent.ts","webpack://checkout/./packages/core/src/app/shipping/StaticConsignmentItemList.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingFormHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingStepHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/queryHandlers/createGetConsignmentHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-customer.ts","webpack://checkout/./packages/ui/src/loading/LazyContainer.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/checkout-extension/src/useExtensions.tsx","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-bigcommerce-payments-fastlane-method.ts","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/ui/src/form/CheckboxInput/CheckboxInput.tsx","webpack://checkout/./packages/ui/src/button/Button.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/OrderConfirmationPageSkeleton.tsx","webpack://checkout/./packages/ui/src/utils/isMobileView.ts","webpack://checkout/./packages/locale/src/localizeAddress.ts","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/ui/src/loading/LoadingOverlay.tsx","webpack://checkout/./packages/ui/src/context/ThemeContext.tsx","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/shipping/getLineItemsCount.ts","webpack://checkout/./packages/core/src/app/shipping/ConsignmentLineItemDetail.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-commerce-fastlane-method.ts","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/ui/src/form/FormFieldContainer/FormFieldContainer.tsx","webpack://checkout/./packages/ui/src/loading/LoadingSpinner.tsx","webpack://checkout/./packages/ui/src/context/ThemeProvider.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-braintree-fastlane-method.ts","webpack://checkout/./packages/core/src/app/common/utility/isExperimentEnabled.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionRegionContainer.ts","webpack://checkout/./packages/checkout-extension/src/Extension.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/ui/src/form/BasicFormField/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CartSummarySkeleton.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport React, { type FunctionComponent, type LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    additionalClassName?: string;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    additionalClassName,\n    ...rest\n}) => (\n    <label\n        {...rest}\n        className={classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label',\n            additionalClassName,\n        )}\n        data-test={testId}\n    >\n        {children}\n    </label>\n);\n\nexport default Label;\n","import classNames from 'classnames';\nimport React, { type ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import { type Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            (consignment.selectedShippingOption && consignment.selectedShippingOption.id) ||\n            consignment.selectedShippingOption?.type === 'custom',\n    );\n}\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, type FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, type FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { type FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","import { noop } from 'lodash';\n\nimport isBuyNowCart from './isBuyNowCart';\n\nexport default function navigateToOrderConfirmation(orderId?: number): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","import { forIn, isDate, padStart } from 'lodash';\n\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\n    [id: string]: any;\n}): Array<{ fieldId: string; fieldValue: string }> {\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\n\n    forIn(customFieldsObject, (value, key) => {\n        let fieldValue: string;\n\n        if (isDate(value)) {\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\n            const padDay = padStart(value.getDate().toString(), 2, '0');\n\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\n        } else {\n            fieldValue = value;\n        }\n\n        customFields.push({\n            fieldId: key,\n            fieldValue,\n        });\n    });\n\n    return customFields;\n}\n","import type { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import { Component, type ReactNode } from 'react';\n\nimport type ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children?: ReactNode;\n    fallback?: ReactNode;\n    logger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, logger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        // Adding errorCode with value `ErrorBoundary` to collect usage statistics of ErrorBoundary\n        if (logger) {\n            logger.log(error, {\n                errorCode: 'ErrorBoundary',\n            });\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { isFunction, noop } from 'lodash';\nimport React, {\n    createContext,\n    type FunctionComponent,\n    memo,\n    type ReactNode,\n    useMemo,\n    useState,\n} from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import { type Consignment, type LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import { createRequestSender, type RequestSender } from '@bigcommerce/request-sender';\n\nimport { type CreatedCustomer, type CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationRequirementsError extends CustomError {\n    constructor(data: Error, requirements: string) {\n        super({\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\n            message: requirements,\n            title: getLanguageService().translate(\n                'customer.create_account_requirements_error_heading',\n            ),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationFailedError extends CustomError {\n    constructor(data: Error) {\n        super({\n            name: 'ACCOUNT_CREATION_FAILED',\n            message: getLanguageService().translate('customer.create_account_error'),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\n    }\n}\n","import { type GatewayOrderPayment, type Order, type OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isGiftCertificatePayment } from '../giftCertificate';\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport interface PaymentInstructionsProps {\n    order: Order;\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\n}\n\nfunction getPaymentInstructions(order: Order): string {\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\n\n    return instructions || '';\n}\n\nexport default getPaymentInstructions;\n","import { type FieldProps } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface PasswordField {\n    minLength: number;\n}\n\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\n    const renderPasswordInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const renderPasswordConfirmationInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const passwordLabelContent = useMemo(\n        () => (\n            <>\n                <TranslatedString id=\"customer.password_label\" />{' '}\n                <small>\n                    {`${minLength}-`}\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\n                </small>\n            </>\n        ),\n        [minLength],\n    );\n\n    const passwordConfirmationLabelContent = useMemo(\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\n        [],\n    );\n\n    return (\n        <>\n            <FormField\n                input={renderPasswordInput}\n                labelContent={passwordLabelContent}\n                name=\"password\"\n            />\n\n            <FormField\n                input={renderPasswordConfirmationInput}\n                labelContent={passwordConfirmationLabelContent}\n                name=\"confirmPassword\"\n            />\n        </>\n    );\n};\n\nexport default memo(SignUpPasswordField);\n","import { type FormikProps, withFormik } from 'formik';\nimport React, { type FunctionComponent, memo } from 'react';\nimport { object, ref, string } from 'yup';\n\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { type PasswordRequirements } from '../customer';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport SignUpPasswordField from './SignUpPasswordField';\n\nexport interface SignUpFormProps {\n    isSigningUp?: boolean;\n    customerCanBeCreated: boolean;\n    passwordRequirements: PasswordRequirements;\n    onSignUp(data: SignUpFormValues): void;\n}\n\nexport interface SignUpFormValues {\n    password: string;\n    confirmPassword: string;\n}\n\nconst GuestSignUpForm: FunctionComponent<\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\n    <Fieldset\n        legend={\n            <Legend>\n                <TranslatedString\n                    id={\n                        customerCanBeCreated\n                            ? 'customer.create_account_text'\n                            : 'customer.set_password_text'\n                    }\n                />\n            </Legend>\n        }\n    >\n        {!customerCanBeCreated && (\n            <p>\n                <TranslatedString id=\"customer.account_created_text\" />\n            </p>\n        )}\n\n        <Form className=\"guest-signup form\">\n            <SignUpPasswordField minLength={minLength} />\n\n            <div className=\"form-actions\">\n                <Button\n                    id=\"createAccountButton\"\n                    isLoading={isSigningUp}\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString\n                        id={\n                            customerCanBeCreated\n                                ? 'customer.create_account_action'\n                                : 'customer.set_password_action'\n                        }\n                    />\n                </Button>\n            </div>\n        </Form>\n    </Fieldset>\n);\n\nexport default withLanguage(\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\n        mapPropsToValues: () => ({\n            password: '',\n            confirmPassword: '',\n        }),\n        handleSubmit: (values, { props: { onSignUp } }) => {\n            onSignUp(values);\n        },\n        validationSchema: ({\n            language,\n            passwordRequirements: { description, numeric, alpha, minLength },\n        }: SignUpFormProps & WithLanguageProps) =>\n            object({\n                password: string()\n                    .required(description || language.translate('customer.password_required_error'))\n                    .matches(\n                        numeric,\n                        description ||\n                            language.translate('customer.password_number_required_error'),\n                    )\n                    .matches(\n                        alpha,\n                        description ||\n                            language.translate('customer.password_letter_required_error'),\n                    )\n                    .min(\n                        minLength,\n                        description ||\n                            language.translate('customer.password_under_minimum_length_error'),\n                    )\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\n                confirmPassword: string()\n                    .required(language.translate('customer.password_confirmation_required_error'))\n                    .oneOf(\n                        [ref('password')],\n                        language.translate('customer.password_confirmation_error'),\n                    ),\n            }),\n    })(memo(GuestSignUpForm)),\n);\n","import React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.set_password_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default PasswordSavedSuccessAlert;\n","import React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst SignedUpSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.create_account_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default SignedUpSuccessAlert;\n","import React, { type FunctionComponent } from 'react';\n\nconst OrderConfirmationSection: FunctionComponent<{ children?: React.ReactNode }> = ({ children }) => (\n    <section className=\"orderConfirmation-section\">{children}</section>\n);\n\nexport default OrderConfirmationSection;\n","import React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface MandateTextComponentProps {\n    mandateText: {\n        [key: string]: string;\n    },\n    methodId: string;\n    providerId: string;\n}\n\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\n    mandateText,\n    providerId,\n    methodId,\n}) => {\n    if (!Object.keys(mandateText).length) {\n        return null;\n    }\n\n    return (\n        <ul data-test='order-confirmation-mandate-text-list'>\n            {Object.entries(mandateText).map((field, index) => {\n                return (\n                    <li data-test={`order-confirmation-mandate-text-list-item-${index}`} key={index}>\n                        <TranslatedString\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\n                        />:\n                        <b>\n                            {` ${field[1]}`}\n                        </b>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n","import { type GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { MandateTextComponent } from './MandateTextComponent';\n\nexport interface PaymentsWithMandatesProps {\n    paymentsWithMandates: GatewayOrderPayment[];\n}\n\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\n    paymentsWithMandates,\n}) => <>\n    {paymentsWithMandates.map((payment) => {\n        if (payment?.mandate?.url) {\n            return (\n                <a\n                    data-test=\"order-confirmation-mandate-link-text\"\n                    href={payment.mandate.url}\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TranslatedString\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </a>\n            );\n        } else if (payment?.mandate?.id) {\n            return (\n                <p\n                    data-test=\"order-confirmation-mandate-id-text\"\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                >\n                    <TranslatedString\n                        data={{ mandate: payment.mandate.id }}\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </p>\n            );\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\n            return <MandateTextComponent\n                key='mandateTextList'\n                mandateText={payment.mandate.mandateText}\n                methodId={payment.methodId}\n                providerId={payment.providerId}\n            />\n        }\n    })}\n</>\n","import { type GatewayOrderPayment, type GiftCertificateOrderPayment, type Order, type StoreConfig } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\n\nexport interface OrderStatusProps {\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber?: string;\n    order: Order;\n}\n\ntype PaymentWithMandate = GatewayOrderPayment &\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\n\nconst isPaymentWithMandate = (\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\n\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\n    config,\n    order,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\n\n    return (\n        <OrderConfirmationSection>\n            {order.orderId && (\n                <p data-test=\"order-confirmation-order-number-text\">\n                    <TranslatedHtml\n                        data={{ orderNumber: order.orderId }}\n                        id=\"order_confirmation.order_number_text\"\n                    />\n                </p>\n            )}\n\n            <p data-test=\"order-confirmation-order-status-text\">\n                <OrderStatusMessage\n                    config={config}\n                    orderNumber={order.orderId}\n                    orderStatus={order.status}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n            </p>\n            <PaymentsWithMandates\n                paymentsWithMandates={paymentsWithMandates}\n            />\n            {order.hasDigitalItems && (\n                <p data-test=\"order-confirmation-digital-items-text\">\n                    <TranslatedHtml\n                        id={\n                            order.isDownloadable\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\n                        }\n                    />\n                </p>\n            )}\n        </OrderConfirmationSection>\n    );\n};\n\ninterface OrderStatusMessageProps {\n    config: StoreConfig;\n    orderNumber: number;\n    orderStatus: string;\n    supportEmail?: string;\n    supportPhoneNumber?: string;\n}\n\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\n    config,\n    orderNumber,\n    orderStatus,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    switch (orderStatus) {\n        case 'MANUAL_VERIFICATION_REQUIRED':\n        case 'AWAITING_PAYMENT':\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\n\n        case 'PENDING':\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_pending_status_text\"\n                />\n            );\n\n        case 'INCOMPLETE':\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\n                return (\n                    <TranslatedHtml\n                        data={{ orderNumber, supportEmail }}\n                        id=\"order_confirmation.order_pending_status_text\"\n                    />\n                );\n            }\n\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_incomplete_status_text\"\n                />\n            );\n\n        default:\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\n                    id={\n                        supportPhoneNumber\n                            ? 'order_confirmation.order_with_support_number_text'\n                            : 'order_confirmation.order_without_support_number_text'\n                    }\n                />\n            );\n    }\n};\n\nexport default memo(OrderStatus);\n","import React, { type FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    children: React.ReactNode;\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import React, { type ReactElement } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonVariant } from '../../ui/button';\n\nexport const ContinueButton = ({ siteLink }:{siteLink: string}): ReactElement => (\n    <div className=\"continueButtonContainer\">\n        <form action={siteLink} method=\"get\" target=\"_top\">\n            <Button type=\"submit\" variant={ButtonVariant.Secondary}>\n                <TranslatedString id=\"order_confirmation.continue_shopping\" />\n            </Button>\n        </form>\n    </div>\n);\n","import { type GiftCertificate, type OrderPayments } from '@bigcommerce/checkout-sdk';\n\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\n\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\n        code: detail.code,\n        remaining: detail.remaining,\n        used: amount,\n        balance: amount + detail.remaining,\n        purchaseDate: '',\n    }));\n}\n","import { type OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\n    return (payments || [])\n        .filter(isStoreCreditPayment)\n        .reduce((total, payment) => total + payment.amount, 0);\n}\n","import { type Order } from '@bigcommerce/checkout-sdk';\n\nimport { mapFromPayments } from '../giftCertificate';\n\nimport getOrderShippingCostAfterAutomaticDiscount from './getOrderShippingCostAfterAutomaticDiscount';\nimport getStoreCreditAmount from './getStoreCreditAmount';\nimport { type OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    baseAmount,\n    discountAmount,\n    isTaxIncluded,\n    shippingCostBeforeDiscount,\n    payments,\n    handlingCostTotal,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n    consignments,\n}: Order,\nisShippingDiscountDisplayEnabled: boolean,\n): OrderSummarySubtotalsProps {\n\n    const shippingAmount = isShippingDiscountDisplayEnabled && consignments.shipping.length > 0\n    ? getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments.shipping)\n    : shippingCostBeforeDiscount;\n\n    return {\n        subtotalAmount: baseAmount,\n        shippingAmount,\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled ? shippingCostBeforeDiscount : undefined,\n        giftWrappingAmount: giftWrappingCostTotal,\n        discountAmount,\n        storeCreditAmount: getStoreCreditAmount(payments),\n        handlingAmount: handlingCostTotal,\n        coupons,\n        giftCertificates: payments && mapFromPayments(payments),\n        taxes,\n        isTaxIncluded,\n        fees,\n    };\n}\n","import { type OrderShippingConsignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: OrderShippingConsignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: OrderShippingConsignment) {\n    return consignment.discounts\n    .filter(discount => !discount.code)\n    .reduce((total, discount) => total + discount.amount, 0);\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPrint: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconPrint);\n","import { throttle } from 'lodash';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconPrint } from '../ui/icon';\n\nexport interface PrintLinkProps {\n    className?: string;\n}\n\nconst PRINT_MODAL_THROTTLE = 500;\n\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\n    const handleClick = useCallback(\n        throttle(() => {\n            window.print();\n        }, PRINT_MODAL_THROTTLE),\n        [],\n    );\n\n    if (typeof window.print !== 'function') {\n        return null;\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            href=\"#\"\n            id=\"cart-print-link\"\n            onClick={preventDefault(handleClick)}\n        >\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\n        </a>\n    );\n};\n\nexport default memo(PrintLink);\n","import { type Order, type ShopperCurrency, type StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport React, { lazy, type ReactElement } from 'react';\n\nimport { CartSummarySkeleton, LazyContainer } from '@bigcommerce/checkout/ui';\n\nimport { retry } from '../../common/utility';\nimport { MobileView } from '../../ui/responsive';\nimport mapToOrderSummarySubtotalsProps from '../mapToOrderSummarySubtotalsProps';\nimport PrintLink from '../PrintLink';\n\nconst OrderSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary\" */\n                '../OrderSummary'\n                ),\n    ),\n);\n\nconst OrderSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary-drawer\" */\n                '../OrderSummaryDrawer'\n                ),\n    ),\n);\n\ninterface OrderSummaryContainerProps {\n    order: Order;\n    currency: StoreCurrency;\n    shopperCurrency: ShopperCurrency;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nexport const OrderSummaryContainer = ({\n    currency,\n    isShippingDiscountDisplayEnabled,\n    order,\n    shopperCurrency,\n}:OrderSummaryContainerProps):ReactElement => (\n    <MobileView>\n        {(matched) => {\n            if (matched) {\n                return (\n                    <LazyContainer loadingSkeleton={<></>}>\n                        <OrderSummaryDrawer\n                            {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                            headerLink={<PrintLink className=\"modal-header-link cart-modal-link\" />}\n                            lineItems={order.lineItems}\n                            shopperCurrency={shopperCurrency}\n                            storeCurrency={currency}\n                            total={order.orderAmount}\n                        />\n                    </LazyContainer>\n                );\n            }\n\n            return (\n                <LazyContainer loadingSkeleton={<CartSummarySkeleton />}>\n                    <aside className=\"layout-cart\">\n                        <OrderSummary\n                            headerLink={<PrintLink />}\n                            {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                            lineItems={order.lineItems}\n                            shopperCurrency={shopperCurrency}\n                            storeCurrency={currency}\n                            total={order.orderAmount}\n                        />\n                    </aside>\n                </LazyContainer>\n            );\n        }}\n    </MobileView>\n);\n","import {\n    type Order,\n    type ShopperConfig,\n    type ShopperCurrency,\n    type StoreConfig,\n    type StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport React, { type ReactElement } from 'react';\n\nimport { ErrorModal } from '../../common/error';\nimport { getPasswordRequirementsFromConfig } from '../../customer';\nimport { isEmbedded } from '../../embeddedCheckout';\nimport {\n    GuestSignUpForm,\n    PasswordSavedSuccessAlert,\n    SignedUpSuccessAlert,\n    type SignUpFormValues,\n} from '../../guestSignup';\nimport OrderConfirmationSection from '../OrderConfirmationSection';\nimport OrderStatus from '../OrderStatus';\nimport ThankYouHeader from '../ThankYouHeader';\n\nimport { ContinueButton } from './ContinueButton';\nimport { OrderSummaryContainer } from './OrderSummaryContainer';\n\ninterface OrderConfirmationPageProps {\n    order: Order;\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber: string | undefined;\n    paymentInstructions: string | undefined;\n    shouldShowPasswordForm: boolean;\n    hasSignedUp: boolean | undefined;\n    isSigningUp: boolean | undefined;\n    onSignUp(values: SignUpFormValues): void;\n    shopperConfig: ShopperConfig;\n    customerCanBeCreated: boolean;\n    siteLink: string;\n    currency: StoreCurrency;\n    shopperCurrency: ShopperCurrency;\n    isShippingDiscountDisplayEnabled: boolean;\n    error: Error | undefined;\n    onErrorModalClose(): void;\n}\n\nexport const OrderConfirmationPage = ({\n    config,\n    currency,\n    customerCanBeCreated,\n    error,\n    hasSignedUp,\n    isShippingDiscountDisplayEnabled,\n    isSigningUp,\n    onErrorModalClose,\n    onSignUp,\n    order,\n    paymentInstructions,\n    shopperConfig,\n    shopperCurrency,\n    shouldShowPasswordForm,\n    siteLink,\n    supportEmail,\n    supportPhoneNumber,\n}: OrderConfirmationPageProps): ReactElement => (\n    <div\n        className={classNames('layout optimizedCheckout-contentPrimary', {\n            'is-embedded': isEmbedded(),\n        })}\n    >\n        <div className=\"layout-main\">\n            <div className=\"orderConfirmation\">\n                <ThankYouHeader name={order.billingAddress.firstName} />\n                <OrderStatus\n                    config={config}\n                    order={order}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n                {paymentInstructions && (\n                    <OrderConfirmationSection>\n                        <div\n                            dangerouslySetInnerHTML={{\n                                __html: DOMPurify.sanitize(paymentInstructions),\n                            }}\n                            data-test=\"payment-instructions\"\n                        />\n                    </OrderConfirmationSection>\n                )}\n\n                {shouldShowPasswordForm && !hasSignedUp && (\n                    <GuestSignUpForm\n                        customerCanBeCreated={customerCanBeCreated}\n                        isSigningUp={isSigningUp}\n                        onSignUp={onSignUp}\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\n                    />\n                )}\n\n                {hasSignedUp &&\n                    (order?.customerId ? (\n                        <PasswordSavedSuccessAlert />\n                    ) : (\n                        <SignedUpSuccessAlert />\n                    ))}\n\n                <ContinueButton siteLink={siteLink} />\n            </div>\n        </div>\n\n        <OrderSummaryContainer\n            currency={currency}\n            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n            order={order}\n            shopperCurrency={shopperCurrency}\n        />\n\n        <ErrorModal error={error} onClose={onErrorModalClose} shouldShowErrorCode={false} />\n    </div>\n);\n\n","import {\n    type EmbeddedCheckoutMessenger,\n    type EmbeddedCheckoutMessengerOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, {  type ReactElement, useEffect, useRef, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { OrderConfirmationPageSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { isExperimentEnabled } from '../../common/utility';\nimport { type EmbeddedCheckoutStylesheet } from '../../embeddedCheckout';\nimport {\n    type CreatedCustomer,\n    type SignUpFormValues,\n} from '../../guestSignup';\nimport {\n    AccountCreationFailedError,\n    AccountCreationRequirementsError,\n} from '../../guestSignup/errors';\nimport getPaymentInstructions from '../getPaymentInstructions';\n\nimport { OrderConfirmationPage } from './OrderConfirmationPage';\n\nexport interface OrderConfirmationProps {\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    errorLogger: ErrorLogger;\n    orderId: number;\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport const OrderConfirmation = ({\n    containerId,\n    createAccount,\n    createEmbeddedMessenger,\n    embeddedStylesheet,\n    orderId,\n    errorLogger,\n}: OrderConfirmationProps): ReactElement => {\n    const [error, setError] = useState<Error | undefined>();\n    const [hasSignedUp, setHasSignedUp] = useState<boolean | undefined>();\n    const [isSigningUp, setIsSigningUp] = useState<boolean | undefined>();\n\n    const embeddedMessengerRef = useRef<EmbeddedCheckoutMessenger | undefined>();\n\n    const {\n        checkoutState: {\n            data: { getOrder, getConfig },\n            statuses: { isLoadingOrder },\n        },\n        checkoutService: {\n            loadOrder,\n        },\n    } = useCheckout();\n    const { analyticsTracker } = useAnalytics();\n\n    const config = getConfig();\n    const order = getOrder();\n\n    const handleUnhandledError = (e: Error) => {\n        setError(e);\n        errorLogger.log(e);\n\n        if (embeddedMessengerRef.current) {\n            embeddedMessengerRef.current.postError(e);\n        }\n    };\n\n    const handleErrorModalClose = () => {\n        setError(undefined);\n    };\n\n    const handleSignUp = ({ password, confirmPassword }: SignUpFormValues) => {\n        const shopperConfig = config && config.shopperConfig;\n        const passwordRequirements =\n            (shopperConfig && shopperConfig.passwordRequirements && shopperConfig.passwordRequirements.error) || '';\n\n        setIsSigningUp(true);\n\n        createAccount({ password, confirmPassword })\n            .then(() => {\n                setHasSignedUp(true);\n                setIsSigningUp(false);\n            })\n            .catch((err) => {\n                setError(\n                    err.status < 500\n                        ? new AccountCreationRequirementsError(err, passwordRequirements)\n                        : new AccountCreationFailedError(err),\n                );\n                setHasSignedUp(false);\n                setIsSigningUp(false);\n            });\n    };\n\n    useEffect(() => {\n        loadOrder(orderId)\n            .then(({ data }) => {\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n                embeddedMessengerRef.current = messenger;\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n                messenger.postFrameLoaded({ contentId: containerId });\n                analyticsTracker.orderPurchased();\n            })\n            .catch(handleUnhandledError);\n    }, []);\n\n    if (!order || !config || isLoadingOrder()) {\n        return <OrderConfirmationPageSkeleton />;\n    }\n\n    const paymentInstructions = getPaymentInstructions(order);\n    const {\n        checkoutSettings,\n        currency,\n        shopperConfig,\n        shopperCurrency,\n        storeProfile: { orderEmail, storePhoneNumber },\n        links: { siteLink },\n    } = config;\n    const shouldShowPasswordForm = order.customerCanBeCreated;\n    const customerCanBeCreated = !order.customerId;\n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return (\n        <OrderConfirmationPage\n            config={config}\n            currency={currency}\n            customerCanBeCreated={customerCanBeCreated}\n            error={error}\n            hasSignedUp={hasSignedUp}\n            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n            isSigningUp={isSigningUp}\n            onErrorModalClose={handleErrorModalClose}\n            onSignUp={handleSignUp}\n            order={order}\n            paymentInstructions={paymentInstructions}\n            shopperConfig={shopperConfig}\n            shopperCurrency={shopperCurrency}\n            shouldShowPasswordForm={shouldShowPasswordForm}\n            siteLink={siteLink}\n            supportEmail={orderEmail}\n            supportPhoneNumber={storePhoneNumber}\n        />\n    );\n};\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport type { BrowserOptions } from '@sentry/browser';\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\nimport { ThemeProvider } from '@bigcommerce/checkout/ui';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, type CreatedCustomer, type SignUpFormValues } from '../guestSignup';\n\nimport { OrderConfirmation } from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nconst OrderConfirmationApp: React.FC<OrderConfirmationAppProps> = ({\n    containerId,\n    orderId,\n    publicPath,\n    sentryConfig,\n    sentrySampleRate,\n}) => {\n    const accountService = useMemo(() => new AccountService(), []);\n    const checkoutService = useMemo(() => createCheckoutService({\n            locale: getLanguageService().getLocale(),\n            shouldWarnMutation: process.env.NODE_ENV === 'development',\n    }), []);\n    const embeddedStylesheet = useMemo(() => createEmbeddedCheckoutStylesheet(), []);\n    const errorLogger = useMemo(() => createErrorLogger(\n            { sentry: sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath,\n                sampleRate: sentrySampleRate || 0.1,\n            },\n    ), []);\n\n    useEffect(() => {\n        ReactModal.setAppElement(`#${containerId}`);\n    }, []);\n\n    const createAccount = useCallback(\n        ({ password, confirmPassword }: SignUpFormValues): Promise<CreatedCustomer> => {\n            return accountService.create({\n                orderId,\n                newsletter: false,\n                password,\n                confirmPassword,\n            });\n        },\n        [accountService, orderId],\n    );\n\n    return (\n        <ErrorBoundary logger={errorLogger}>\n            <LocaleProvider checkoutService={checkoutService}>\n                <CheckoutProvider checkoutService={checkoutService}>\n                    <AnalyticsProvider checkoutService={checkoutService}>\n                        <ExtensionProvider checkoutService={checkoutService} errorLogger={createErrorLogger()}>\n                            <ThemeProvider>\n                                <OrderConfirmation\n                                    containerId={containerId}\n                                    createAccount={createAccount}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={embeddedStylesheet}\n                                    errorLogger={errorLogger}\n                                    orderId={orderId}\n                                />\n                            </ThemeProvider>\n                        </ExtensionProvider>\n                    </AnalyticsProvider>\n                </CheckoutProvider>\n            </LocaleProvider>\n        </ErrorBoundary>\n    );\n};\n\nexport default OrderConfirmationApp;\n","import classNames from 'classnames';\nimport React, { forwardRef, type Ref } from 'react';\n\nimport { Input, type InputProps } from '../Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            themeV2 = false,\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n                { 'floating-form-field-input': themeV2 && isFloatingLabelEnabled },\n                { 'body-regular': themeV2 && !isFloatingLabelEnabled },\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","import { type FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    type ArraySchema,\n    date,\n    number,\n    type NumberSchema,\n    object,\n    type ObjectSchema,\n    type Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '@bigcommerce/checkout/ui';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.CHECKBOX) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.CHECKBOX\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                    // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, type ReactNode, useId } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n    children?: ReactNode;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => {\n    const describedBy = useId();\n\n    return (\n        <div\n            aria-describedby={describedBy}\n            className={classNames(\n                'alertBox',\n                additionalClassName,\n                { 'alertBox--info': type === AlertType.Info || !type },\n                { 'alertBox--error': type === AlertType.Error },\n                { 'alertBox--success': type === AlertType.Success },\n                { 'alertBox--warning': type === AlertType.Warning },\n            )}\n            data-test={testId}\n        >\n            <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n            <div\n                aria-live={type === AlertType.Error ? 'assertive' : 'polite'}\n                className=\"alertBox-column alertBox-message\"\n                id={describedBy}\n                role={type === AlertType.Error ? 'alert' : 'status'}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default Alert;\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, type InputHTMLAttributes, type Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled &&\n                            !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import { PaymentMethodId } from './paymentMethod';\n\nexport default function getProviderWithCustomCheckout(methodId?: string | null): string | undefined {\n    if (!methodId) {\n        return undefined;\n    }\n\n    if (methodId === PaymentMethodId.PaypalCommerce || methodId === PaymentMethodId.PaypalCommerceCreditCards) {\n        return PaymentMethodId.PayPalCommerceAcceleratedCheckout;\n    }\n\n    if (methodId === PaymentMethodId.Braintree) {\n        return PaymentMethodId.BraintreeAcceleratedCheckout;\n    }\n\n    return methodId;\n}\n","import React, { memo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Toggle } from '../../ui/toggle';\n\ninterface ShippingOptionAdditionalDescriptionProps {\n    description: string;\n}\n\nconst ShippingOptionAdditionalDescription: React.FunctionComponent<\n    ShippingOptionAdditionalDescriptionProps\n> = ({ description }) => {\n    const CHRACTER_LIMIT = 45;\n\n    return (\n        <div className=\"shippingOption-additionalDescription--container\">\n            <Toggle openByDefault={description.length < CHRACTER_LIMIT}>\n                {({ isOpen, toggle }) => (\n                    <>\n                        <span\n                            className={`shippingOption-additionalDescription ${\n                                isOpen\n                                    ? 'shippingOption-additionalDescription--expanded'\n                                    : 'shippingOption-additionalDescription--collapsed'\n                            }`}\n                        >\n                            {description}\n                        </span>\n                        {!isOpen && (\n                            <a className=\"shippingOption-readMore\" onClick={preventDefault(toggle)}>\n                                <TranslatedString id=\"common.show_more\" />\n                            </a>\n                        )}\n                    </>\n                )}\n            </Toggle>\n        </div>\n    );\n};\n\nexport default memo(ShippingOptionAdditionalDescription);\n","import { type ShippingOption } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { ShopperCurrency } from '../../currency';\n\nimport ShippingOptionAdditionalDescription from './ShippingOptionAdditionalDescription';\nimport './StaticShippingOption.scss';\n\ninterface StaticShippingOptionProps {\n    displayAdditionalInformation?: boolean;\n    method: ShippingOption;\n    shippingCostAfterDiscount?: number;\n}\n\nconst StaticShippingOption: React.FunctionComponent<StaticShippingOptionProps> = ({\n    displayAdditionalInformation = true,\n    method,\n    shippingCostAfterDiscount,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderShippingPrice = () => {\n        if (shippingCostAfterDiscount !== undefined && shippingCostAfterDiscount !== method.cost) {\n            return (\n                <>\n                    <span className=\"shippingOption-price-before-discount\">\n                        <ShopperCurrency amount={method.cost} />\n                    </span>\n                    <ShopperCurrency amount={shippingCostAfterDiscount} />\n                </>\n            );\n        }\n\n        return (\n            <ShopperCurrency amount={method.cost} />\n        )\n\n    }\n\n    return (\n        <div className=\"shippingOption shippingOption--alt\" data-test=\"static-shipping-option\">\n            {method.imageUrl && (\n                <span className=\"shippingOption-figure\">\n                    <img\n                        alt={method.description}\n                        className=\"shippingOption-img\"\n                        src={method.imageUrl}\n                    />\n                </span>\n            )}\n            <span className={classNames('shippingOption-desc', { 'body-medium': themeV2 })}>\n                {method.description}\n                {method.transitTime && (\n                    <span className=\"shippingOption-transitTime\">{method.transitTime}</span>\n                )}\n                {method.additionalDescription && displayAdditionalInformation && (\n                    <ShippingOptionAdditionalDescription\n                        description={method.additionalDescription}\n                    />\n                )}\n            </span>\n            <span className={classNames('shippingOption-price', { 'body-medium': themeV2 })}>\n                {renderShippingPrice()}\n            </span>\n        </div>\n    );\n};\n\nexport default StaticShippingOption;\n","import { type Cart } from '@bigcommerce/checkout-sdk';\n\nexport default function isBuyNowCart(cart?: Cart): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n    const params = new URLSearchParams(window.location.search);\n\n    return (\n        cart?.source === 'BUY_NOW' ||\n        params.get('action') === 'buy' ||\n        !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout')\n    );\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import React, { type FunctionComponent } from 'react';\n\nimport { withCurrency, type WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nexport interface ShopperCurrencyProps {\n    amount: number;\n}\n\nconst ShopperCurrency: FunctionComponent<ShopperCurrencyProps & WithCurrencyProps> = ({\n    amount,\n    currency,\n}) => <>{currency.toCustomerCurrency(amount)}</>;\n\nexport default withCurrency(ShopperCurrency);\n","import classNames from 'classnames';\nimport React, { type FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, type LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(<div key={`checklist-skeleton-item${i}`} />);\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import { type Cart, type Consignment, type PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport { compact, find, isNil, map } from 'lodash';\n\nexport default function findLineItems(cart: Cart, consignment: Consignment): PhysicalItem[] {\n    return compact(\n        map(consignment.lineItemIds, (itemId) =>\n            find(\n                cart.lineItems.physicalItems,\n                (item) => item.id === itemId && isNil(item.parentId),\n            ),\n        ),\n    );\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, type LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading,\n    renderWhileLoading,\n}) => {\n    const skeleton = (\n        <>\n            <div className=\"address-form-skeleton\">\n                <div className=\"label\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name\" />\n                <div className=\"name\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"address\" />\n            </div>\n        </>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import { createInjectHoc, type InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithDateProps {\n    date: {\n        inputFormat: string;\n    };\n}\n\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'withDate',\n    pickProps: (value, key) => key === 'date' && !!value,\n});\n\nexport default withDate;\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import classNames from 'classnames';\nimport React, { forwardRef, type Ref, type TextareaHTMLAttributes } from 'react';\n\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n    additionalClassName?: string;\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextArea = forwardRef(\n    (\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\n        ref: Ref<HTMLTextAreaElement>,\n    ) => {\n        return (\n            <textarea\n                {...rest}\n                className={\n                    className ||\n                    classNames(\n                        { 'floating-textarea': isFloatingLabelEnabled },\n                        'form-input',\n                        'optimizedCheckout-form-input',\n                        additionalClassName,\n                    )\n                }\n                data-test={testId}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default TextArea;\n","import { type FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isDate, noop } from 'lodash';\nimport React, { type FunctionComponent, lazy, memo, Suspense, useCallback } from 'react';\n\nimport { withDate, type WithDateProps } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown } from '../../icon';\nimport { CheckboxInput } from '../CheckboxInput';\nimport { type InputProps } from '../Input';\nimport { RadioInput } from '../RadioInput';\nimport { TextArea } from '../TextArea';\nimport { TextInput } from '../TextInput';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\n\nconst ReactDatePicker = lazy(\n    () =>\n        import(\n            /* webpackChunkName: \"react-datepicker\" */\n            'react-datepicker'\n        ),\n);\n\nexport interface DynamicInputProps extends InputProps {\n    id: string;\n    additionalClassName?: string;\n    value?: string | string[];\n    rows?: number;\n    fieldType?: DynamicFormFieldType;\n    options?: FormFieldItem[];\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n    inputDateFormat?: string;\n}\n\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\n    fieldType,\n    id,\n    name,\n    onChange = noop,\n    options,\n    placeholder,\n    value,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n    date,\n    inputDateFormat,\n    ...rest\n}) => {\n    const inputFormat = inputDateFormat || date.inputFormat || '';\n\n    const handleDateChange = useCallback(\n        (dateValue: string, event: any) =>\n            onChange({\n                ...event,\n                target: {\n                    name,\n                    value: dateValue,\n                },\n            }),\n        [onChange, name],\n    );\n\n    switch (fieldType) {\n        case DynamicFormFieldType.DROPDOWM:\n            return (\n                <>\n                    <div\n                        className={classNames(\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\n                        )}\n                    >\n                        <IconChevronDown />\n                    </div>\n                    <select\n                        {...(rest as any)}\n                        className={classNames(\n                            { 'floating-select': isFloatingLabelEnabled },\n                            'form-select optimizedCheckout-form-select',\n                            { 'floating-form-field-input': themeV2 },\n                        )}\n                        data-test={`${id}-select`}\n                        id={id}\n                        name={name}\n                        onChange={onChange}\n                        value={value ?? ''}\n                    >\n                        {!!placeholder && <option value=\"\">{placeholder}</option>}\n                        {options &&\n                            options.map(({ label, value: optionValue }) => (\n                                <option key={optionValue} value={optionValue}>\n                                    {label}\n                                </option>\n                            ))}\n                    </select>\n                </>\n            );\n\n        case DynamicFormFieldType.RADIO:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <RadioInput\n                            {...rest}\n                            checked={optionValue === value}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-radio`}\n                            themeV2={themeV2}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.CHECKBOX:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <CheckboxInput\n                            {...rest}\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-checkbox`}\n                            themeV2={themeV2}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.DATE:\n            return (\n                <Suspense>\n                    <ReactDatePicker\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        {...(rest as any)}\n                        autoComplete=\"off\"\n                        // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\n                        // https://github.com/Hacker0x01/react-datepicker/issues/1357\n                        // onChangeRaw={ rest.onChange }\n                        calendarClassName=\"optimizedCheckout-contentPrimary\"\n                        className={classNames('form-input optimizedCheckout-form-input', {\n                            'floating-input': isFloatingLabelEnabled,\n                            'floating-form-field-input': themeV2,\n                        })}\n                        dateFormat={inputFormat}\n                        maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\n                        minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\n                        name={name}\n                        onChange={handleDateChange}\n                        placeholderText={inputFormat.toUpperCase()}\n                        popperClassName=\"optimizedCheckout-contentPrimary\"\n                        selected={isDate(value) ? value : undefined}\n                    />\n                </Suspense>\n            );\n\n        case DynamicFormFieldType.MULTILINE:\n            return (\n                <TextArea\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    {...(rest as any)}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    testId={`${id}-text`}\n                    themeV2={themeV2}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n\n        default:\n            return (\n                <TextInput\n                    {...rest}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    testId={`${id}-${\n                        fieldType === DynamicFormFieldType.PASSWORD ? 'password' : 'text'\n                    }`}\n                    themeV2={themeV2}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n    }\n};\n\nexport default memo(withDate(DynamicInput));\n","import { isEmpty, pickBy } from 'lodash';\nimport React, {\n    type ComponentType,\n    type Context,\n    type FunctionComponent,\n    memo,\n    useContext,\n} from 'react';\n\nimport type InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import { type CurrencyService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, type InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithCurrencyProps {\n    currency: CurrencyService;\n}\n\nconst withCurrency: InjectHoc<WithCurrencyProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithCurrency',\n    pickProps: (value, key) => key === 'currency' && !!value,\n});\n\nexport default withCurrency;\n","import type CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { type Address, type AddressKey, type FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '@bigcommerce/checkout/ui';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    const fieldValue = address && address[name];\n\n                    addressFormValues[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    )?.toString() || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.DATE && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.DATE) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.CHECKBOX) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import { type FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n    themeV2?: boolean;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        (props: FieldProps<string>) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label && (typeof label === 'function' ? label(name) : label)}\n                {labelContent && !label && (\n                    <Label\n                        additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import {\n  ErrorLevelType,\n  type ErrorLogger,\n  type ErrorMeta,\n  type ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import { getScriptLoader } from '@bigcommerce/script-loader';\nimport type {\n    BrowserOptions,\n    ErrorEvent,\n    EventHint,\n    Exception,\n    SeverityLevel,\n    StackFrame,\n} from '@sentry/browser';\n\nimport {\n    ErrorLevelType,\n    type ErrorLogger,\n    type ErrorMeta,\n    type ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport type ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n    private dsn: string;\n    private loaderPromise?: Promise<void>;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n        this.dsn = config.dsn || '';\n\n        window.sentryOnLoad = async () => {\n            Sentry.init({\n                sampleRate,\n                beforeSend: this.handleBeforeSend.bind(this),\n                denyUrls: [\n                    ...(config.denyUrls || []),\n                    'polyfill~checkout',\n                ],\n                integrations: [\n                    Sentry.globalHandlersIntegration({\n                        onerror: false,\n                        onunhandledrejection: true,\n                    }),\n                ],\n                ...config,\n            });\n\n            const rewriteFramesIntegration = await Sentry.lazyLoadIntegration('rewriteFramesIntegration');\n\n            Sentry.addIntegration(rewriteFramesIntegration({\n                iteratee: this.handleRewriteFrame.bind(this),\n            }));\n        };\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        this.loadSentry().then(() => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            Sentry.captureException(error, {\n                tags: { errorCode },\n                level: this.mapToSentryLevel(level),\n                extra: payload,\n                fingerprint: ['{{ default }}'],\n            });\n        });\n    }\n\n    private loadSentry(): Promise<void> {\n        if (this.loaderPromise) {\n            return this.loaderPromise;\n        }\n\n        const key = /https:\\/\\/(.+)@.+\\//.exec(this.dsn)?.[1] ?? '';\n\n        this.loaderPromise = getScriptLoader().loadScript(`https://js.sentry-cdn.com/${key}.min.js`, {\n            attributes: {\n                crossorigin: 'anonymous',\n            },\n            async: false,\n        });\n\n        return this.loaderPromise;\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX) || frame.filename?.startsWith(this.publicPath),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: ErrorEvent, hint: EventHint) => ErrorEvent | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  type ErrorLogger,\n  type ErrorLoggerOptions,\n  type ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","import { type CheckoutSelectors, type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, {\n    type ReactElement,\n    type ReactNode,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\n\nimport CheckoutContext from './CheckoutContext';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nconst CheckoutProvider = ({ checkoutService, children }: CheckoutProviderProps): ReactElement => {\n    const [checkoutState, setCheckoutState] = useState<CheckoutSelectors>(() =>\n        checkoutService.getState(),\n    );\n    const unsubscribeRef = useRef<(() => void) | undefined>();\n\n    const contextValue = useMemo(\n        () => ({\n            checkoutService,\n            checkoutState,\n        }),\n        [checkoutService, checkoutState],\n    );\n\n    useEffect(() => {\n        unsubscribeRef.current = checkoutService.subscribe((newCheckoutState) =>\n            setCheckoutState(newCheckoutState),\n        );\n\n        return () => {\n            if (unsubscribeRef.current) {\n                unsubscribeRef.current();\n                unsubscribeRef.current = undefined;\n            }\n        };\n    }, [checkoutService]);\n\n    return <CheckoutContext.Provider value={contextValue}>{children}</CheckoutContext.Provider>;\n};\n\nexport default CheckoutProvider;\n","import { type CustomerPasswordRequirements, type ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","import React, { type FunctionComponent, type ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n    children?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '0%', top: '-300%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport React, { forwardRef, type ReactNode, type Ref } from 'react';\n\nimport Input, { type InputProps } from '../Input/Input';\nimport Label from '../Label/Label';\n\nexport interface RadioInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst RadioInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            label,\n            value,\n            checked,\n            id,\n            themeV2 = false,\n            ...rest\n        }: RadioInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                checked={checked}\n                className={classNames(\n                    'form-radio',\n                    'optimizedCheckout-form-radio',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"radio\"\n                value={value}\n            />\n            <Label additionalClassName={themeV2 ? 'body-regular' : ''} htmlFor={id}>\n                {label}\n            </Label>\n        </>\n    ),\n);\n\nexport default RadioInput;\n","import { type Consignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: Consignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: Consignment) {\n    return consignment.discounts.reduce((discountTotal, discount) => {\n        return discount.type === 'AUTOMATIC' ? discountTotal + discount.amount : discountTotal;\n    }, 0);\n}\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","import type CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { type CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.includes(id));\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { type CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport { isMobileView } from '../../utils';\n\nimport { CartSummarySkeleton } from './CartSummarySkeleton';\n\nconst CheckoutPageSkeletonDesktop: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\" data-test=\"checkout-page-skeleton\">\n        <div className=\"layout-main\">\n            <div className=\"checkout-steps checkout-page-skeleton\">\n                <div className=\"title--first\" />\n                <div className=\"textbox\" />\n                <div className=\"subscription\">\n                    <div className=\"checkbox\" />\n                    <div className=\"description\" />\n                </div>\n                <div className=\"terms--1\" />\n                <div className=\"terms--2\" />\n                <div className=\"title\" />\n                <div className=\"title\" />\n                <div className=\"title\" />\n            </div>\n        </div>\n        <CartSummarySkeleton />\n    </div>\n);\n\nconst CheckoutPageSkeletonMobile: FunctionComponent = () => (\n    <div\n        className=\"layout optimizedCheckout-contentPrimary\"\n        data-test=\"checkout-page-skeleton-mobile\"\n    >\n        <div className=\"layout-main \">\n            <div className=\"checkout-page-skeleton\">\n                <div className=\"walletbutton--tagline\" />\n                <div className=\"walletbutton\" />\n                <div className=\"walletbutton--divider\" />\n                <div className=\"mobile-title--first\" />\n                <div className=\"textbox\" />\n                <div className=\"textbox\" />\n                <div className=\"terms--1\" />\n                <div className=\"mobile-title--2\" />\n                <div className=\"divider\" />\n                <div className=\"mobile-title--3\" />\n                <div className=\"divider\" />\n                <div className=\"mobile-title--4\" />\n                <div className=\"divider\" />\n                <div className=\"divider\" />\n            </div>\n            <div className=\"checkout-page-skeleton--cartdrawer\">\n                <div className=\"product\">\n                    <div className=\"animated-grey-box figure\" />\n                    <div className=\"details\">\n                        <div className=\"animated-grey-box name\" />\n                        <div className=\"animated-grey-box description\" />\n                    </div>\n                </div>\n                <div className=\"animated-grey-box more\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst CheckoutPageSkeleton: FunctionComponent = () => {\n    return isMobileView() ? <CheckoutPageSkeletonMobile /> : <CheckoutPageSkeletonDesktop />;\n};\n\nexport default CheckoutPageSkeleton;\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface LoadingNotificationProps {\n    isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingNotification\">\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\n                <div className=\"spinner\" />\n\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\n                    <TranslatedString id=\"common.loading_text\" />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(LoadingNotification);\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","import React, { type ReactElement, useEffect, useState } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { LoadingOverlay } from '@bigcommerce/checkout/ui';\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\nconst EmptyCartMessage = ({ waitInterval, loginUrl }: EmptyCartMessageProps): ReactElement => {\n    const [isWaiting, setIsWaiting] = useState(true);\n\n    useEffect(() => {\n        const waitToken = setTimeout(() => {\n            setIsWaiting(false);\n        }, waitInterval);\n\n        return () => {\n            clearTimeout(waitToken);\n        };\n    }, [waitInterval]);\n\n    return (\n        <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n            <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n        </LoadingOverlay>\n    );\n};\n\nexport default EmptyCartMessage;\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n}\n\nexport default CustomerViewType;\n","import React, { type FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, type LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote walletbuttons-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div key={`skeleton-container-${i}`} />\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","const APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'chasepay',\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n    'googlepaypaypalcommerce',\n    'googlepaytdonlinemart',\n    'stripeocs',\n    'googlepaystripeocs',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[]): string[] => {\n    return methodIds.filter((methodId) => SUPPORTED_METHODS.includes(methodId));\n}\n","import { lazy } from 'react';\n\nconst AmazonPayV2Button = lazy(() => import(/* webpackChunkName: \"amazon-pay-v2-button\" */'@bigcommerce/checkout/amazon-pay-v2-integration').then(module => ({ default: module.AmazonPayV2Button })));\nconst BigCommercePaymentsButton = lazy(() => import(/* webpackChunkName: \"big-commerce-payments-button\" */'@bigcommerce/checkout/bigcommerce-payments-integration').then(module => ({ default: module.BigCommercePaymentsButton })));\nconst BigcommercePaymentsPayLaterButton = lazy(() => import(/* webpackChunkName: \"bigcommerce-payments-pay-later-button\" */'@bigcommerce/checkout/bigcommerce-payments-integration').then(module => ({ default: module.BigcommercePaymentsPayLaterButton })));\nconst CheckoutButton = lazy(() => import(/* webpackChunkName: \"checkout-button\" */'@bigcommerce/checkout/checkout-button-integration').then(module => ({ default: module.CheckoutButton })));\nconst GooglePayButton = lazy(() => import(/* webpackChunkName: \"google-pay-button\" */'@bigcommerce/checkout/google-pay-integration').then(module => ({ default: module.GooglePayButton })));\nconst PayPalCommerceCreditButton = lazy(() => import(/* webpackChunkName: \"pay-pal-commerce-credit-button\" */'@bigcommerce/checkout/paypal-commerce-integration').then(module => ({ default: module.PayPalCommerceCreditButton })));\nconst PayPalCommerceButton = lazy(() => import(/* webpackChunkName: \"pay-pal-commerce-button\" */'@bigcommerce/checkout/paypal-commerce-integration').then(module => ({ default: module.PayPalCommerceButton })));\nconst StripeLinkV2Button = lazy(() => import(/* webpackChunkName: \"stripe-link-v2-button\" */'@bigcommerce/checkout/stripe-integration').then(module => ({ default: module.StripeLinkV2Button })));\n\nexport {\n  AmazonPayV2Button,\n  BigCommercePaymentsButton,\n  BigcommercePaymentsPayLaterButton,\n  CheckoutButton,\n  GooglePayButton,\n  PayPalCommerceCreditButton,\n  PayPalCommerceButton,\n  StripeLinkV2Button,\n};\n\nexport const ComponentRegistry = {\n  'AmazonPayV2Button': [\n    { \"id\": \"amazonpay\" }\n  ],\n  'BigCommercePaymentsButton': [\n    { \"id\": \"bigcommerce_payments\" }\n  ],\n  'BigcommercePaymentsPayLaterButton': [\n    { \"id\": \"bigcommerce_payments_paylater\" }\n  ],\n  'GooglePayButton': [\n    { \"id\": \"googlepayadyenv2\" },\n    { \"id\": \"googlepayadyenv3\" },\n    { \"id\": \"googlepayauthorizenet\" },\n    { \"id\": \"googlepaybnz\" },\n    { \"id\": \"googlepaybraintree\" },\n    { \"id\": \"googlepaypaypalcommerce\" },\n    { \"id\": \"googlepaycheckoutcom\" },\n    { \"id\": \"googlepaycybersourcev2\" },\n    { \"id\": \"googlepayorbital\" },\n    { \"id\": \"googlepaystripe\" },\n    { \"id\": \"googlepaystripeupe\" },\n    { \"id\": \"googlepayworldpayaccess\" },\n    { \"id\": \"googlepaytdonlinemart\" },\n    { \"id\": \"googlepaystripeocs\" }\n  ],\n  'PayPalCommerceButton': [\n    { \"id\": \"paypalcommerce\" }\n  ],\n  'PayPalCommerceCreditButton': [\n    { \"id\": \"paypalcommercecredit\" }\n  ],\n  'StripeLinkV2Button': [\n    { \"id\": \"stripeocs\" }\n  ]\n} as const;\n\n    \n","import { type ComponentType } from 'react';\n\nimport {\n    type CheckoutButtonProps,\n    type CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveLazyComponent } from '../common/resolver';\nimport * as lazyCheckoutButtons from '../generated/checkoutButtons';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId\n): ComponentType<CheckoutButtonProps> | undefined {\n    const { ComponentRegistry, ...components } = lazyCheckoutButtons;\n\n    return resolveLazyComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        components,\n        ComponentRegistry,\n    );\n}\n","import { type CustomerInitializeOptions, type CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\nimport React, { type FunctionComponent, lazy, Suspense } from \"react\";\n\nimport CheckoutButton from \"./CheckoutButton\";\n\nconst ApplePayButton = lazy(() => import(/* webpackChunkName: \"apple-pay-button\" */'./customWalletButton/ApplePayButton'));\n\ninterface CheckoutButtonV1ResolverProps {\n    methodId: string;\n    deinitialize(options: CustomerRequestOptions): void;\n    isShowingWalletButtonsOnTop?: boolean;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodName: string): void;\n}\n\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\n    isShowingWalletButtonsOnTop= false,\n    onError,\n    methodId,\n    ...rest\n}) => {\n    switch (methodId) {\n        case 'applepay':\n            return <Suspense>\n                <ApplePayButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            </Suspense>;\n    }\n\n    return <CheckoutButton\n            containerId={`${methodId}CheckoutButton`}\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n            key={methodId}\n            methodId={methodId}\n            onError={onError}\n            {...rest}\n        />;\n};\n\nexport default CheckoutButtonV1Resolver;\n","import { type CheckoutSelectors, type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, memo, Suspense } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext, WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\ninterface CheckoutButtonContainerProps {\n    isPaymentStepActive: boolean;\n    checkEmbeddedSupport(methodIds: string[]): void;\n    onUnhandledError(error: Error): void;\n    onWalletButtonClick(methodId: string): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n    availableMethodIds: string[];\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n    isLoading: boolean;\n}\n\nconst paypalCommerceIds = [\n    'paypalcommerce',\n    'paypalcommercecredit',\n    'paypalcommercevenmo',\n];\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\n    {\n        availableMethodIds,\n        checkoutService,\n        checkoutState,\n        checkEmbeddedSupport,\n        isLoading,\n        isPaymentStepActive,\n        onUnhandledError,\n        onWalletButtonClick,\n    }) => {\n    const { language } = useLocale();\n    const { themeV2 } = useThemeContext();\n\n    try {\n        checkEmbeddedSupport(availableMethodIds);\n    } catch (error) {\n        return null;\n    }\n\n    const renderButtons = () => availableMethodIds.map((methodId) => {\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n            return null;\n        }\n\n        const ResolvedCheckoutButton = resolveCheckoutButton(\n            { id: methodId },\n        );\n\n        if (!ResolvedCheckoutButton) {\n            return <CheckoutButtonV1Resolver\n                deinitialize={checkoutService.deinitializeCustomer}\n                initialize={checkoutService.initializeCustomer}\n                isShowingWalletButtonsOnTop={true}\n                key={methodId}\n                methodId={methodId}\n                onClick={onWalletButtonClick}\n                onError={onUnhandledError}\n            />\n        }\n\n        return <Suspense key={methodId}> \n            <ResolvedCheckoutButton\n                checkoutService={checkoutService}\n                checkoutState={checkoutState}\n                containerId={`${methodId}CheckoutButton`}\n                language={language}\n                methodId={methodId}\n                onUnhandledError={onUnhandledError}\n                onWalletButtonClick={onWalletButtonClick}\n            />\n        </Suspense>;\n    });\n\n    return (\n        <div className='checkout-button-container'\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\n        >\n            <p className={classNames({\n                'sub-header': themeV2,\n            })}>\n                <TranslatedString id=\"remote.start_with_text\" />\n            </p>\n            <div className='checkout-buttons-auto-layout'>\n                <WalletButtonsContainerSkeleton buttonsCount={availableMethodIds.length} isLoading={isLoading}>\n                    <div className=\"checkoutRemote\">\n                        {renderButtons()}\n                    </div>\n                </WalletButtonsContainerSkeleton>\n            </div>\n            <div className='checkout-separator'>\n                <span className={classNames({ 'sub-header': themeV2 })}>\n                    <TranslatedString id='remote.or_text' />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n    checkoutState,\n    checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n    const {\n        data: {\n            getConfig,\n            getCustomer,\n            isPaymentDataRequired,\n        },\n        statuses: {\n            isInitializedCustomer,\n        },\n        errors: {\n            getInitializeCustomerError,\n        }\n     } = checkoutState;\n    const config = getConfig();\n    const providers = config?.checkoutSettings.remoteCheckoutProviders ?? [];\n\n    const availableMethodIds = getSupportedMethodIds(providers);\n    const customer = getCustomer();\n\n    if (!isPaymentDataRequired()) {\n        return null;\n    }\n\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n        return null;\n    }\n\n    const isLoading = availableMethodIds.filter(\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\n    ).length !== availableMethodIds.length;\n\n    return {\n        checkoutService,\n        checkoutState,\n        availableMethodIds,\n        isLoading,\n    }\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\n","import {\n    type CheckoutSelectors,\n    type CustomerInitializeOptions,\n    type CustomerRequestOptions,\n    type ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({ hasBoltAccount });\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { type SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    type CheckoutSelectors,\n    type CustomerInitializeOptions,\n    type CustomerRequestOptions,\n    type ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { type Checkout, type Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './getSupportedMethods';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.includes(methodId);\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => !SUPPORTED_METHODS.includes(payment.providerId),\n    );\n}\n","import { type CheckoutSelectors, type CustomerRequestOptions, type CustomError } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\nimport { isErrorWithType } from '../common/error';\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\n\nimport canSignOut, { isSupportedSignoutMethod } from './canSignOut';\n\nexport interface CustomerInfoProps {\n    onSignOut?(event: CustomerSignOutEvent): void;\n    onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n    isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n    checkoutLink: string;\n    email: string;\n    methodId: string;\n    isSignedIn: boolean;\n    isSigningOut: boolean;\n    logoutLink: string;\n    shouldRedirectToStorefrontForAuth: boolean;\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n    checkoutLink,\n    email,\n    methodId,\n    isSignedIn,\n    isSigningOut,\n    logoutLink,\n    shouldRedirectToStorefrontForAuth,\n    onSignOut = noop,\n    onSignOutError = noop,\n    signOut,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const handleSignOut: () => Promise<void> = async () => {\n        try {\n            if (shouldRedirectToStorefrontForAuth) {\n                window.location.assign(`${logoutLink}?redirectTo=${checkoutLink}`);\n\n                return;\n            }\n\n            if (isSupportedSignoutMethod(methodId)) {\n                await signOut({ methodId });\n                onSignOut({ isCartEmpty: false });\n                window.location.reload();\n            } else {\n                await signOut();\n                onSignOut({ isCartEmpty: false });\n            }\n        } catch (error) {\n            if (isErrorWithType(error) && error.type === 'checkout_not_available') {\n                onSignOut({ isCartEmpty: true });\n            } else {\n                onSignOutError(error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\n            <div\n                className={classNames('customerView-body',\n                    { 'body-regular': themeV2 },\n                )}\n                data-test=\"customer-info\"\n            >\n                {email}\n            </div>\n\n            <div className=\"customerView-actions\">\n                {isSignedIn && (\n                    <Button\n                        className={themeV2 ? 'body-regular' : ''}\n                        isLoading={isSigningOut}\n                        onClick={handleSignOut}\n                        size={ButtonSize.Tiny}\n                        testId=\"sign-out-link\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"customer.sign_out_action\" />\n                    </Button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer, getConfig },\n        statuses: { isSigningOut },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const config = getConfig();\n\n    if (!billingAddress || !checkout || !customer || !config) {\n        return null;\n    }\n\n    const { checkoutSettings, links: { checkoutLink, logoutLink } } = config;\n\n    const methodId =\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n    return {\n        email: billingAddress.email || customer.email,\n        methodId,\n        isSignedIn: canSignOut(customer, checkout, methodId),\n        isSigningOut: isSigningOut(),\n        logoutLink,\n        checkoutLink,\n        shouldRedirectToStorefrontForAuth: checkoutSettings.shouldRedirectToStorefrontForAuth,\n        signOut: checkoutService.signOutCustomer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import {\n    type CheckoutSelectors,\n    type CheckoutService,\n    type CustomerInitializeOptions,\n    type CustomerRequestOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { LazyContainer } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\nexport interface CheckoutButtonListProps {\n    hideText?: boolean;\n    isInitializing?: boolean;\n    methodIds?: string[];\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onClick?(methodId: string): void;\n    onError?(error: Error): void;\n}\n\ninterface WithCheckoutCheckoutButtonListProps {\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n}\n\nconst CheckoutButtonList: FunctionComponent<WithCheckoutCheckoutButtonListProps & CheckoutButtonListProps> = ({\n    checkoutService,\n    checkoutState,\n    hideText = false,\n    isInitializing = false,\n    methodIds = [],\n    checkEmbeddedSupport,\n    deinitialize,\n    initialize,\n    onClick = noop,\n    onError,\n}) => {\n    const { language } = useLocale();\n    const supportedMethodIds = getSupportedMethodIds(methodIds);\n\n    if (supportedMethodIds.length === 0) {\n        return null;\n    }\n\n    if (checkEmbeddedSupport) {\n        try {\n            checkEmbeddedSupport(supportedMethodIds);\n        } catch (error) {\n            if (error instanceof Error && onError) {\n                onError(error);\n            } else {\n                throw error;\n            }\n\n            return null;\n        }\n    }\n\n    const renderButtons = () => {\n        return supportedMethodIds.map((methodId) => {\n            const ResolvedCheckoutButton = resolveCheckoutButton(\n                { id: methodId },\n            );\n\n            if (!ResolvedCheckoutButton) {\n                return <CheckoutButtonV1Resolver\n                    deinitialize={deinitialize}\n                    initialize={initialize}\n                    isShowingWalletButtonsOnTop={false}\n                    key={methodId}\n                    methodId={methodId}\n                    onClick={onClick}\n                    onError={onClick}\n                />\n            }\n\n            return <LazyContainer key={methodId}>\n                <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onClick}\n                    onWalletButtonClick={onClick}\n                />\n            </LazyContainer>;\n        });\n    };\n\n    return (\n        <>\n            {!isInitializing && !hideText && (\n                <p>\n                    <TranslatedString id=\"remote.continue_with_text\" />\n                </p>\n            )}\n\n            <div className=\"checkoutRemote\">\n                {renderButtons()}\n            </div>\n        </>\n    );\n};\n\nfunction mapToCheckoutButtonListProps({\n  checkoutState,\n  checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonListProps | null {\n    return {\n        checkoutService,\n        checkoutState,\n    };\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonListProps)(CheckoutButtonList));\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\n// we need to keep this regex for login validation as accounts might have been created using this regex\nexport const EMAIL_REGEXP =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { object, type ObjectSchema, string } from 'yup';\n\nimport { EMAIL_REGEXP } from './validationPatterns';\n\nexport interface EmailValidationSchemaOptions {\n    language: LanguageService;\n}\n\nexport default function getEmailValidationSchema({\n    language,\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\n    return object({\n        email: string()\n            .max(256)\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\n            .required(language.translate('customer.email_required_error')),\n    });\n}\n","import { type FormField, type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport { object, type ObjectSchema, string } from 'yup';\n\nimport {\n    type CustomFormFieldValues,\n    getCustomFormFieldsValidationSchema,\n    type TranslateValidationErrorFunction,\n} from '../formFields';\n\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport { type PasswordRequirements } from './getPasswordRequirements';\n\nexport type CreateAccountFormValues = {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    acceptsMarketingEmails?: string[];\n    token?: string;\n} & CustomFormFieldValues;\n\nexport interface CreateCustomerValidationSchema {\n    formFields: FormField[];\n    language: LanguageService;\n    passwordRequirements: PasswordRequirements;\n}\n\n/* istanbul ignore next */ // Currently no limitation on new customer's name\nfunction getTranslateCreateCustomerError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    return (type, { label, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            return language.translate('customer.required_error', { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate('customer.max_error', { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate('customer.min_error', { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate('customer.invalid_characters_error', { label });\n        }\n    };\n}\n\nexport default memoize(function getCreateCustomerValidationSchema({\n    formFields,\n    language,\n    passwordRequirements: { description, numeric, alpha, minLength },\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\n    return object({\n        firstName: string().required(language.translate('address.first_name_required_error')),\n        lastName: string().required(language.translate('address.last_name_required_error')),\n        password: string()\n            .required(language.translate('customer.password_required_error') || description)\n            .matches(\n                numeric,\n                language.translate('customer.password_number_required_error') || description,\n            )\n            .matches(\n                alpha,\n                language.translate('customer.password_letter_required_error') || description,\n            )\n            .min(\n                minLength,\n                language.translate('customer.password_under_minimum_length_error') || description,\n            )\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\n    })\n        .concat(getEmailValidationSchema({ language }))\n        .concat(\n            getCustomFormFieldsValidationSchema({\n                formFields,\n                translate: getTranslateCreateCustomerError(language),\n            }),\n        );\n});\n","/* istanbul ignore file */\n\n// TODO: CHECKOUT-9010 Cover 'Customer registration failure due to using an existing email' in functional tests repo\nimport { type FormField } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { type FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, useMemo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { DynamicFormField , useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { isRequestError } from '../common/error';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form } from '../ui/form';\n\nimport getCreateCustomerValidationSchema, {\n    type CreateAccountFormValues,\n} from './getCreateCustomerValidationSchema';\nimport getPasswordRequirements from './getPasswordRequirements';\n\nimport './CreateAccountForm.scss';\n\nexport interface CreateAccountFormProps {\n    formFields: FormField[];\n    createAccountError?: Error;\n    isCreatingAccount?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onSubmit(values: CreateAccountFormValues): void;\n}\n\nfunction getAcceptsMarketingEmailsDefault(defaultShouldSubscribe: boolean, requiresMarketingConsent: boolean): string[] {\n    if (defaultShouldSubscribe) {\n        return ['1'];\n    }\n\n    return requiresMarketingConsent ? [] : ['0'];\n}\n\nfunction transformFormFieldsData(formFields: FormField[], defaultShouldSubscribe: boolean): FormField[] {\n    return formFields.map(field => {\n        if (field.name === 'acceptsMarketingEmails') {\n            const { options } = field;\n            const items = options?.items || [];\n\n            const updatedItems = items.map(item => {\n                return {\n                    value: defaultShouldSubscribe ? '1' : item.value,\n                    label: item.label,\n                }\n            });\n\n            return {\n                ...field,\n                options: {\n                    items: updatedItems,\n                }\n            }\n        }\n\n        return field;\n    });\n}\n\nconst CreateAccountForm: FunctionComponent<\n    CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\n> = ({ formFields, createAccountError, isCreatingAccount, isExecutingPaymentMethodCheckout, onCancel, isFloatingLabelEnabled, defaultShouldSubscribe }) => {\n    const { themeV2 } = useThemeContext();\n    const createAccountErrorMessage = useMemo(() => {\n        if (!createAccountError) {\n            return;\n        }\n\n        if (isRequestError(createAccountError) && createAccountError.status === 409) {\n            const splitMessage = createAccountError.message.split(':');\n\n            if (splitMessage.length > 1) {\n                return (\n                    <TranslatedString\n                        data={{ email: splitMessage[1].trim() }}\n                        id=\"customer.email_in_use_text\"\n                    />\n                );\n            }\n\n            return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\n        }\n\n        return createAccountError.message;\n    }, [createAccountError]);\n\n    const fields = transformFormFieldsData(formFields, defaultShouldSubscribe);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset>\n                {createAccountErrorMessage && (\n                    <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\n                )}\n                <div className=\"create-account-form\">\n                    {fields.map((field) => (\n                        <DynamicFormField\n                            autocomplete={field.name}\n                            extraClass={`dynamic-form-field--${field.name}`}\n                            field={field}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            key={field.id}\n                            parentFieldName={field.custom ? 'customFields' : undefined}\n                            themeV2={themeV2}\n                        />\n                    ))}\n                </div>\n            </Fieldset>\n\n            <div className=\"form-actions\">\n                <Button\n                    className={themeV2 ? 'body-bold' : ''}\n                    disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    id=\"checkout-customer-create\"\n                    isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    testId=\"customer-continue-create\"\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString id=\"customer.create_account_action\" />\n                </Button>\n\n                <a\n                    className={classNames('button optimizedCheckout-buttonSecondary',\n                        { 'body-bold': themeV2 })}\n                    data-test=\"customer-cancel-button\"\n                    href=\"#\"\n                    id=\"checkout-customer-cancel\"\n                    onClick={preventDefault(onCancel)}\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </a>\n            </div>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\n        handleSubmit: (values, { props: { onSubmit = noop } }) => {\n            onSubmit(values);\n        },\n        mapPropsToValues: ({ defaultShouldSubscribe, requiresMarketingConsent }) => ({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            customFields: {},\n            acceptsMarketingEmails: getAcceptsMarketingEmailsDefault(defaultShouldSubscribe, requiresMarketingConsent),\n        }),\n        validationSchema: ({\n            language,\n            formFields,\n        }: CreateAccountFormProps & WithLanguageProps) => {\n            const passwordRequirements = formFields.find(\n                ({ requirements }) => requirements,\n            )?.requirements;\n\n            if (!passwordRequirements) {\n                throw new Error('Password requirements missing');\n            }\n\n            const schema = getCreateCustomerValidationSchema({\n                language,\n                formFields,\n                passwordRequirements: getPasswordRequirements(passwordRequirements),\n            });\n\n            return schema;\n        },\n    })(CreateAccountForm),\n);\n","import React, { type FunctionComponent, type MouseEventHandler } from 'react';\n\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { useLocale } from './LocaleContext';\nimport { type TranslatedStringProps } from './TranslatedString';\n\nexport type TranslatedLinkProps = TranslatedStringProps & {\n    testId?: string;\n    onClick: MouseEventHandler;\n};\n\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\n    const { language } = useLocale();\n    const translatedString = language.translate(id, data);\n    const parsedString = parseAnchor(translatedString);\n\n    return parsedString.length ? (\n        <>\n            {parsedString[0]}\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\n                {parsedString[1]}\n            </a>\n            {parsedString[2]}\n        </>\n    ) : (\n        <>{translatedString}</>\n    );\n};\n\nexport default TranslatedLink;\n","import { type FieldProps } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface EmailFieldProps {\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string): void;\n}\n\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <TextInput\n                {...props.field}\n                autoComplete={props.field.name}\n                id={props.field.name}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                themeV2={themeV2}\n                type=\"email\"\n            />\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\n\n    return (\n        <FormField\n            input={renderInput}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            labelContent={labelContent}\n            name=\"email\"\n            onChange={onChange}\n            themeV2={themeV2}\n        />\n    );\n};\n\nexport default memo(EmailField);\n","import { type SignInEmail } from '@bigcommerce/checkout-sdk';\nimport { type FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo, useMemo } from 'react';\n\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    type WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { LoadingSpinner } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Form } from '../ui/form';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\n\nexport interface EmailLoginFormProps {\n    email?: string;\n    isOpen: boolean;\n    isSendingEmail?: boolean;\n    emailHasBeenRequested?: boolean;\n    sentEmail?: SignInEmail;\n    sentEmailError?: any;\n    isFloatingLabelEnabled?: boolean;\n    onRequestClose?(): void;\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\n}\n\nexport interface EmailLoginFormValues {\n    email: string;\n}\n\nconst EmailLoginForm: FunctionComponent<\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\n> = ({\n    email,\n    isOpen,\n    isSendingEmail = false,\n    emailHasBeenRequested,\n    onRequestClose = noop,\n    sentEmailError,\n    sentEmail,\n    submitForm,\n    isFloatingLabelEnabled,\n    values: { email: formEmail },\n}) => {\n    const modalHeaderStringId = useMemo(() => {\n        if (emailHasBeenRequested) {\n            if (sentEmailError) {\n                return 'common.error_heading';\n            }\n\n            return 'login_email.sent_header';\n        }\n\n        if (email) {\n            return 'login_email.header_with_email';\n        }\n\n        return 'login_email.header';\n    }, [emailHasBeenRequested, sentEmailError, email]);\n\n    const okButton = useMemo(\n        () => (\n            <div className=\"modal-footer\">\n                <Button onClick={onRequestClose}>\n                    <TranslatedString id=\"common.ok_action\" />\n                </Button>\n            </div>\n        ),\n        [onRequestClose],\n    );\n\n    const footer = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return okButton;\n        }\n\n        if (emailHasBeenRequested && !sentEmailError) {\n            if (isSendingEmail) {\n                return <LoadingSpinner isLoading />;\n            }\n\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\n                return okButton;\n            }\n\n            return (\n                <p>\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\n                </p>\n            );\n        }\n\n        return (\n            <div className=\"modal-footer\">\n                <Button\n                    className=\"optimizedCheckout-buttonSecondary\"\n                    onClick={onRequestClose}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </Button>\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\n                    <TranslatedString id=\"login_email.send\" />\n                </Button>\n            </div>\n        );\n    }, [\n        sentEmailError,\n        emailHasBeenRequested,\n        okButton,\n        submitForm,\n        isSendingEmail,\n        onRequestClose,\n        sentEmail,\n    ]);\n\n    const error = useMemo(() => {\n        if (!sentEmailError) {\n            return null;\n        }\n\n        const { status } = sentEmailError;\n\n        return (\n            <Alert type={AlertType.Error}>\n                {status === 429 ? (\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\n                ) : (\n                    <TranslatedString\n                        id={\n                            status === 404\n                                ? 'login_email.error_not_found'\n                                : 'login_email.error_server'\n                        }\n                    />\n                )}\n            </Alert>\n        );\n    }, [sentEmailError]);\n\n    const form = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return null;\n        }\n\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\n            const { expiry, sent_email } = sentEmail;\n\n            return (\n                <p>\n                    <TranslatedHtml\n                        data={{\n                            minutes: Math.round(expiry / 60),\n                        }}\n                        id={\n                            sent_email === 'sign_in'\n                                ? 'login_email.sent_text'\n                                : 'customer.reset_password_before_login_error'\n                        }\n                    />\n                </p>\n            );\n        }\n\n        if (emailHasBeenRequested && !sentEmail) {\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\n        }\n\n        return (\n            <>\n                <p>\n                    <TranslatedString id=\"login_email.text\" />\n                </p>\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n            </>\n        );\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\n\n    return (\n        <Modal\n            additionalBodyClassName=\"modal--withText\"\n            additionalModalClassName=\"modal--medium\"\n            header={\n                <ModalHeader>\n                    <TranslatedString id={modalHeaderStringId} />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={true}\n        >\n            <Form>\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\n                {error}\n                {form}\n                {footer}\n            </Form>\n        </Modal>\n    );\n};\n\nexport default withLanguage(\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n        }),\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\n            onSendLoginEmail(values);\n        },\n        validationSchema: ({ language }: WithLanguageProps) =>\n            getEmailValidationSchema({ language }),\n    })(memo(EmailLoginForm)),\n);\n","import { type FastlaneHostWindow } from './types';\n\nexport default function isFastlaneHostWindow(window: Window): window is FastlaneHostWindow {\n    /* eslint-disable no-prototype-builtins */\n    return window.hasOwnProperty('paypalFastlane') || window.hasOwnProperty('braintreeFastlane');\n}\n","import React, { type FunctionComponent, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isFastlaneHostWindow from './is-fastlane-window';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\nimport { type FastlanePrivacySettings } from './types';\n\nimport './PayPalFastlaneWatermark.scss';\n\nconst PayPalFastlaneWatermark: FunctionComponent = () => {\n    const { checkoutState } = useCheckout();\n    const { getPaymentMethod, getConfig } = checkoutState.data;\n    const providerWithCustomCheckout =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const paymentMethod =\n        !!providerWithCustomCheckout &&\n        isPayPalFastlaneMethod(providerWithCustomCheckout) &&\n        getPaymentMethod(providerWithCustomCheckout);\n\n    const shouldRenderFastlaneWatermark =\n        isFastlaneHostWindow(window) &&\n        !!paymentMethod &&\n        !!paymentMethod.initializationData?.isFastlanePrivacySettingEnabled;\n\n    useEffect(() => {\n        if (shouldRenderFastlaneWatermark && isFastlaneHostWindow(window)) {\n            const fastlane = isBraintreeFastlaneMethod(providerWithCustomCheckout)\n                ? window.braintreeFastlane\n                : window.paypalFastlane;\n\n            void fastlane\n                .FastlaneWatermarkComponent({\n                    includeAdditionalInfo: true,\n                })\n                .then((result: FastlanePrivacySettings) => {\n                    result.render('#paypalFastlaneWatermark');\n                });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (shouldRenderFastlaneWatermark) {\n        return (\n            <div className=\"paypalFastlaneWatermark-container\">\n                <div data-test=\"paypalFastlaneWatermark\" id=\"paypalFastlaneWatermark\" />\n            </div>\n        );\n    }\n\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <></>;\n};\n\nexport default PayPalFastlaneWatermark;\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { CheckboxFormField, Fieldset } from '../ui/form';\n\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <CheckboxFormField\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\n        name=\"privacyPolicy\"\n        testId=\"privacy-policy-checkbox\"\n        themeV2={themeV2}\n    />\n);\n\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\n        <PrivacyPolicyCheckboxFieldLink themeV2={themeV2} url={url} />\n    </Fieldset>\n);\n\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string, themeV2?: boolean }> = ({ url, themeV2 }) => (\n    <p className={themeV2 ? 'body-regular' : ''}>\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\n    </p>\n);\n\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\n    url,\n    isExpressPrivacyPolicy,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    if (isExpressPrivacyPolicy) {\n        return <PrivacyPolicyAutoConsent themeV2={themeV2} url={url} />;\n    }\n\n    return <PrivacyPolicyFieldset themeV2={themeV2} url={url} />;\n};\n\nexport default memo(PrivacyPolicyField);\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { boolean, type BooleanSchema, object, type ObjectSchema } from 'yup';\n\nexport interface PrivacyPolicyValidatonSchemaProps {\n    isRequired: boolean;\n    language: LanguageService;\n}\n\nexport default function getPrivacyPolicyValidationSchema({\n    isRequired,\n    language,\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\n    const schemaFields: {\n        privacyPolicy?: BooleanSchema;\n    } = {};\n\n    if (isRequired) {\n        schemaFields.privacyPolicy = boolean().oneOf(\n            [true],\n            language.translate('privacy_policy.required_error'),\n        );\n    }\n\n    return object(schemaFields);\n}\n","import { type FieldProps } from 'formik';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Input, Label } from '../ui/form';\n\nexport type SubscribeFieldProps = FieldProps<boolean> & {\n    requiresMarketingConsent: boolean;\n};\n\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\n    field,\n    requiresMarketingConsent,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <>\n            <Input\n                {...field}\n                checked={field.value}\n                className=\"form-checkbox\"\n                id={field.name}\n                testId=\"should-subscribe-checkbox\"\n                type=\"checkbox\"\n                value={String(field.value)}\n            />\n\n            <Label\n                additionalClassName={themeV2 ? 'body-regular' : ''}\n                htmlFor={field.name}\n            >\n                <TranslatedHtml\n                    id={\n                        requiresMarketingConsent\n                            ? 'customer.guest_marketing_consent'\n                            : 'customer.guest_subscribe_to_newsletter_text'\n                    }\n                />\n            </Label>\n        </>\n    );\n}\n\nexport default memo(SubscribeField);\n","export class SubscribeSessionStorage {\n    static key = 'shouldSubscribe';\n\n    static setSubscribeStatus(shouldSubscribe: boolean) {\n        sessionStorage.setItem(this.key, `${shouldSubscribe}`)\n    }\n\n    static getSubscribeStatus(): boolean {\n        const value = sessionStorage.getItem(this.key);\n\n        return value === 'true';\n    }\n\n    static removeSubscribeStatus() {\n        sessionStorage.removeItem(this.key);\n    }\n}\n","import classNames from 'classnames';\nimport { type FieldProps, type FormikProps, withFormik } from 'formik';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback, useEffect } from 'react';\nimport { object, string } from 'yup';\n\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { PayPalFastlaneWatermark } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport EmailField from './EmailField';\nimport SubscribeField from './SubscribeField';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nfunction getShouldSubscribeValue(requiresMarketingConsent: boolean, defaultShouldSubscribe: boolean) {\n    if (SubscribeSessionStorage.getSubscribeStatus()) {\n        return true;\n    }\n\n    return requiresMarketingConsent ? false : defaultShouldSubscribe\n}\n\nexport interface GuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    continueAsGuestButtonLabelId: string;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    isLoading: boolean;\n    privacyPolicyUrl?: string;\n    isExpressPrivacyPolicy: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldShowEmailWatermark: boolean;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    onShowLogin(): void;\n}\n\nexport interface GuestFormValues {\n    email: string;\n    shouldSubscribe: boolean;\n}\n\nconst GuestForm: FunctionComponent<\n    GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\n> = ({\n    canSubscribe,\n    checkoutButtons,\n    continueAsGuestButtonLabelId,\n    defaultShouldSubscribe,\n    isLoading,\n    onChangeEmail,\n    onShowLogin,\n    privacyPolicyUrl,\n    requiresMarketingConsent,\n    isExpressPrivacyPolicy,\n    isFloatingLabelEnabled,\n    shouldShowEmailWatermark,\n    setFieldValue,\n}) => {\n    const {\n        checkoutState: {\n            data: { getConfig }\n        }\n    } = useCheckout();\n    const { themeV2 } = useThemeContext();\n\n    const config = getConfig();\n\n    const renderField = useCallback(\n        (fieldProps: FieldProps<boolean>) => (\n            <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\n        ),\n        [requiresMarketingConsent],\n    );\n\n    useEffect(() => {\n        void setFieldValue(\n            'shouldSubscribe',\n            getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            );\n    }, [requiresMarketingConsent, defaultShouldSubscribe]);\n\n    if (!config) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            shouldRedirectToStorefrontForAuth,\n        },\n        links: {\n            checkoutLink,\n            loginLink,\n        }\n    } = config;\n\n    const handleLogin: () => void = () => {\n        if (shouldRedirectToStorefrontForAuth) {\n            window.location.assign(`${loginLink}?redirectTo=${checkoutLink}`);\n\n            return;\n        }\n\n        return onShowLogin();\n    }\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-guest\"\n            testId=\"checkout-customer-guest\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.guest_customer_text\" />\n                    </Legend>\n                }\n            >\n                <div className=\"customerEmail-container\">\n                    <div className=\"customerEmail-body\">\n                        <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail}/>\n\n                        {shouldShowEmailWatermark && <PayPalFastlaneWatermark />}\n\n                        {(canSubscribe || requiresMarketingConsent) && (\n                            <BasicFormField name=\"shouldSubscribe\" render={renderField} />\n                        )}\n                    </div>\n\n                    <div\n                        className={classNames('form-actions customerEmail-action', {\n                            'customerEmail-floating--enabled': isFloatingLabelEnabled,\n                        })}\n                    >\n                        <Button\n                            className={classNames('customerEmail-button', {\n                                'body-bold': themeV2,\n                            })}\n                            id=\"checkout-customer-continue\"\n                            isLoading={isLoading}\n                            testId=\"customer-continue-as-guest-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </Button>\n                    </div>\n                </div>\n\n                {privacyPolicyUrl && (\n                    <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                )}\n\n                {!isLoading && (\n                    <p className={classNames('customer-login-link',\n                        { 'body-regular': themeV2 })}\n                    >\n                        <TranslatedString id=\"customer.login_text\" />{' '}\n                        <a\n                            data-test=\"customer-continue-button\"\n                            id=\"checkout-customer-login\"\n                            onClick={handleLogin}\n                            role=\"button\"\n                            tabIndex={0}\n                        >\n                            <TranslatedString id=\"customer.login_action\" />\n                        </a>\n                    </p>\n                )}\n\n                {checkoutButtons}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\n        mapPropsToValues: ({\n            email = '',\n            defaultShouldSubscribe = false,\n            requiresMarketingConsent,\n        }) => ({\n            email,\n            shouldSubscribe: getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            privacyPolicy: false,\n        }),\n        handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n            onContinueAsGuest(values);\n        },\n        validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: GuestFormProps & WithLanguageProps) => {\n            const email = string()\n                .email(language.translate('customer.email_invalid_error'))\n                .max(256)\n                .required(language.translate('customer.email_required_error'));\n\n            const baseSchema = object({ email });\n\n            if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                return baseSchema.concat(\n                    getPrivacyPolicyValidationSchema({\n                        isRequired: !!privacyPolicyUrl,\n                        language,\n                    }),\n                );\n            }\n\n            return baseSchema;\n        },\n    })(memo(GuestForm)),\n);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEye: FunctionComponent = () => (\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEye);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEyeSlash: FunctionComponent = () => (\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEyeSlash);\n","import { type FieldProps } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { FormField, TextInput } from '../ui/form';\nimport Label from '../ui/form/Label';\nimport { IconEye, IconEyeSlash } from '../ui/icon';\nimport { Toggle } from '../ui/toggle';\n\ninterface WithFloatingLabel {\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\n    const { themeV2 } = useThemeContext();\n\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <Toggle openByDefault={false}>\n                {({ isOpen, toggle }) => (\n                    <div className=\"form-field-password\">\n                        <TextInput\n                            {...props.field}\n                            additionalClassName=\"form-input--withIcon\"\n                            id={props.field.name}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            themeV2={themeV2}\n                            type={isOpen ? 'text' : 'password'}\n                        />\n                        {isFloatingLabelEnabled && (\n                            <Label\n                                additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                                htmlFor={props.field.name}\n                                id={`${props.field.name}-label`}\n                                isFloatingLabelEnabled={true}\n                            >\n                                <TranslatedString id=\"customer.password_label\" />\n                            </Label>\n                        )}\n                        <a\n                            className=\"form-toggle-password form-input-icon\"\n                            href=\"#\"\n                            onClick={toggle}\n                        >\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\n                        </a>\n                    </div>\n                )}\n            </Toggle>\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\n\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\n};\n\nexport default memo(PasswordField);\n","import React from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { Button, ButtonVariant, useThemeContext } from '@bigcommerce/checkout/ui';\n\ninterface RedirectToStorefrontLoginProps {\n    isDisabled: boolean;\n    isLoading: boolean;\n}\n\nexport const RedirectToStorefrontLogin: React.FC<RedirectToStorefrontLoginProps> = ({\n    isDisabled,\n    isLoading,\n}) => {\n    const { themeV2 } = useThemeContext();\n    const { checkoutState: { data: { getConfig } } } = useCheckout();\n\n    const config = getConfig();\n\n    if (!config) {\n        return null;\n    }\n\n    const { checkoutLink, loginLink } = config.links;\n\n    const handleRedirect = () => {\n        return window.location.assign(`${loginLink}?redirectTo=${checkoutLink}`);\n    }\n\n    return (\n        <Button\n            className={themeV2 ? 'body-bold' : ''}\n            disabled={isDisabled}\n            id=\"checkout-customer-continue\"\n            isLoading={isLoading}\n            onClick={handleRedirect}\n            testId=\"customer-continue-button\"\n            variant={ButtonVariant.Primary}\n        >\n            <TranslatedString id=\"customer.sign_in_action\" />\n        </Button>\n    );\n};\n","import classNames from 'classnames';\nimport { type FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    type WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport CustomerViewType from './CustomerViewType';\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport mapErrorMessage from './mapErrorMessage';\nimport PasswordField from './PasswordField';\nimport { RedirectToStorefrontLogin } from './RedirectToStorefrontLogin';\n\nexport interface LoginFormProps {\n    isBuyNowCart: boolean;\n    canCancel?: boolean;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    forgotPasswordUrl: string;\n    isSignInEmailEnabled?: boolean;\n    isSendingSignInEmail?: boolean;\n    isSigningIn?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    signInError?: Error;\n    signInEmailError?: Error;\n    viewType?: Omit<CustomerViewType, 'guest'>;\n    passwordlessLogin?: boolean;\n    shouldShowCreateAccountLink?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldRedirectToStorefrontForAuth: boolean;\n    onCancel?(): void;\n    onCreateAccount?(): void;\n    onChangeEmail?(email: string): void;\n    onSignIn(data: LoginFormValues): void;\n    onSendLoginEmail?(): void;\n    onContinueAsGuest?(): void;\n}\n\nexport interface LoginFormValues {\n    email: string;\n    password: string;\n}\n\nconst LoginForm: FunctionComponent<\n    LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\n> = ({\n    isBuyNowCart,\n    canCancel,\n    continueAsGuestButtonLabelId,\n    forgotPasswordUrl,\n    email,\n    isSignInEmailEnabled,\n    isSigningIn,\n    isExecutingPaymentMethodCheckout,\n    language,\n    onCancel = noop,\n    onChangeEmail,\n    onContinueAsGuest,\n    onCreateAccount = noop,\n    onSendLoginEmail = noop,\n    signInError,\n    shouldShowCreateAccountLink,\n    isFloatingLabelEnabled,\n    shouldRedirectToStorefrontForAuth,\n    viewType = CustomerViewType.Login,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    const changeEmailLink = useCallback(() => {\n        if (!email) {\n            return null;\n        }\n\n        return (\n            <p className=\"optimizedCheckout-contentSecondary\">\n                <TranslatedLink\n                    data={{ email }}\n                    id=\"customer.guest_could_login_change_email\"\n                    onClick={onCancel}\n                    testId=\"change-email\"\n                />\n            </p>\n        );\n    }, [email, onCancel]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.returning_customer_text\" />\n                    </Legend>\n                }\n            >\n                {signInError && (\n                    <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\n                        {mapErrorMessage(signInError, (key) => language.translate(key))}\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.SuggestedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.CancellableEnforcedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.EnforcedLogin && (\n                    <Alert type={AlertType.Error}>\n                        <TranslatedLink\n                            id=\"customer.guest_temporary_disabled\"\n                            onClick={onCreateAccount}\n                        />\n                    </Alert>\n                )}\n\n                {(viewType === CustomerViewType.Login ||\n                    viewType === CustomerViewType.EnforcedLogin) && (\n                    <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n                )}\n\n                {!shouldRedirectToStorefrontForAuth && <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />}\n\n                <p className={classNames('form-legend-container', { 'body-cta': themeV2 })}>\n                    <span>\n                        { isSignInEmailEnabled && !isBuyNowCart &&\n                            <TranslatedLink\n                                id=\"login_email.link\"\n                                onClick={ onSendLoginEmail }\n                                testId=\"customer-signin-link\"\n                            />\n                        }\n                        { !isSignInEmailEnabled && !shouldRedirectToStorefrontForAuth &&\n                            <a\n                                data-test=\"forgot-password-link\"\n                                href={ forgotPasswordUrl }\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <TranslatedString id=\"customer.forgot_password_action\" />\n                            </a>\n                        }\n                    </span>\n                    { viewType === CustomerViewType.Login && shouldShowCreateAccountLink &&\n                        <span>\n                            <TranslatedLink\n                                id=\"customer.create_account_to_continue_text\"\n                                onClick={onCreateAccount}\n                            />\n                        </span>\n                    }\n                </p>\n\n                <div className=\"form-actions\">\n                    {shouldRedirectToStorefrontForAuth ?\n                        <RedirectToStorefrontLogin\n                            isDisabled={Boolean(isSigningIn || isExecutingPaymentMethodCheckout)}\n                            isLoading={Boolean(isSigningIn || isExecutingPaymentMethodCheckout)}\n                        />\n                        :\n                        <Button\n                            className={themeV2 ? 'body-bold' : ''}\n                            disabled={isSigningIn || isExecutingPaymentMethodCheckout}\n                            id=\"checkout-customer-continue\"\n                            isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\n                            testId=\"customer-continue-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                    >\n                        <TranslatedString id=\"customer.sign_in_action\" />\n                    </Button>}\n\n                    {viewType === CustomerViewType.SuggestedLogin && (\n                        <a\n                            className={classNames('button optimizedCheckout-buttonSecondary',\n                                { 'body-bold': themeV2 })}\n                            data-test=\"customer-guest-continue\"\n                            href=\"#\"\n                            id=\"checkout-guest-continue\"\n                            onClick={preventDefault(onContinueAsGuest)}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </a>\n                    )}\n\n                    {canCancel &&\n                        viewType !== CustomerViewType.EnforcedLogin &&\n                        viewType !== CustomerViewType.SuggestedLogin && (\n                            <a\n                            className={classNames('button optimizedCheckout-buttonSecondary',\n                                { 'body-bold': themeV2 })}\n                                data-test=\"customer-cancel-button\"\n                                href=\"#\"\n                                id=\"checkout-customer-cancel\"\n                                onClick={preventDefault(onCancel)}\n                            >\n                                <TranslatedString\n                                    id={\n                                        viewType === CustomerViewType.CancellableEnforcedLogin\n                                            ? 'login_email.use_another_email'\n                                            : 'common.cancel_action'\n                                    }\n                                />\n                            </a>\n                        )}\n                </div>\n\n                {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n            password: '',\n        }),\n        handleSubmit: (values, { props: { onSignIn } }) => {\n            onSignIn(values);\n        },\n        validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\n            getEmailValidationSchema({ language }).concat(\n                object({\n                    password: string().required(\n                        language.translate('customer.password_required_error'),\n                    ),\n                }),\n            ),\n    })(memo(LoginForm)),\n);\n","export default function mapErrorMessage(\n    error: any, // TODO: Export `RequestError`\n    translate: (key: string) => string,\n): string {\n    const type = error.body && error.body.type;\n\n    switch (type) {\n        case 'throttled_login':\n            return translate('customer.sign_in_throttled_error');\n\n        case 'reset_password_before_login':\n            return translate('customer.reset_password_before_login_error');\n\n        case 'empty_cart':\n            return translate('cart.empty_cart_error_message');\n\n        default:\n            return translate('customer.sign_in_error');\n    }\n}\n","import { type CustomerInitializeOptions, type CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { type FieldProps, type FormikProps, withFormik } from 'formik';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback, useEffect, useState } from 'react';\nimport { object } from 'yup';\n\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport type CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport { type GuestFormValues } from './GuestForm';\nimport SubscribeField from './SubscribeField';\n\nexport interface StripeGuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    step: CheckoutStepStatus;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    isLoading: boolean;\n    isExpressPrivacyPolicy: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onShowLogin(): void;\n}\n\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\n    continueAsGuestButtonLabelId,\n    isLoading,\n    initialize,\n    isExpressPrivacyPolicy,\n    deinitialize,\n    onChangeEmail,\n    onShowLogin,\n    onContinueAsGuest,\n    canSubscribe,\n    checkoutButtons,\n    defaultShouldSubscribe,\n    requiresMarketingConsent,\n    privacyPolicyUrl,\n    step,\n    status,\n    setFieldValue,\n}) => {\n\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\n    const [emailValue, setEmailValue] = useState('');\n    const [authentication, setAuthentication] = useState(false);\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\n    const [isNewAuth, setIsNewAuth] = useState(false);\n    const handleOnClickSubmitButton = () => {\n        onContinueAsGuest({\n            email: emailValue,\n            shouldSubscribe: !!status?.shouldSubscribe,\n        });\n    };\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\n        setFieldValue('email', email);\n        onChangeEmail(email);\n        setEmailValue(email);\n        setContinueAsAGuestButton(!email);\n        setAuthentication(authenticated);\n\n        if(!authenticated){\n            setIsNewAuth(true);\n        }\n    }, [setContinueAsAGuestButton, onChangeEmail]);\n\n    useEffect(() => {\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\n            handleOnClickSubmitButton();\n        }\n    }, [emailValue, authentication, isNewAuth]);\n\n    useEffect(() => {\n        if (status?.valSuccess) {\n            handleOnClickSubmitButton();\n        }\n    }, [status?.valSuccess]);\n\n    const handleLoading = useCallback((mounted: boolean) => {\n        setIsStripeLoading(mounted);\n    }, []);\n\n    const stripeDeinitialize = () => {\n        deinitialize({\n            methodId: 'stripeupe',\n        });\n    };\n\n    const stripeInitialize = () => {\n        initialize( {\n            methodId: 'stripeupe',\n            stripeupe: {\n                container: 'stripeupeLink',\n                onEmailChange: setEmailCallback,\n                isLoading: handleLoading,\n                getStyles: getStripeStyles,\n                gatewayId: 'stripeupe',\n                methodId: 'card',\n            },\n        })};\n\n    useEffect(() => {\n        stripeInitialize();\n\n        return () => stripeDeinitialize();\n    }, []);\n\n    useEffect(() => {\n        void setFieldValue(\n            'shouldSubscribe',\n            requiresMarketingConsent ? false : defaultShouldSubscribe,\n        );\n    }, [requiresMarketingConsent, defaultShouldSubscribe]);\n\n    const getStylesFromElement = (\n        id: string,\n        properties: string[]) => {\n        const parentContainer = document.getElementById(id);\n\n        if (parentContainer) {\n            return getAppliedStyles(parentContainer, properties);\n        }\n\n            return undefined;\n\n    };\n\n    const containerId = 'stripe-card-component-field';\n\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\n\n        return formLabel && formInput && formError ? {\n            labelText: formLabel.color,\n            fieldText: formInput.color,\n            fieldPlaceholderText: formInput.color,\n            fieldErrorText: formError.color,\n            fieldBackground: formInput['background-color'],\n            fieldInnerShadow: formInput['box-shadow'],\n            fieldBorder: formInput['border-color'],\n        } : undefined;\n    }, [])\n\n    const renderCheckoutThemeStylesForStripeUPE = () => {\n        return (\n            <div\n                className=\"optimizedCheckout-form-input\"\n                id={ `${containerId}--input` }\n            >\n                <div\n                    className=\"form-field--error\"\n                >\n                    <div\n                        className=\"optimizedCheckout-form-label\"\n                        id={ `${containerId}--error` }\n                    />\n                </div>\n                <div\n                    className=\"optimizedCheckout-form-label\"\n                    id={ `${containerId}--label` }\n                />\n            </div>\n        );\n    };\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\n\n    return (\n        <>\n            <Form\n                className=\"checkout-form\"\n                id=\"checkout-customer-guest\"\n                testId=\"checkout-customer-guest\"\n            >\n                <div className=\"checkout-form\" style={ { display: isStripeLoading ? 'none' : undefined } }>\n                    <Fieldset\n                        legend={ !authentication &&\n                            <Legend hidden>\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\n                            </Legend>\n                        }\n                    >\n                        <div className=\"customerEmail-container\">\n                            <div className=\"customerEmail-body\">\n                                <div id=\"stripeupeLink\"/>\n                                <br/>\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\n                                    name=\"shouldSubscribe\"\n                                    render={ renderField }\n                                /> }\n                            </div>\n\n                            <div className=\"form-actions customerEmail-action\">\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\n                                    className=\"stripeCustomerEmail-button\"\n                                    disabled={ continueAsAGuestButton }\n                                    id=\"stripe-checkout-customer-continue\"\n                                    isLoading={ isLoading }\n                                    testId=\"stripe-customer-continue-as-guest-button\"\n                                    type=\"submit\"\n                                    variant={ ButtonVariant.Primary }\n                                >\n                                    <TranslatedString id={ buttonText }/>\n                                </Button> }\n                            </div>\n                        </div>\n\n                        {privacyPolicyUrl && (\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                        )}\n\n                        {\n                            !isLoading && <p>\n                                <TranslatedString id=\"customer.login_text\"/>\n                                { ' ' }\n                                <a\n                                    data-test=\"customer-continue-button\"\n                                    id=\"checkout-customer-login\"\n                                    onClick={ onShowLogin }\n                                    role=\"button\"\n                                    tabIndex={0}\n                                >\n                                    <TranslatedString id=\"customer.login_action\"/>\n                                </a>\n                            </p>\n                        }\n                        { !authentication && checkoutButtons }\n                    </Fieldset>\n                </div>\n                { renderCheckoutThemeStylesForStripeUPE() }\n            </Form>\n        </>\n    );\n};\n\nexport default withLanguage(\n    withFormik<StripeGuestFormProps, GuestFormValues>({\n            mapPropsToValues: ({\n                email = '',\n                defaultShouldSubscribe = false,\n                requiresMarketingConsent,\n            }) => ({\n                email,\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n                privacyPolicy: false,\n            }),\n            handleSubmit: ( values, { setStatus }) => {\n                setStatus({\n                    valSuccess: true,\n                    shouldSubscribe: values.shouldSubscribe,\n                  });\n            },\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                    return getPrivacyPolicyValidationSchema({\n                            isRequired: !!privacyPolicyUrl,\n                            language,\n                        })\n                }\n\n                return object({});\n            },\n        })(memo(StripeGuestForm))\n)\n\n","import {\n    type CheckoutPaymentMethodExecutedOptions,\n    type CheckoutSelectors,\n    type CustomerAccountRequestBody,\n    type CustomerCredentials,\n    type CustomerInitializeOptions,\n    type CustomerRequestOptions,\n    type ExecutePaymentMethodCheckoutOptions,\n    type FormField,\n    type GuestCredentials,\n    type SignInEmail,\n    type StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { Component, type ReactNode } from 'react';\n\nimport { type AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneMethod } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport type CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { isErrorWithType } from '../common/error';\nimport { isFloatingLabelEnabled } from '../common/utility';\nimport getProviderWithCustomCheckout from '../payment/getProviderWithCustomCheckout';\nimport { PaymentMethodId } from '../payment/paymentMethod';\n\nimport CheckoutButtonList from './CheckoutButtonList';\nimport CreateAccountForm from './CreateAccountForm';\nimport CustomerViewType from './CustomerViewType';\nimport EmailLoginForm, { type EmailLoginFormValues } from './EmailLoginForm';\nimport { type CreateAccountFormValues } from './getCreateCustomerValidationSchema';\nimport GuestForm, { type GuestFormValues } from './GuestForm';\nimport LoginForm from './LoginForm';\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\nimport StripeGuestForm from './StripeGuestForm';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nexport interface CustomerProps {\n    viewType: CustomerViewType;\n    step: CheckoutStepStatus;\n    isEmbedded?: boolean;\n    isSubscribed: boolean;\n    isWalletButtonsOnTop: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    onChangeViewType?(viewType: CustomerViewType): void;\n    onAccountCreated?(): void;\n    onContinueAsGuest?(): void;\n    onContinueAsGuestError?(error: Error): void;\n    onReady?(): void;\n    onSubscribeToNewsletter(subscribe: boolean): void;\n    onSignIn?(): void;\n    onSignInError?(error: Error): void;\n    onUnhandledError?(error: Error): void;\n    onWalletButtonClick?(methodName: string): void;\n}\n\nexport interface WithCheckoutCustomerProps {\n    canSubscribe: boolean;\n    customerAccountFields: FormField[];\n    checkoutButtonIds: string[];\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    firstName?: string;\n    forgotPasswordUrl: string;\n    isContinuingAsGuest: boolean;\n    isCreatingAccount: boolean;\n    isExecutingPaymentMethodCheckout: boolean;\n    isGuestEnabled: boolean;\n    hasBillingId: boolean;\n    isInitializing: boolean;\n    isSendingSignInEmail: boolean;\n    isSignInEmailEnabled: boolean;\n    isSigningIn: boolean;\n    privacyPolicyUrl?: string;\n    providerWithCustomCheckout?: string;\n    requiresMarketingConsent: boolean;\n    signInEmail?: SignInEmail;\n    signInEmailError?: Error;\n    isBuyNowCart: boolean;\n    isAccountCreationEnabled: boolean;\n    isPaymentDataRequired: boolean;\n    createAccountError?: Error;\n    signInError?: Error;\n    isFloatingLabelEnabled?: boolean;\n    isExpressPrivacyPolicy: boolean;\n    shouldRedirectToStorefrontForAuth: boolean;\n    clearError(error: Error): Promise<CheckoutSelectors>;\n    continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\n    signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\n    createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n    shouldRenderStripeForm: boolean;\n}\n\nexport interface CustomerState {\n    isEmailLoginFormOpen: boolean;\n    isReady: boolean;\n    hasRequestedLoginEmail: boolean;\n}\n\nclass Customer extends Component<CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps, CustomerState> {\n    state: CustomerState = {\n        isEmailLoginFormOpen: false,\n        isReady: false,\n        hasRequestedLoginEmail: false,\n    };\n\n    private draftEmail?: string;\n\n    async componentDidMount(): Promise<void> {\n        const {\n            initializeCustomer,\n            email,\n            onReady = noop,\n            onUnhandledError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        this.draftEmail = email;\n\n        try {\n            if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n                await initializeCustomer({ methodId: providerWithCustomCheckout });\n            }\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        this.setState({ isReady: true });\n\n        onReady();\n    }\n\n    async componentWillUnmount(): Promise<void> {\n        const {\n            deinitializeCustomer = noop,\n            providerWithCustomCheckout,\n            onUnhandledError = noop,\n        } = this.props;\n\n        try {\n            await deinitializeCustomer({ methodId: providerWithCustomCheckout });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { viewType } = this.props;\n        const { isEmailLoginFormOpen, isReady } = this.state;\n        const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\n        const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\n        const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\n\n        if (!isReady) {\n            return null;\n        }\n\n        return (\n            <>\n                {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\n                {shouldRenderLoginForm && this.renderLoginForm()}\n                {shouldRenderGuestForm && this.renderGuestForm()}\n                {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\n            </>\n        );\n    }\n\n    private renderGuestForm(): ReactNode {\n        const {\n            canSubscribe,\n            checkEmbeddedSupport,\n            checkoutButtonIds,\n            deinitializeCustomer,\n            email,\n            initializeCustomer,\n            isContinuingAsGuest = false,\n            isExecutingPaymentMethodCheckout = false,\n            isInitializing = false,\n            isSubscribed,\n            isWalletButtonsOnTop,\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            onUnhandledError = noop,\n            onWalletButtonClick = noop,\n            step,\n            isFloatingLabelEnabled,\n            isExpressPrivacyPolicy,\n            isPaymentDataRequired,\n            shouldRenderStripeForm,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        const checkoutButtons = isWalletButtonsOnTop || !isPaymentDataRequired\n          ? null\n          : <CheckoutButtonList\n            checkEmbeddedSupport={checkEmbeddedSupport}\n            deinitialize={deinitializeCustomer}\n            initialize={initializeCustomer}\n            isInitializing={isInitializing}\n            methodIds={checkoutButtonIds}\n            onClick={onWalletButtonClick}\n            onError={onUnhandledError}\n          />;\n\n        const isLoadingGuestForm = isContinuingAsGuest || isExecutingPaymentMethodCheckout;\n\n        return (\n            shouldRenderStripeForm ?\n                <StripeGuestForm\n                    canSubscribe={canSubscribe}\n                    checkoutButtons={checkoutButtons}\n                    continueAsGuestButtonLabelId=\"customer.continue\"\n                    defaultShouldSubscribe={isSubscribed}\n                    deinitialize={deinitializeCustomer}\n                    email={this.draftEmail || email}\n                    initialize={initializeCustomer}\n                    isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                    isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\n                    onChangeEmail={this.handleChangeEmail}\n                    onContinueAsGuest={this.handleContinueAsGuest}\n                    onShowLogin={this.handleShowLogin}\n                    privacyPolicyUrl={privacyPolicyUrl}\n                    requiresMarketingConsent={requiresMarketingConsent}\n                    step={step}\n                />\n                :\n            <GuestForm\n                canSubscribe={canSubscribe}\n                checkoutButtons={checkoutButtons}\n                continueAsGuestButtonLabelId=\"customer.continue\"\n                defaultShouldSubscribe={isSubscribed}\n                email={this.draftEmail || email}\n                isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isLoading={isLoadingGuestForm}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.handleContinueAsGuest}\n                onShowLogin={this.handleShowLogin}\n                privacyPolicyUrl={privacyPolicyUrl}\n                requiresMarketingConsent={requiresMarketingConsent}\n                shouldShowEmailWatermark={isPayPalFastlaneMethod(providerWithCustomCheckout)}\n            />\n        );\n    }\n\n    private renderEmailLoginLinkForm(): ReactNode {\n        const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\n\n        const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\n            this.props;\n\n        return (\n            <EmailLoginForm\n                email={this.draftEmail}\n                emailHasBeenRequested={hasRequestedLoginEmail}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isOpen={isEmailLoginFormOpen}\n                isSendingEmail={isSendingSignInEmail}\n                onRequestClose={this.closeEmailLoginFormForm}\n                onSendLoginEmail={this.handleSendLoginEmail}\n                sentEmail={signInEmail}\n                sentEmailError={signInEmailError}\n            />\n        );\n    }\n\n    private closeEmailLoginFormForm: () => void = () => {\n        this.setState({\n            isEmailLoginFormOpen: false,\n            hasRequestedLoginEmail: false,\n        });\n    };\n\n    private renderCreateAccountForm(): ReactNode {\n        const {\n            customerAccountFields,\n            isExecutingPaymentMethodCheckout,\n            isCreatingAccount,\n            createAccountError,\n            requiresMarketingConsent,\n            isFloatingLabelEnabled,\n            defaultShouldSubscribe,\n        } = this.props;\n\n        return (\n            <CreateAccountForm\n                createAccountError={createAccountError}\n                defaultShouldSubscribe={defaultShouldSubscribe}\n                formFields={customerAccountFields}\n                isCreatingAccount={isCreatingAccount}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                onCancel={this.handleCancelCreateAccount}\n                onSubmit={this.handleCreateAccount}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderLoginForm(): ReactNode {\n        const {\n            isBuyNowCart,\n            isEmbedded,\n            email,\n            forgotPasswordUrl,\n            isSignInEmailEnabled,\n            isGuestEnabled,\n            isSendingSignInEmail,\n            isSigningIn,\n            isExecutingPaymentMethodCheckout,\n            isAccountCreationEnabled,\n            signInError,\n            isFloatingLabelEnabled,\n            viewType,\n            shouldRedirectToStorefrontForAuth,\n        } = this.props;\n\n        return (\n            <LoginForm\n                canCancel={isGuestEnabled}\n                continueAsGuestButtonLabelId=\"customer.continue_as_guest_action\"\n                email={this.draftEmail || email}\n                forgotPasswordUrl={forgotPasswordUrl}\n                isBuyNowCart={isBuyNowCart}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isSendingSignInEmail={isSendingSignInEmail}\n                isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\n                isSigningIn={isSigningIn}\n                onCancel={this.handleCancelSignIn}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\n                onCreateAccount={this.showCreateAccount}\n                onSendLoginEmail={this.handleEmailLoginClicked}\n                onSignIn={this.handleSignIn}\n                shouldRedirectToStorefrontForAuth={shouldRedirectToStorefrontForAuth}\n                shouldShowCreateAccountLink={isAccountCreationEnabled}\n                signInError={signInError}\n                viewType={viewType}\n            />\n        );\n    }\n\n    private handleEmailLoginClicked: () => void = async () => {\n        const { viewType } = this.props;\n\n        try {\n            if (viewType !== CustomerViewType.Login && this.draftEmail) {\n                await this.handleSendLoginEmail({ email: this.draftEmail });\n            }\n        } finally {\n            this.setState({\n                isEmailLoginFormOpen: true,\n            });\n        }\n    };\n\n    private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\n        values,\n    ) => {\n        const { sendLoginEmail } = this.props;\n\n        try {\n            await sendLoginEmail(values);\n        } catch (error) {\n        // Need to write catch block since one test covers the case when `sendLoginEmail` fails\n        } finally {\n            this.setState({\n                hasRequestedLoginEmail: true,\n            });\n        }\n    };\n\n    private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\n        formValues,\n    ) => {\n        const {\n            canSubscribe,\n            continueAsGuest,\n            hasBillingId,\n            defaultShouldSubscribe,\n            onChangeViewType = noop,\n            onContinueAsGuest = noop,\n            onContinueAsGuestError = noop,\n            onSubscribeToNewsletter,\n        } = this.props;\n\n        const email = formValues.email.trim();\n        const updateSubscriptionWhenUnchecked =\n            hasBillingId || defaultShouldSubscribe ? false : undefined;\n\n        try {\n            const { data } = await continueAsGuest({\n                email,\n                acceptsMarketingNewsletter:\n                    canSubscribe && formValues.shouldSubscribe\n                        ? true\n                        : updateSubscriptionWhenUnchecked,\n                acceptsAbandonedCartEmails: formValues.shouldSubscribe\n                    ? true\n                    : updateSubscriptionWhenUnchecked,\n            });\n\n            onSubscribeToNewsletter(formValues.shouldSubscribe);\n\n            SubscribeSessionStorage.setSubscribeStatus(formValues.shouldSubscribe);\n\n            const customer = data.getCustomer();\n\n            const paymentProviderCustomer = data.getPaymentProviderCustomer();\n\n            if (customer && customer.shouldEncourageSignIn && customer.isGuest && !paymentProviderCustomer?.stripeLinkAuthenticationState) {\n                return onChangeViewType(CustomerViewType.SuggestedLogin);\n            }\n\n            await this.executePaymentMethodCheckoutOrContinue();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            if (\n                isErrorWithType(error) &&\n                (error.type === 'update_subscriptions' ||\n                    error.type === 'payment_method_client_invalid')\n            ) {\n                this.draftEmail = undefined;\n\n                onContinueAsGuest();\n            }\n\n            if (isErrorWithType(error) && error.type === 'empty_cart') {\n                return onContinueAsGuestError(error);\n            }\n\n            if (isErrorWithType(error) && error.status === 429) {\n                return onChangeViewType(CustomerViewType.EnforcedLogin);\n            }\n\n            if (isErrorWithType(error) && error.status === 403) {\n                return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\n            }\n\n            onContinueAsGuestError(error);\n        }\n    };\n\n    private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\n        credentials,\n    ) => {\n        const {\n            signIn,\n            onSignIn = noop,\n            onSignInError = noop,\n        } = this.props;\n\n        try {\n            await signIn(credentials);\n\n            onSignIn();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            onSignInError(error);\n        }\n    };\n\n    private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\n        const {\n            createAccount = noop,\n            onAccountCreated = noop,\n        } = this.props;\n\n        await createAccount(mapCreateAccountFromFormValues(values));\n\n        onAccountCreated();\n    };\n\n    private showCreateAccount: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.CreateAccount);\n    };\n\n    private handleCancelCreateAccount: () => void = () => {\n        const { clearError, onChangeViewType = noop, createAccountError } = this.props;\n\n        if (createAccountError) {\n            clearError(createAccountError);\n        }\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private handleCancelSignIn: () => void = () => {\n        const { clearError, onChangeViewType = noop, signInError } = this.props;\n\n        if (signInError) {\n            clearError(signInError);\n        }\n\n        onChangeViewType(CustomerViewType.Guest);\n    };\n\n    private handleChangeEmail: (email: string) => void = (email) => {\n        const { analyticsTracker } = this.props;\n\n        this.draftEmail = email;\n        analyticsTracker.customerEmailEntry(email);\n    };\n\n    private handleShowLogin: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private executePaymentMethodCheckoutOrContinue: () => void = async () => {\n        const {\n            executePaymentMethodCheckout,\n            onContinueAsGuest = noop,\n            providerWithCustomCheckout\n        } = this.props;\n\n        if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onContinueAsGuest,\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n            });\n        } else {\n            onContinueAsGuest();\n        }\n    };\n\n    private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.customerPaymentMethodExecuted(payload);\n    }\n}\n\nexport function mapToWithCheckoutCustomerProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\n    const {\n        data: {\n            getBillingAddress,\n            getCustomerAccountFields,\n            getCheckout,\n            getCustomer,\n            getCart,\n            getSignInEmail,\n            getConfig,\n            isPaymentDataRequired,\n        },\n        errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\n        statuses: {\n            isContinuingAsGuest,\n            isExecutingPaymentMethodCheckout,\n            isInitializingCustomer,\n            isSigningIn,\n            isSendingSignInEmail,\n            isCreatingCustomerAccount,\n        },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const cart = getCart();\n    const signInEmail = getSignInEmail();\n    const config = getConfig();\n\n    if (!checkout || !config || !cart) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            isSignInEmailEnabled,\n            isAccountCreationEnabled,\n            isExpressPrivacyPolicy,\n            shouldRedirectToStorefrontForAuth\n        },\n    } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\n\n    const providerWithCustomCheckout = getProviderWithCustomCheckout(\n        config.checkoutSettings.providerWithCustomCheckout,\n    );\n\n    return {\n        customerAccountFields: getCustomerAccountFields(),\n        canSubscribe: config.shopperConfig.showNewsletterSignup,\n        checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\n        clearError: checkoutService.clearError,\n        createAccount: checkoutService.createCustomerAccount,\n        continueAsGuest: checkoutService.continueAsGuest,\n        sendLoginEmail: checkoutService.sendSignInEmail,\n        defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        email: billingAddress?.email || customer?.email,\n        firstName: customer?.firstName,\n        forgotPasswordUrl: config.links.forgotPasswordLink,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isCreatingAccount: isCreatingCustomerAccount(),\n        createAccountError: getCreateCustomerAccountError(),\n        hasBillingId: !!billingAddress?.id,\n        isBuyNowCart: cart.source === 'BUY_NOW',\n        isContinuingAsGuest: isContinuingAsGuest(),\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        isInitializing: isInitializingCustomer(),\n        isSignInEmailEnabled,\n        isAccountCreationEnabled,\n        isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\n        isSigningIn: isSigningIn(),\n        isSendingSignInEmail: isSendingSignInEmail(),\n        signInEmail,\n        signInEmailError: getSignInEmailError(),\n        privacyPolicyUrl,\n        providerWithCustomCheckout,\n        requiresMarketingConsent,\n        signIn: checkoutService.signInCustomer,\n        signInError: getSignInError(),\n        isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\n        isExpressPrivacyPolicy,\n        isPaymentDataRequired: isPaymentDataRequired(),\n        shouldRenderStripeForm: providerWithCustomCheckout === PaymentMethodId.StripeUPE && shouldUseStripeLinkByMinimumAmount(cart),\n        shouldRedirectToStorefrontForAuth,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\n","import { type CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\n\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\n\nimport { type CreateAccountFormValues } from './getCreateCustomerValidationSchema';\n\nexport default function mapCreateAccountFromFormValues({\n    acceptsMarketingEmails,\n    customFields,\n    ...values\n}: CreateAccountFormValues): CustomerAccountRequestBody {\n    return {\n        ...values,\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\n    };\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { type Banner, type Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\n\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\nimport './StaticConsignment.scss';\nimport StaticConsignmentItemList from './StaticConsignmentItemList';\n\ninterface StaticConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    compactView?: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticConsignment: FunctionComponent<StaticConsignmentProps> = ({\n    consignment,\n    cart,\n    compactView,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const { shippingAddress: address, selectedShippingOption } = consignment;\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    return (\n        <div className=\"staticConsignment\">\n            <StaticAddress address={address} type={AddressType.Shipping} />\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            {!compactView && <StaticConsignmentItemList cart={cart} consignment={consignment} />}\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticConsignment);\n","import { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { localizeAddress, TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport ConsignmentLineItemDetail from './ConsignmentLineItemDetail';\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\nimport getShippingCostAfterAutomaticDiscount from './getShippingCostAfterAutomaticDiscount';\nimport { StaticShippingOption } from './shippingOption';\n\nimport './StaticMultiConsignment.scss';\n\ninterface StaticMultiConsignmentProps {\n    consignment: Consignment;\n    cart: Cart;\n    consignmentNumber: number;\n    isShippingDiscountDisplayEnabled: boolean;\n}\n\nconst StaticMultiConsignment: FunctionComponent<StaticMultiConsignmentProps> = ({\n    consignment,\n    cart,\n    consignmentNumber,\n    isShippingDiscountDisplayEnabled,\n}) => {\n    const {\n        checkoutState: {\n            data: { getShippingCountries },\n        },\n    } = useCheckout();\n    const { themeV2 } = useThemeContext();\n\n    const { shippingAddress: addressWithoutLocalization, selectedShippingOption } = consignment;\n    const address = localizeAddress(addressWithoutLocalization, getShippingCountries());\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneAddressLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticMultiConsignment\">\n            <h3 className={classNames('staticMultiConsignment-header',\n                { 'body-bold': themeV2 })}>\n                <TranslatedString data={{ consignmentNumber }} id=\"shipping.multishipping_consignment_index_heading\" />\n            </h3>\n\n            <div className=\"checkout-address--static\">\n                <p className={classNames('address-entry',\n                    { 'sub-text': themeV2 })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n                <div className=\"address-details\">\n                    <p className={classNames('street-address address-entry',\n                        { 'sub-text': themeV2 })}>\n                        <span className=\"address-line-1\">{address.address1}</span>\n                        {address.address2 && (\n                            <span className=\"address-line-2\">{`, ${address.address2}`}</span>\n                        )}\n                    </p>\n\n                    <p className={classNames('address-entry',\n                        { 'sub-text': themeV2 })}>\n                        {address.city && <span className=\"locality\">{address.city}</span>}\n                        {address.localizedProvince && (\n                            <span className=\"region\">{`, ${address.localizedProvince}`}</span>\n                        )}\n                        {address.localizedCountry && (\n                            <span className=\"country-name\">{`, ${address.localizedCountry}`}</span>\n                        )}\n                        {address.postalCode && (\n                            <span className=\"postal-code\">{` ${address.postalCode}`}</span>\n                        )}\n                    </p>\n                </div>\n            </div>\n\n            {showPayPalFastlaneAddressLabel && <PoweredByPayPalFastlaneLabel />}\n\n            <div className=\"staticConsignment-items\">\n                <span className={themeV2 ? 'body-bold' : ''}>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n                </span>\n\n                <ConsignmentLineItemDetail isMultiShippingSummary lineItems={lineItems} />\n        </div>\n\n            {selectedShippingOption && (\n                <div>\n                    <div className=\"shippingOption shippingOption--alt shippingOption--selected\">\n                        <StaticShippingOption\n                            displayAdditionalInformation={false}\n                            method={selectedShippingOption}\n                            shippingCostAfterDiscount={isShippingDiscountDisplayEnabled ? getShippingCostAfterAutomaticDiscount(selectedShippingOption.cost, [consignment]) : undefined}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(StaticMultiConsignment);\n","\nimport { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport StaticConsignment from './StaticConsignment';\nimport StaticMultiConsignment from './StaticMultiConsignment';\n\ninterface ShippingSummaryProps {\n    isShippingDiscountDisplayEnabled: boolean;\n    isMultiShippingMode: boolean;\n    consignments: Consignment[];\n    cart: Cart;\n}\n\nconst ShippingSummary: FunctionComponent<ShippingSummaryProps> = ({\n    isShippingDiscountDisplayEnabled,\n    isMultiShippingMode,\n    consignments,\n    cart\n}) => {\n    if (isMultiShippingMode) {\n        return (\n            <>\n                {consignments.map((consignment, index) => (\n                    <div className=\"staticMultiConsignmentContainer\" key={consignment.id}>\n                        <StaticMultiConsignment\n                            cart={cart}\n                            consignment={consignment}\n                            consignmentNumber={index + 1}\n                            isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                        />\n                    </div>\n                ))}\n            </>\n        );\n    }\n\n    return (\n        <>\n            {consignments.map((consignment) => (\n                <div className=\"staticConsignmentContainer\" key={consignment.id}>\n                    <StaticConsignment\n                        cart={cart}\n                        compactView={consignments.length < 2}\n                        consignment={consignment}\n                        isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}\n                    />\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default memo(ShippingSummary);\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport type CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepHeaderProps {\n    heading: ReactNode;\n    isActive?: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n    heading,\n    isActive,\n    isComplete,\n    isEditable,\n    onEdit,\n    summary,\n    type,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <div\n            className={classNames('stepHeader', {\n                'is-readonly': !isEditable,\n                'is-clickable': isEditable && !isActive,\n            })}\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n        >\n            <div className=\"stepHeader-figure stepHeader-column\">\n                <IconCheck\n                    additionalClassName={classNames(\n                        'stepHeader-counter',\n                        'optimizedCheckout-step',\n                        { 'stepHeader-counter--complete': isComplete },\n                    )}\n                />\n\n                <h2\n                    className={classNames('stepHeader-title optimizedCheckout-headingPrimary',\n                        { 'header': themeV2 && (isActive || isComplete) },\n                        { 'header-secondary': themeV2 && !isActive && !isComplete })}\n                >{heading}</h2>\n            </div>\n\n            {themeV2 && !isActive && isComplete &&\n                <div\n                    className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary body-regular\"\n                    data-test=\"step-info\"\n                    >\n                        {summary}\n                </div>\n            }\n\n            {!themeV2 &&\n                <div\n                    className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary\"\n                    data-test=\"step-info\"\n                >\n                    {!isActive && isComplete && summary}\n                </div>\n            }\n\n            {isEditable && !isActive && (\n                <div className=\"stepHeader-actions stepHeader-column\">\n                    <Button\n                        aria-expanded={isActive}\n                        className={classNames({ 'body-regular': themeV2 })}\n                        size={ButtonSize.Tiny}\n                        testId=\"step-edit-button\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"common.edit_action\" />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type ReactElement, type ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport type CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n    children?: ReactNode;\n    heading?: ReactNode;\n    isActive?: boolean;\n    isBusy: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    suggestion?: ReactNode;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onExpanded?(step: CheckoutStepType): void;\n    onEdit?(step: CheckoutStepType): void;\n}\n\nconst CheckoutStep = ({\n        children,\n        heading,\n        isActive,\n        isBusy,\n        isComplete,\n        isEditable,\n        onEdit,\n        suggestion,\n        summary,\n        type,\n        onExpanded = noop,\n    }: CheckoutStepProps): ReactElement => {\n    const [isClosed, setIsClosed] = useState(true);\n\n    const containerRef = useRef<HTMLLIElement>(null);\n    const contentRef = useRef<HTMLDivElement>(null);\n    const timeoutRef = useRef<number>();\n    const timeoutDelay = useRef<number>();\n\n    const getChildInput = (): HTMLElement | undefined => {\n        const container = containerRef.current;\n\n        if (!container) {\n            return;\n        }\n\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n        return input || undefined;\n    };\n\n    const getScrollPosition = (): number | undefined => {\n        const container = getParentContainer();\n\n        if (!container || window !== window.top) {\n            return;\n        }\n\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\n        const containerOffset =\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n        return containerOffset - topOffset;\n    };\n\n    // For now, we need to find the parent container because `CheckoutStep`\n    // isn't the outer container yet. Once both the header and body are\n    // moved inside this component, we can remove the lookup.\n    const getParentContainer = (): HTMLElement | undefined => {\n        let container: HTMLElement | null = containerRef.current;\n\n        while (container && container.parentElement) {\n            if (container.parentElement.classList.contains('checkout-step')) {\n                return container.parentElement;\n            }\n\n            container = container.parentElement;\n        }\n\n        return containerRef.current ? containerRef.current : undefined;\n    };\n\n    const getTransitionDelay = (): number => {\n        if (timeoutDelay.current !== undefined) {\n            return timeoutDelay.current;\n        }\n\n        timeoutDelay.current =\n            parseFloat(\n                contentRef.current\n                    ? getComputedStyle(contentRef.current).transitionDuration\n                    : '0s',\n            ) * 1000;\n\n        return timeoutDelay.current;\n    };\n\n    const focusStep = (): void => {\n        const delay = isMobileView() ? 0 : getTransitionDelay();\n\n        setIsClosed(false);\n\n        timeoutRef.current = window.setTimeout(() => {\n            const input = getChildInput();\n            const position = getScrollPosition();\n\n            if (input) {\n                input.focus();\n            }\n\n            if (position !== undefined && !isNaN(position)) {\n                window.scrollTo(0, position);\n            }\n\n            onExpanded(type);\n\n            timeoutRef.current = undefined;\n        }, delay);\n    };\n\n    const handleTransitionEnd = (node: HTMLElement, done: () => void): void => {\n        node.addEventListener('transitionend', ({ target }) => {\n            if (target === node) {\n                done();\n            }\n        });\n    };\n\n    const onAnimationEnd = useCallback((): void => {\n        if (!isActive) {\n            setIsClosed(true);\n        }\n    }, [isActive]);\n\n    useEffect(() => {\n        return () => {\n            if (timeoutRef.current) {\n                window.clearTimeout(timeoutRef.current);\n                timeoutRef.current = undefined;\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        if (isActive) {\n            focusStep();\n        }\n    }, [isActive]);\n\n    return (\n        <li\n            className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n                [`checkout-step--${type}`]: !!type,\n            })}\n            ref={containerRef}\n        >\n            <div className=\"checkout-view-header\">\n                <CheckoutStepHeader\n                    heading={heading}\n                    isActive={isActive}\n                    isComplete={isComplete}\n                    isEditable={isEditable}\n                    onEdit={onEdit}\n                    summary={summary}\n                    type={type}\n                />\n            </div>\n\n            {suggestion && isClosed && !isActive && (\n                <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n                    {suggestion}\n                </div>\n            )}\n\n            <MobileView>\n                {(matched) => (\n                    <CSSTransition\n                        addEndListener={handleTransitionEnd}\n                        classNames=\"checkout-view-content\"\n                        enter={!matched}\n                        exit={!matched}\n                        in={isActive}\n                        mountOnEnter\n                        onExited={onAnimationEnd}\n                        timeout={{}}\n                        unmountOnExit\n                    >\n                        <div\n                            aria-busy={isBusy}\n                            className=\"checkout-view-content\"\n                            ref={contentRef}\n                        >\n                            {isActive ? children : null}\n                        </div>\n                    </CSSTransition>\n                )}\n            </MobileView>\n        </li>\n    );\n};\n\nexport default CheckoutStep;\n","enum CheckoutStepType {\n    Billing = 'billing',\n    Customer = 'customer',\n    Payment = 'payment',\n    Shipping = 'shipping',\n}\n\nexport default CheckoutStepType;\n","import { type Cart, type StoreConfig } from '@bigcommerce/checkout-sdk';\n\nconst itemsRequireShipping = (cart?: Cart, config?: StoreConfig) => {\n    if (!cart) {\n        return false;\n    }\n\n    if (cart.lineItems.physicalItems.some((lineItem) => lineItem.isShippingRequired)) {\n        return true;\n    }\n\n    if (config && cart.lineItems.customItems\n    ) {\n        return cart.lineItems.customItems.length > 0;\n    }\n\n    return false;\n};\n\nexport default itemsRequireShipping;\n","import { type CheckoutPayment, type CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n    hasSelectedShippingOptions,\n    hasUnassignedLineItems,\n    itemsRequireShipping,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n// In this step, we require that the customer strategy be reloaded the first time.\nconst getStripeLinkAndCheckoutPageIsReloaded = (\n    isUsingWallet: boolean,\n    hasEmail: boolean,\n    isGuest: boolean,\n    shouldUseStripeLinkByMinimumAmount: boolean,\n    providerWithCustomCheckout?: string | null,\n) => {\n    return !isUsingWallet && providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount;\n}\n\nconst getCustomerStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => data.getPaymentProviderCustomer(),\n    (checkout, customer, billingAddress, config, cart, paymentProviderCustomer) => {\n        const hasEmail = !!(\n            (customer && customer.email) ||\n            (billingAddress && billingAddress.email)\n        );\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment: CheckoutPayment) => SUPPORTED_METHODS.includes(payment.providerId),\n                  )\n                : false;\n        const isGuest = !!(customer && customer.isGuest);\n        const isComplete = hasEmail || isUsingWallet;\n        const isEditable = isComplete && !isUsingWallet && isGuest;\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\n            isUsingWallet,\n            hasEmail,\n            isGuest,\n            cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\n            config?.checkoutSettings.providerWithCustomCheckout,\n        );\n\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n            return {\n                type: CheckoutStepType.Customer,\n                isActive: false,\n                isComplete: paymentProviderCustomer?.stripeLinkAuthenticationState !== undefined,\n                isEditable,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Customer,\n            isActive: false,\n            isComplete,\n            isEditable,\n            isRequired: true,\n        };\n    },\n);\n\nconst getBillingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => {\n        const billingAddress = data.getBillingAddress();\n\n        return billingAddress\n            ? data.getBillingAddressFields(billingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (checkout, billingAddress, billingAddressFields, config) => {\n        const hasAddress = billingAddress\n            ? isValidAddress(billingAddress, billingAddressFields)\n            : false;\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                      (payment) => SUPPORTED_METHODS.includes(payment.providerId),\n                  )\n                : false;\n        const isComplete = hasAddress || isUsingWallet;\n        const isUsingAmazonPay =\n            checkout && checkout.payments\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n                : false;\n\n        if (isUsingAmazonPay) {\n            const billingAddressCustomFields = billingAddressFields.filter(\n                ({ custom }: { custom: boolean }) => custom,\n            );\n            const hasCustomFields = billingAddressCustomFields.length > 0;\n            const isAmazonPayBillingStepComplete =\n                billingAddress && hasCustomFields\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\n                    : true;\n\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: isAmazonPayBillingStepComplete,\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n                isRequired: true,\n            };\n        }\n\n        const isGooglePayBillingAddressEditingEnabled = isExperimentEnabled(\n            config?.checkoutSettings,\n            'STRIPE-546.allow_billing_address_editing_for_all_Google_Pay_providers',\n        );\n        const isUsingGooglePay =\n            isGooglePayBillingAddressEditingEnabled && (checkout && checkout.payments\n                ? checkout.payments.some((payment) => (payment?.providerId || '').startsWith('googlepay'))\n                : false);\n\n        if (isUsingGooglePay) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        const isUsingPaypal =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment) =>\n                        [\n                            'braintreepaypal',\n                            'braintreepaypalcredit',\n                            'braintreevenmo',\n                            'paypalcommerce',\n                            'paypalcommercecredit',\n                            'paypalcommercevenmo'\n                        ]\n                            .includes(payment.providerId))\n                : false;\n\n        if (isUsingPaypal) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Billing,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && !isUsingWallet,\n            isRequired: true,\n        };\n    },\n);\n\nconst getShippingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => {\n        const shippingAddress = data.getShippingAddress();\n\n        return shippingAddress\n            ? data.getShippingAddressFields(shippingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (shippingAddress, consignments, cart, shippingAddressFields, config) => {\n        const hasAddress = shippingAddress\n            ? isValidAddress(shippingAddress, shippingAddressFields)\n            : false;\n        const hasOptions = consignments ? hasSelectedShippingOptions(consignments) : false;\n        const hasUnassignedItems =\n            cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n        const isComplete = hasAddress && hasOptions && !hasUnassignedItems;\n        const isRequired = itemsRequireShipping(cart, config);\n        const isCustomShippingSelected =\n            isExperimentEnabled(\n                config?.checkoutSettings,\n                'PROJECT-5015.manual_order.display_custom_shipping',\n            ) &&\n            hasOptions &&\n            consignments?.some(\n                ({ selectedShippingOption }) => selectedShippingOption?.type === 'custom',\n            );\n\n        return {\n            type: CheckoutStepType.Shipping,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && isRequired && !isCustomShippingSelected,\n            isRequired,\n        };\n    },\n);\n\nconst getPaymentStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getOrder(),\n    (order) => {\n        const isComplete = order ? order.isComplete : false;\n\n        return {\n            type: CheckoutStepType.Payment,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getOrderSubmitStatus = createSelector(\n    ({ statuses }: CheckoutSelectors) => statuses.isSubmittingOrder(),\n    (status) => status,\n);\n\nconst getCheckoutStepStatuses = createSelector(\n    getCustomerStepStatus,\n    getShippingStepStatus,\n    getBillingStepStatus,\n    getPaymentStepStatus,\n    getOrderSubmitStatus,\n    (customerStep, shippingStep, billingStep, paymentStep, orderStatus) => {\n        const isSubmittingOrder = orderStatus;\n\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\n\n        const defaultActiveStep =\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n        return steps.map((step, index) => {\n            const isPrevStepComplete = steps\n                .slice(0, index)\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n            return {\n                ...step,\n                isActive: defaultActiveStep.type === step.type,\n                isBusy: false,\n                // A step is only editable if its previous step is complete or not required\n                isEditable: isPrevStepComplete && step.isEditable && !isSubmittingOrder,\n            };\n        });\n    },\n);\n\nexport default getCheckoutStepStatuses;\n","import {\n    type Address,\n    type Cart,\n    type CartChangedError,\n    type CheckoutParams,\n    type CheckoutSelectors,\n    type CheckoutStoreSelector,\n    type Consignment,\n    type EmbeddedCheckoutMessenger,\n    type EmbeddedCheckoutMessengerOptions,\n    ExtensionRegion,\n    type FlashMessage,\n    type PaymentMethod,\n    type Promotion,\n    type RequestOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, type ReactNode } from 'react';\n\nimport { type AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { Extension, type ExtensionContextProps, withExtension } from '@bigcommerce/checkout/checkout-extension';\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, type WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport {\n    AddressFormSkeleton,\n    CartSummarySkeleton,\n    ChecklistSkeleton,\n    LazyContainer,\n    LoadingNotification,\n    OrderConfirmationPageSkeleton\n} from '@bigcommerce/checkout/ui';\nimport { navigateToOrderConfirmation } from '@bigcommerce/checkout/utility';\n\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError, isErrorWithType } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n    CheckoutButtonContainer,\n    CheckoutSuggestion,\n    Customer,\n    CustomerInfo,\n    type CustomerSignOutEvent,\n    CustomerViewType,\n} from '../customer';\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\nimport { SubscribeSessionStorage } from '../customer/SubscribeSessionStorage';\nimport { type EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping, ShippingSummary } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport type CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport type CheckoutSupport from './CheckoutSupport';\nimport { mapCheckoutComponentErrorMessage } from './mapErrorMessage';\nimport mapToCheckoutProps from './mapToCheckoutProps';\n\nconst Billing = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"billing\" */\n                '../billing/Billing'\n                ),\n    ),\n);\n\nconst CartSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary\" */\n                '../cart/CartSummary'\n                ),\n    ),\n);\n\nconst CartSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary-drawer\" */\n                '../cart/CartSummaryDrawer'\n                ),\n    ),\n);\n\nconst Payment = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"payment\" */\n                '../payment/Payment'\n                ),\n    ),\n);\n\nconst Shipping = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"shipping\" */\n                '../shipping/Shipping'\n                ),\n    ),\n);\n\nexport interface CheckoutProps {\n    checkoutId: string;\n    containerId: string;\n    data?: CheckoutStoreSelector;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    themeV2?:boolean;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n    activeStepType?: CheckoutStepType;\n    isBillingSameAsShipping: boolean;\n    customerViewType?: CustomerViewType;\n    defaultStepType?: CheckoutStepType;\n    error?: Error;\n    flashMessages?: FlashMessage[];\n    isMultiShippingMode: boolean;\n    isCartEmpty: boolean;\n    isRedirecting: boolean;\n    hasSelectedShippingOptions: boolean;\n    isSubscribed: boolean;\n    buttonConfigs: PaymentMethod[];\n}\n\nexport interface WithCheckoutProps {\n    billingAddress?: Address;\n    cart?: Cart;\n    consignments?: Consignment[];\n    data: CheckoutStoreSelector;\n    error?: Error;\n    hasCartChanged: boolean;\n    flashMessages?: FlashMessage[];\n    isGuestEnabled: boolean;\n    isLoadingCheckout: boolean;\n    isPending: boolean;\n    isPriceHiddenFromGuests: boolean;\n    isShowingWalletButtonsOnTop: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n    loginUrl: string;\n    cartUrl: string;\n    createAccountUrl: string;\n    promotions?: Promotion[];\n    steps: CheckoutStepStatus[];\n    clearError(error?: Error): void;\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n    loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n}\n\nclass Checkout extends Component<\n    CheckoutProps &\n    WithCheckoutProps &\n    WithLanguageProps &\n    AnalyticsContextProps &\n    ExtensionContextProps,\n    CheckoutState\n> {\n    state: CheckoutState = {\n        isBillingSameAsShipping: true,\n        isCartEmpty: false,\n        isRedirecting: false,\n        isMultiShippingMode: false,\n        hasSelectedShippingOptions: false,\n        isSubscribed: false,\n        buttonConfigs: [],\n    };\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n    private unsubscribeFromConsignments?: () => void;\n\n    componentWillUnmount(): void {\n        if (this.unsubscribeFromConsignments) {\n            this.unsubscribeFromConsignments();\n            this.unsubscribeFromConsignments = undefined;\n        }\n\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\n        this.handleBeforeExit();\n    }\n\n    async componentDidMount(): Promise<void> {\n        const {\n            analyticsTracker,\n            containerId,\n            createEmbeddedMessenger,\n            data,\n            embeddedStylesheet,\n            extensionService,\n            loadPaymentMethodByIds,\n            subscribeToConsignments,\n        } = this.props;\n\n        try {\n            const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\n\n            const supportedProviders = getSupportedMethodIds(providers);\n\n            if (providers.length > 0) {\n                const configs = await loadPaymentMethodByIds(supportedProviders);\n\n                this.setState({\n                    buttonConfigs: configs.data.getPaymentMethods() || [],\n                });\n            }\n\n            extensionService.preloadExtensions();\n\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n            const errorFlashMessages = data.getFlashMessages('error') || [];\n\n            if (errorFlashMessages.length) {\n                const { language } = this.props;\n\n                this.setState({\n                    error: new CustomError({\n                        title:\n                            errorFlashMessages[0].title ||\n                            language.translate('common.error_heading'),\n                        message: errorFlashMessages[0].message,\n                        data: {},\n                        name: 'default',\n                    }),\n                });\n            }\n\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n            this.unsubscribeFromConsignments = subscribeToConsignments(\n                this.handleConsignmentsUpdated,\n            );\n            this.embeddedMessenger = messenger;\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n            messenger.postFrameLoaded({ contentId: containerId });\n            messenger.postLoaded();\n\n            if (document.prerendering) {\n                document.addEventListener('prerenderingchange', () => {\n                    analyticsTracker.checkoutBegin();\n                }, { once: true });\n            }\n            else {\n                analyticsTracker.checkoutBegin();\n            }\n\n            const consignments = data.getConsignments();\n            const cart = data.getCart();\n\n            const hasMultiShippingEnabled =\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n            const checkoutBillingSameAsShippingEnabled =\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n            const defaultNewsletterSignupOption =\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\n                false;\n            const isMultiShippingMode =\n                !!cart &&\n                !!consignments &&\n                hasMultiShippingEnabled &&\n                isUsingMultiShipping(consignments, cart.lineItems);\n\n            this.setState({\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n                isSubscribed: defaultNewsletterSignupOption,\n            });\n\n            if (isMultiShippingMode) {\n                this.setState({ isMultiShippingMode });\n            }\n\n            window.addEventListener('beforeunload', this.handleBeforeExit);\n\n            this.handleReady();\n        } catch (error) {\n            if (error instanceof Error) {\n                this.handleUnhandledError(error);\n            }\n        }\n    }\n\n    render(): ReactNode {\n        const { error, isRedirecting } = this.state;\n        const { themeV2, language } = this.props;\n\n        if(isRedirecting){\n            return <OrderConfirmationPageSkeleton />;\n        }\n\n        let errorModal = null;\n\n        if (error) {\n            if (isCustomError(error)) {\n                errorModal = (\n                    <ErrorModal\n                        error={error}\n                        onClose={this.handleCloseErrorModal}\n                        title={error.title}\n                    />\n                );\n            } else {\n                const { message, action } = mapCheckoutComponentErrorMessage(error, language.translate.bind(language));\n                errorModal = <ErrorModal\n                        error={error}\n                        message={message}\n                        onClose={action === 'reload' ? this.reloadWindow : this.handleCloseErrorModal}\n                    />;\n            }\n        }\n\n\n        return (\n            <div className={classNames('remove-checkout-step-numbers', { 'is-embedded': isEmbedded() }, { 'themeV2': themeV2 })} data-test=\"checkout-page-container\" id=\"checkout-page-container\">\n                <div className=\"layout optimizedCheckout-contentPrimary\">\n                    {this.renderContent()}\n                </div>\n                {errorModal}\n            </div>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop, extensionState } = this.props;\n\n        const { activeStepType, defaultStepType, isCartEmpty } = this.state;\n\n        if (isCartEmpty) {\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n        }\n\n        const isPaymentStepActive = activeStepType\n            ? activeStepType === CheckoutStepType.Payment\n            : defaultStepType === CheckoutStepType.Payment;\n\n        return (\n            <>\n                <div className=\"layout-main\">\n                    <LoadingNotification isLoading={extensionState.isShowingLoadingIndicator} />\n\n                    {/* <Extension region={ExtensionRegion.GlobalWebWorker} /> */}\n                    <PromotionBannerList promotions={promotions} />\n\n                    {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\n                        <CheckoutButtonContainer\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\n                            isPaymentStepActive={isPaymentStepActive}\n                            onUnhandledError={this.handleUnhandledError}\n                            onWalletButtonClick={this.handleWalletButtonClick}\n                        />\n                    )}\n\n                    <ol className=\"checkout-steps\">\n                        {steps\n                            .filter((step) => step.isRequired)\n                            .map((step) =>\n                                this.renderStep({\n                                    ...step,\n                                    isActive: activeStepType\n                                        ? activeStepType === step.type\n                                        : defaultStepType === step.type,\n                                    isBusy: isPending,\n                                }),\n                            )}\n                    </ol>\n                </div>\n                {this.renderCartSummary()}\n            </>\n        );\n    }\n\n    private renderStep(step: CheckoutStepStatus): ReactNode {\n        switch (step.type) {\n            case CheckoutStepType.Customer:\n                return this.renderCustomerStep(step);\n\n            case CheckoutStepType.Shipping:\n                return this.renderShippingStep(step);\n\n            case CheckoutStepType.Billing:\n                return this.renderBillingStep(step);\n\n            case CheckoutStepType.Payment:\n                return this.renderPaymentStep(step);\n\n            default:\n                return null;\n        }\n    }\n\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n        const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\n        const {\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n            isSubscribed,\n        } = this.state;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                suggestion={<CheckoutSuggestion />}\n                summary={\n                    <CustomerInfo\n                        onSignOut={this.handleSignOut}\n                        onSignOutError={this.handleError}\n                    />\n                }\n            >\n                <Customer\n                    checkEmbeddedSupport={this.checkEmbeddedSupport}\n                    isEmbedded={isEmbedded()}\n                    isSubscribed={isSubscribed}\n                    isWalletButtonsOnTop = {isShowingWalletButtonsOnTop }\n                    onAccountCreated={this.navigateToNextIncompleteStep}\n                    onChangeViewType={this.setCustomerViewType}\n                    onContinueAsGuest={this.navigateToNextIncompleteStep}\n                    onContinueAsGuestError={this.handleError}\n                    onReady={this.handleReady}\n                    onSignIn={this.navigateToNextIncompleteStep}\n                    onSignInError={this.handleError}\n                    onSubscribeToNewsletter={this.handleNewsletterSubscription}\n                    onUnhandledError={this.handleUnhandledError}\n                    onWalletButtonClick={this.handleWalletButtonClick}\n                    step={step}\n                    viewType={customerViewType}\n                />\n            </CheckoutStep>\n        );\n    }\n\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\n        const { hasCartChanged, cart, consignments = [], isShippingDiscountDisplayEnabled } = this.props;\n        const { isBillingSameAsShipping, isMultiShippingMode } = this.state;\n\n        if (!cart) {\n            return;\n        }\n\n        const setIsMultishippingMode = (value: boolean) => {\n            this.setState({ isMultiShippingMode: value });\n        }\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={<ShippingSummary cart={cart} consignments={consignments} isMultiShippingMode={isMultiShippingMode} isShippingDiscountDisplayEnabled={isShippingDiscountDisplayEnabled}/>}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Shipping\n                        cartHasChanged={hasCartChanged}\n                        isBillingSameAsShipping={isBillingSameAsShipping}\n                        isMultiShippingMode={isMultiShippingMode}\n                        navigateNextStep={this.handleShippingNextStep}\n                        onCreateAccount={this.handleShippingCreateAccount}\n                        onReady={this.handleReady}\n                        onSignIn={this.handleShippingSignIn}\n                        onToggleMultiShipping={this.handleToggleMultiShipping}\n                        onUnhandledError={this.handleUnhandledError}\n                        setIsMultishippingMode={setIsMultishippingMode}\n                        step={step}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n        const { billingAddress } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Billing\n                        navigateNextStep={this.navigateToNextIncompleteStep}\n                        onReady={this.handleReady}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n        const { consignments, cart, errorLogger } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n            >\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n                    <Payment\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\n                        errorLogger={errorLogger}\n                        isEmbedded={isEmbedded()}\n                        isUsingMultiShipping={\n                            cart && consignments\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\n                                : false\n                        }\n                        onCartChangedError={this.handleCartChangedError}\n                        onFinalize={this.navigateToOrderConfirmation}\n                        onReady={this.handleReady}\n                        onSubmit={this.navigateToOrderConfirmation}\n                        onSubmitError={this.handleError}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderCartSummary(): ReactNode {\n        const { isMultiShippingMode } = this.state;\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer loadingSkeleton={<></>}>\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                                <CartSummaryDrawer isMultiShippingMode={isMultiShippingMode} />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <LazyContainer loadingSkeleton={<CartSummarySkeleton />}>\n                            <aside className=\"layout-cart\">\n                                    <CartSummary isMultiShippingMode={isMultiShippingMode} />\n                                    <Extension region={ExtensionRegion.SummaryAfter} />\n                            </aside>\n                        </LazyContainer>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n        const { clearError, error, steps } = this.props;\n        const { activeStepType } = this.state;\n        const step = find(steps, { type });\n\n        if (!step) {\n            return;\n        }\n\n        if (activeStepType === step.type) {\n            return;\n        }\n\n        if (options && options.isDefault) {\n            this.setState({ defaultStepType: step.type });\n        } else {\n            // TODO: setting activeStepType here is causing significant delay in rendering guest shopper form\n            // When converting functional component, we should set activeStepType before rendering <CheckoutPage />\n            this.setState({ activeStepType: step.type });\n        }\n\n        if (error) {\n            clearError(error);\n        }\n    }\n\n    private handleToggleMultiShipping: () => void = () => {\n        const { isMultiShippingMode } = this.state;\n\n        this.setState({ isMultiShippingMode: !isMultiShippingMode });\n    };\n\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\n        options,\n    ) => {\n        const { steps, analyticsTracker } = this.props;\n        const activeStepIndex = findIndex(steps, { isActive: true });\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n        if (!activeStep) {\n            return;\n        }\n\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n        if (previousStep) {\n            analyticsTracker.trackStepCompleted(previousStep.type);\n        }\n\n        this.navigateToStep(activeStep.type, options);\n    };\n\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n        const { steps, analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postComplete();\n        }\n\n        SubscribeSessionStorage.removeSubscribeStatus();\n\n        this.setState({ isRedirecting: true }, () => {\n            navigateToOrderConfirmation(orderId);\n        });\n    };\n\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n        const { embeddedSupport } = this.props;\n\n        return embeddedSupport.isSupported(...methodIds);\n    };\n\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\n        this.navigateToStep(CheckoutStepType.Shipping);\n    };\n\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType, defaultStepType } =\n            this.state;\n\n        const { steps } = this.props;\n\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\n            data.getConsignments() || [],\n        );\n\n        const isDefaultStepPaymentOrBilling =\n            !activeStepType &&\n            (defaultStepType === CheckoutStepType.Payment ||\n                defaultStepType === CheckoutStepType.Billing);\n\n        const isShippingStepFinished =\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\n            findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n        if (\n            prevHasSelectedShippingOptions &&\n            !newHasSelectedShippingOptions &&\n            isShippingStepFinished\n        ) {\n            this.navigateToStep(CheckoutStepType.Shipping);\n            this.setState({ error: new ShippingOptionExpiredError() });\n        }\n\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n    };\n\n    private handleCloseErrorModal: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepViewed(type);\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        this.handleError(error);\n\n        // For errors that are not caught and handled by child components, we\n        // handle them here by displaying a generic error modal to the shopper.\n        this.setState({ error });\n    };\n\n    private handleError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        if (isErrorWithType(error) && error.type === 'empty_cart') {\n            this.setState({ error });\n            return;\n        }\n\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n        this.navigateToStep(type);\n    };\n\n    private handleReady: () => void = () => {\n        this.navigateToNextIncompleteStep({ isDefault: true });\n    };\n\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n        this.setState({ isSubscribed: subscribed });\n    }\n\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\n\n        if (isPriceHiddenFromGuests) {\n            if (window.top) {\n                return (window.top.location.href = cartUrl);\n            }\n        }\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postSignedOut();\n        }\n\n        if (isGuestEnabled) {\n            this.setCustomerViewType(CustomerViewType.Guest);\n        }\n\n        if (isCartEmpty) {\n            this.setState({ isCartEmpty: true });\n\n            if (!isEmbedded()) {\n                if (window.top) {\n                    return window.top.location.assign(loginUrl);\n                }\n            }\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n    };\n\n    private handleShippingNextStep: (isBillingSameAsShipping: boolean) => void = (\n        isBillingSameAsShipping,\n    ) => {\n        this.setState({ isBillingSameAsShipping });\n\n        if (isBillingSameAsShipping) {\n            this.navigateToNextIncompleteStep();\n        } else {\n            this.navigateToStep(CheckoutStepType.Billing);\n        }\n    };\n\n    private handleShippingSignIn: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.Login);\n    };\n\n    private handleShippingCreateAccount: () => void = () => {\n        this.setCustomerViewType(CustomerViewType.CreateAccount);\n    };\n\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n        const { createAccountUrl } = this.props;\n\n        if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n            if (window.top) {\n                window.top.location.replace(createAccountUrl);\n            }\n\n            return;\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n        this.setState({ customerViewType });\n    };\n\n    private handleBeforeExit: () => void = () => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.exitCheckout();\n    }\n\n    private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.walletButtonClick(methodName);\n    }\n\n    private reloadWindow: () => void = () => {\n        this.setState({ error: undefined });\n        window.location.reload();\n    }\n}\n\nexport default withExtension(\n    withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\n);\n","import { type TranslationData } from '@bigcommerce/checkout-sdk';\n\nexport function mapCheckoutComponentErrorMessage(\n    error: any,\n    translate: (key: string, data?: TranslationData) => string,\n): { message: string, action: string } {\n    switch (error.type) {\n        case 'empty_cart':\n            return {\n                message: translate('cart.empty_cart_error_message'),\n                action: 'reload'\n            };\n\n        default:\n            return {\n                message: error.message,\n                action: 'default'\n            };\n    }\n}\n","import { type CheckoutSelectors, type CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\n\nimport { type WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n    const { data, errors, statuses } = checkoutState;\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\n    const {\n        checkoutSettings: {\n            guestCheckoutEnabled: isGuestEnabled = false,\n            checkoutUserExperienceSettings = {\n                walletButtonsOnTop: false,\n                floatingLabelEnabled: false,\n            },\n        } = {},\n        links: {\n            loginLink: loginUrl = '',\n            createAccountLink: createAccountUrl = '',\n            cartLink: cartUrl = '',\n        } = {},\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n    } = data.getConfig() || {};\n\n    const subscribeToConsignmentsSelector = createSelector(\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n        },\n    );\n\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop);\n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        data.getConfig()?.checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return {\n        billingAddress: data.getBillingAddress(),\n        cart: data.getCart(),\n        clearError: checkoutService.clearError,\n        data,\n        consignments: data.getConsignments(),\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n        isGuestEnabled,\n        isLoadingCheckout: statuses.isLoadingCheckout(),\n        isShippingDiscountDisplayEnabled,\n        isPending: statuses.isPending(),\n        isPriceHiddenFromGuests,\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n        loadCheckout: checkoutService.loadCheckout,\n        loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\n        loginUrl,\n        cartUrl,\n        createAccountUrl,\n        promotions,\n        subscribeToConsignments: subscribeToConsignmentsSelector({\n            checkoutService,\n            checkoutState,\n        }),\n        steps: getCheckoutStepStatuses(checkoutState),\n    };\n}\n","import { useEffect, useState } from 'react';\n\nimport { useExtensions } from '@bigcommerce/checkout/checkout-extension';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nexport const useLoadCheckout = (checkoutId: string): {isLoadingCheckout: boolean} => {\n    const [ isLoadingCheckout, setIsLoadingCheckout ] = useState(true);\n    const { checkoutService } = useCheckout();\n    const { extensionService } = useExtensions();\n\n    const fetchData = async () => {\n        await Promise.all([\n            checkoutService.loadCheckout(checkoutId, {\n                params: {\n                    include: [\n                        'cart.lineItems.physicalItems.categoryNames',\n                        'cart.lineItems.digitalItems.categoryNames',\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n                },\n            }),\n            extensionService.loadExtensions(),\n        ]);\n    };\n\n    const fetchDataWithRetry = async (maxRetries = 3): Promise<void> => {\n        const attemptFetch = async (attemptSequence = 1): Promise<void> => {\n            try {\n                await fetchData();\n            } catch {\n                if (attemptSequence >= maxRetries) {\n                    throw new Error('Failed to load checkout after 3 attempts, please try again.');\n                }\n\n                const delay = attemptSequence ** 2 * 1000;\n\n                await new Promise(resolve => setTimeout(resolve, delay));\n\n                await attemptFetch(attemptSequence + 1);\n            }\n        };\n\n        await attemptFetch();\n    };\n\n    useEffect(() => {\n        fetchDataWithRetry()\n            .then(() => setIsLoadingCheckout(false))\n            .catch((error) => {\n                throw error;\n            });\n    }, []);\n\n    return  { isLoadingCheckout };\n};\n","import CheckoutIntermediate from './CheckoutIntermediate';\n\nexport default CheckoutIntermediate;\nexport { CheckoutProps, CheckoutState, WithCheckoutProps } from './CheckoutPage';\n","import {\n    type EmbeddedCheckoutMessenger,\n    type EmbeddedCheckoutMessengerOptions\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { CheckoutPageSkeleton, useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { type EmbeddedCheckoutStylesheet } from '../embeddedCheckout';\n\nimport CheckoutPage from './CheckoutPage';\nimport type CheckoutSupport from './CheckoutSupport';\nimport { useLoadCheckout } from './hooks';\n\ninterface CheckoutIntermediateProps {\n    checkoutId: string;\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nconst CheckoutIntermediate:React.FC<CheckoutIntermediateProps>= (props) => {\n    const { checkoutId } = props;\n    const { isLoadingCheckout } = useLoadCheckout(checkoutId);\n    const { themeV2 } = useThemeContext();\n\n    if (isLoadingCheckout) {\n        return <CheckoutPageSkeleton />;\n    }\n\n    return <CheckoutPage\n            {...props}\n            createEmbeddedMessenger={props.createEmbeddedMessenger}\n            embeddedStylesheet={props.embeddedStylesheet}\n            embeddedSupport={props.embeddedSupport}\n            errorLogger={props.errorLogger}\n            themeV2={themeV2}\n        />;\n};\n\nexport default CheckoutIntermediate;\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport type { BrowserOptions } from '@sentry/browser';\nimport React, { type ReactElement, useEffect, useMemo } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\nimport { ThemeProvider } from '@bigcommerce/checkout/ui';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nconst CheckoutApp = (props: CheckoutAppProps): ReactElement => {\n    const { containerId, sentryConfig, publicPath, sentrySampleRate } = props;\n\n    const checkoutService = useMemo(() => createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    }), []);\n    const embeddedStylesheet = useMemo(() => createEmbeddedCheckoutStylesheet(), []);\n    const embeddedSupport = useMemo(() => createEmbeddedCheckoutSupport(getLanguageService()), []);\n    const errorLogger = useMemo(() => createErrorLogger(\n        { sentry: sentryConfig },\n        {\n            errorTypes: ['UnrecoverableError'],\n            publicPath,\n            sampleRate: sentrySampleRate || 0.1,\n        },\n    ), []);\n\n    useEffect(() => {\n        ReactModal.setAppElement(`#${containerId}`);\n    }, []);\n\n    return (\n        <ErrorBoundary logger={errorLogger}>\n            <LocaleProvider checkoutService={checkoutService}>\n                <CheckoutProvider checkoutService={checkoutService}>\n                    <AnalyticsProvider checkoutService={checkoutService}>\n                        <ExtensionProvider\n                            checkoutService={checkoutService}\n                            errorLogger={createErrorLogger()}\n                        >\n                            <ThemeProvider>\n                                <Checkout\n                                    {...props}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={embeddedStylesheet}\n                                    embeddedSupport={embeddedSupport}\n                                    errorLogger={errorLogger}\n                                />\n                            </ThemeProvider>\n                        </ExtensionProvider>\n                    </AnalyticsProvider>\n                </CheckoutProvider>\n            </LocaleProvider>\n        </ErrorBoundary>\n    );\n};\n\nexport default CheckoutApp;\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    BigCommercePaymentsPayPal = 'bigcommerce_payments_paypal',\n    BigCommercePaymentsPayLater = 'bigcommerce_payments_paylater',\n    BigCommercePaymentsCreditCards = 'bigcommerce_payments_creditcards',\n    BigCommercePaymentsAlternativeMethod = 'bigcommerce_payments_apms',\n    BigCommercePaymentsVenmo = 'bigcommerce_payments_venmo',\n    BigCommercePaymentsFastLane = 'bigcommerce_payments_fastlane',\n    BigCommercePaymentsGooglePay = 'googlepay_bigcommerce_payments',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    Ratepay = 'ratepay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeOCSGooglePay = 'googlepaystripeocs',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n    TdOnlineMartGooglePay = 'googlepaytdonlinemart',\n}\n\nexport default PaymentMethodId;\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, type LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    additionalClassName?: string;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    additionalClassName,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label',\n            additionalClassName,\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import { type CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName: string, methodId: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n    walletButtonClick(methodId: string): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","import { Field, type FieldConfig, type FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    createElement,\n    type FunctionComponent,\n    memo,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest}>{renderInnerField}</Field>;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId, meta }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    meta={meta}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\nconst InnerFieldInput: FunctionComponent<InnerFieldInputProps> = ({\n    field,\n    onChange = noop,\n    component = 'input',\n    render,\n    ...props\n}) => {\n    const prevValueRef = useRef<unknown>(field.value);\n\n    useEffect(() => {\n         \n        const comparableValue = isDate(field.value) ? field.value.getTime() : field.value;\n        const comparablePrevValue = isDate(prevValueRef.current)\n            ? prevValueRef.current.getTime()\n            : prevValueRef.current;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(field.value);\n        }\n\n        prevValueRef.current = field.value;\n    }, [field.value, onChange]);\n\n    if (render) {\n        return render({ field, ...props });\n    }\n\n    if (typeof component === 'string') {\n        return createElement(component, field);\n    }\n\n     \n    return createElement(component as any, { field, ...props });\n};\n\nexport default memo(BasicFormField);\n","import { ErrorMessage } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '../contexts';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const renderMessage = useCallback(\n        (message: string) => (\n            <ul className=\"form-field-errors\" data-test={testId}>\n                <li className=\"form-field-error\">\n                    <label\n                        aria-live=\"polite\"\n                        className=\"form-inlineMessage\"\n                        htmlFor={name}\n                        id={errorId}\n                        role=\"alert\"\n                    >\n                        {message}\n                    </label>\n                </li>\n            </ul>\n        ),\n        [errorId, name, testId],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) =>\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\n            }\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import { type FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback } from 'react';\n\nimport { BasicFormField } from '../BasicFormField';\nimport { FormFieldError } from '../FormFieldError';\nimport { Label } from '../Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        (props: FieldProps<string>) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label !== undefined && (typeof label === 'function' ? label(name) : label)}\n                {labelContent !== undefined && !label && (\n                    <Label\n                        additionalClassName={themeV2 ? 'floating-form-field-label' : ''}\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [isFloatingLabelEnabled, input, label, name, labelContent, themeV2, id, footer],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { type RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { type ReactElement, type ReactNode, type SyntheticEvent } from 'react';\n\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isHtmlError from './isHtmlError';\nimport isRequestError from './isRequestError';\n\nimport { type CustomError } from './index';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError | CustomError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nconst ErrorModal = ({\n    error,\n    message = error && error.message,\n    onClose = noop,\n    shouldShowErrorCode = true,\n    title = error && isCustomError(error) && error.title,\n}: ErrorModalProps): ReactElement => {\n    const aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    const handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n\n    const renderHeader = (): ReactNode => (\n        <ModalHeader>\n            <IconError\n                additionalClassName=\"icon--error modal-header-icon\"\n                size={IconSize.Small}\n            />\n            <span aria-live=\"assertive\" role=\"alert\">\n                {title || <TranslatedString id=\"common.error_heading\" />}\n            </span>\n        </ModalHeader>\n    );\n\n    const renderBody = (): ReactNode => (\n        <>\n            {error && isHtmlError(error) &&\n                <TranslatedHtml id={error.data.translationKey} />\n            }\n            {message && (\n                <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                    {message}\n                </p>\n            )}\n\n            <div className=\"optimizedCheckout-contentSecondary\">{renderErrorCode()}</div>\n        </>\n    );\n\n    const renderFooter = (): ReactNode => (\n        <Button onClick={handleOnRequestClose} size={ButtonSize.Small}>\n            <TranslatedString id=\"common.ok_action\" />\n        </Button>\n    );\n\n    const renderErrorCode = (): ReactNode => {\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    };\n\n    return (\n        <Modal\n            additionalModalClassName=\"modal--error\"\n            aria={aria}\n            footer={renderFooter()}\n            header={renderHeader()}\n            isOpen={!!error}\n            onRequestClose={handleOnRequestClose}\n        >\n            {renderBody()}\n        </Modal>\n    );\n};\n\nexport default ErrorModal;\n","import { type CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\n\nexport default function isHtmlError(error: Error): error is CustomError {\n\n    return 'type' in error &&\n        error.type === 'custom' &&\n        'data' in error &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        'shouldBeTranslatedAsHtml' in error.data &&\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\n}\n","import { type Address, type FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(\n    address: Address,\n    formFields: FormField[],\n): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, type ObjectSchema, string, type StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    type FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label, maxLength }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name }));\n                }\n\n                if ((name === 'address1' || name === 'address2') && maxLength) {\n                    schema[name] = schema[name]\n                        .max(maxLength, translate('max', { label, name, max: maxLength }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n                // eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { type FormField, type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { type ObjectSchema } from 'yup';\n\nimport {\n    type FormFieldValues,\n    getFormFieldsValidationSchema,\n    type TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_min_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","enum DynamicFormFieldType {\n    TELEPHONE = 'tel',\n    DROPDOWM = 'dropdown',\n    NUMBER = 'number',\n    PASSWORD = 'password',\n    CHECKBOX = 'checkbox',\n    MULTILINE = 'multiline',\n    DATE = 'date',\n    RADIO = 'radio',\n    TEXT = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, type InputHTMLAttributes, type Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalFastlane: FunctionComponent = () => (\n    <svg viewBox=\"0 0 101 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M.009 9.791 1.653.298C1.681.1 1.805 0 1.997 0H7.74c.22 0 .332.141.29.354l-.236 1.334c-.028.185-.152.298-.344.298H3.627l-.359 2.058h3.479c.22 0 .332.142.29.354l-.221 1.306C6.788 5.9 6.664 6 6.472 6H2.936l-.662 3.847c-.028.198-.152.298-.344.298H.298c-.22 0-.332-.142-.289-.354m6.78-1.49c0-1.844 1.905-2.468 3.906-2.71.234-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.035.269-1.23.796-.068.185-.18.27-.358.27H7.975c-.18 0-.304-.085-.304-.241 0-.044.014-.086.028-.128.441-1.334 1.67-2.186 3.507-2.186s2.843.71 2.843 2.428c0 .326-.04.739-.11 1.122l-.373 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.11.341-.318.341h-1.283c-.192 0-.304-.1-.304-.282 0-.17.04-.37.069-.554-.524.539-1.2.978-2.402.978-1.42 0-2.332-.725-2.332-1.986zm5.036-1.205.054-.256-.372.041c-.746.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.504-.78 1.725-1.773zm2.446 1.36c-.04-.17-.07-.297-.07-.438 0-.242.124-.313.318-.313h1.588c.192 0 .29.1.332.298.152.554.607.795 1.284.795.773 0 1.186-.326 1.186-.751 0-.369-.415-.54-1.104-.752l-.813-.256c-1.173-.369-2.14-.795-2.14-2.115 0-1.603 1.475-2.483 3.423-2.483 1.519 0 2.762.412 3.12 1.986.015.07.029.141.029.226 0 .142-.124.198-.318.198h-1.504c-.18 0-.276-.085-.36-.27-.165-.37-.538-.596-1.13-.596-.691 0-1.036.27-1.036.653s.332.554 1.284.852l.539.17c1.243.398 2.278.866 2.278 2.059 0 1.732-1.519 2.639-3.59 2.639-1.602 0-2.996-.468-3.313-1.902h-.005zm7.786.455c0-.269.04-.483.083-.725l.676-3.888h-.745c-.22 0-.332-.141-.29-.354l.166-.951c.029-.185.152-.298.344-.298h.8l.29-1.717c.028-.198.152-.298.344-.298h1.519c.22 0 .332.142.29.354l-.29 1.661h.966c.22 0 .332.142.29.356l-.166.951c-.029.186-.152.298-.345.298h-1.02l-.442 2.54c-.083.483-.152.851-.152 1.149 0 .468.152.624.47.624.124 0 .235-.015.318-.015.22 0 .29.17.249.383l-.152.922c-.055.356-.263.412-.76.412-1.297 0-2.443-.071-2.443-1.405m3.995.88 1.63-9.493C27.71.1 27.834 0 28.026 0h1.519c.22 0 .332.141.29.354l-1.643 9.493c-.028.198-.152.298-.344.298h-1.505c-.221 0-.332-.141-.29-.354zm3.147-1.49c0-1.844 1.905-2.468 3.906-2.71.235-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.034.269-1.229.796-.069.185-.18.27-.359.27h-1.407c-.18 0-.304-.085-.304-.241 0-.044.015-.086.028-.128.442-1.334 1.67-2.186 3.508-2.186 1.837 0 2.843.71 2.843 2.428 0 .326-.04.739-.112 1.122l-.372 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.111.341-.318.341h-1.284c-.192 0-.303-.1-.303-.282 0-.17.04-.37.068-.554-.524.539-1.2.978-2.401.978-1.422 0-2.333-.725-2.333-1.986V8.3m4.914-1.205.055-.256-.373.041c-.745.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.505-.78 1.725-1.773zm2.475 2.695 1.16-6.798c.028-.2.152-.298.344-.298h1.421c.22 0 .318.142.275.356l-.11.666c.357-.524 1.13-1.193 2.4-1.193 1.382 0 2.182.88 2.182 2.256 0 .269-.029.54-.083.866l-.731 4.2c-.028.198-.152.298-.344.298h-1.519c-.22 0-.332-.141-.29-.353l.566-3.25c.083-.482.11-.851.11-1.121 0-.766-.274-1.179-.95-1.179-.898 0-1.436.725-1.671 2.086l-.608 3.52c-.028.197-.152.297-.344.297h-1.519c-.22 0-.332-.141-.29-.353m8.063-2.824c0-2.384 1.588-4.456 4.35-4.456 2.14 0 3.45 1.22 3.45 3.42 0 .256-.014.483-.04.71-.028.2-.152.297-.344.297h-5.233c.028 1.051.496 1.689 1.56 1.689.538 0 .91-.198 1.214-.51a.47.47 0 0 1 .387-.186h1.67c.193 0 .305.057.305.2 0 .042-.015.1-.069.198-.705 1.25-1.836 2.071-3.671 2.071-2.098 0-3.576-1.178-3.576-3.434zm5.591-1.405c0-.908-.484-1.476-1.421-1.476-1.009 0-1.616.71-1.78 1.476h3.203zm34.293-.611-1.504 2.6-.764-2.579a.195.195 0 0 0-.185-.141h-1.355a.15.15 0 0 0-.14.195l1.367 4.343-1.236 2.046c-.06.099.009.227.123.227h1.462a.24.24 0 0 0 .206-.12l3.817-6.465a.148.148 0 0 0-.126-.225h-1.46a.23.23 0 0 0-.204.119zM62.935 12c-.135 0-.206-.063-.206-.168 0-.032.01-.074.03-.116l.66-1.613-1.947-5.21c-.03-.084-.052-.126-.052-.189 0-.105.083-.136.216-.136h.7c.135 0 .227.073.268.2l.937 2.816c.176.527.299.886.433 1.329h.02c.176-.517.268-.823.454-1.36l.957-2.785q.078-.202.278-.2h.629c.134 0 .227.041.227.147a.5.5 0 0 1-.052.169l-2.699 6.927c-.051.127-.134.19-.268.19h-.587zm-4.082-1.772c-.927 0-1.524-.422-1.833-.906v.537c0 .158-.083.243-.237.243h-.505c-.154 0-.237-.085-.237-.243V2.803c0-.158.083-.243.237-.243h.577c.154 0 .237.085.237.243v1.381c0 .38 0 .697-.01 1.086.308-.454.906-.875 1.761-.875 1.535 0 2.523 1.244 2.523 2.921s-1.03 2.911-2.513 2.911m-.205-.876c1.009 0 1.596-.801 1.596-2.025s-.597-2.035-1.606-2.035-1.606.855-1.606 2.035.597 2.025 1.617 2.025zm12.82-1.666c1.397 0 2.58-1.043 2.796-2.454.218-1.424-.87-2.666-2.408-2.67h-2.482a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.194zm1.1-2.52c-.082.527-.479.915-1.24.915h-.972l.294-1.916h.955c.788 0 1.044.475.962 1zm7.386-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.656 1.918 0 0-.638 1.929.803 2.988 0 0 1.336 1.019 2.842-.063l-.026.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.182.182 0 0 0-.178-.214zm-1.831 2.72c-.108.705-.675 1.225-1.4 1.225a1.3 1.3 0 0 1-.393-.058c-.537-.178-.844-.705-.757-1.28.108-.706.676-1.226 1.403-1.226q.216 0 .392.06c.54.178.843.707.755 1.28zm11.3.136c1.396 0 2.58-1.043 2.795-2.454.218-1.424-.87-2.666-2.408-2.67h-2.48a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.19v.002zm1.101-2.52c-.082.527-.478.915-1.239.915h-.972l.294-1.916h.955c.786 0 1.043.475.962 1zm7.387-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.655 1.918 0 0-.639 1.929.803 2.988 0 0 1.337 1.019 2.842-.063l-.027.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.183.183 0 0 0-.18-.214m-1.831 2.72c-.109.705-.674 1.225-1.4 1.225q-.216 0-.392-.058c-.537-.178-.845-.705-.757-1.28.108-.706.677-1.226 1.402-1.226q.216 0 .392.06c.537.178.843.707.756 1.28zm3.233-4.82L98.206 9.92a.18.18 0 0 0 .178.212h1.314a.2.2 0 0 0 .192-.169l1.107-7.19a.18.18 0 0 0-.178-.213h-1.315a.2.2 0 0 0-.191.17\"\n            fill=\"#333333\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalFastlane);\n","import React from 'react';\n\nimport { IconPayPalFastlane } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPayPalFastlaneLabel.scss';\n\nconst PoweredByPayPalFastlaneLabel = () => (\n    <div className=\"powered-by-paypal-fastlane\" data-test=\"paypal-fastlane-icon\">\n        <IconPayPalFastlane />\n    </div>\n);\n\nexport default PoweredByPayPalFastlaneLabel;\n","import classNames from 'classnames';\nimport React, { forwardRef, type ReactNode, type Ref } from 'react';\n\nimport Input, { type InputProps } from './Input';\nimport Label from './Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, testId, themeV2 = false, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                testId={testId}\n                type=\"checkbox\"\n            />\n            <Label additionalClassName={themeV2 ? 'body-regular' : ''} htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import { type FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport CheckboxInput from './CheckboxInput';\nimport FormFieldError from './FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n    testId?: string;\n    themeV2?: boolean;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n    testId,\n    themeV2 = false,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                    testId={testId}\n                    themeV2={themeV2}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isPayPalFastlaneCustomer from './is-paypal-fastlane-customer';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\n\nconst usePayPalFastlaneAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getPaymentProviderCustomer } = checkoutState.data;\n    const paymentWithCustomCheckout: string =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const isPayPalFastlaneEnabled = isPayPalFastlaneMethod(paymentWithCustomCheckout);\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const paymentProviderCustomer = getPaymentProviderCustomer() || undefined;\n    const paypalFastlaneCustomer = isPayPalFastlaneCustomer(paymentProviderCustomer)\n        ? paymentProviderCustomer\n        : {};\n\n    const customerAuthenticationState = paypalFastlaneCustomer.authenticationState;\n    const paypalFastlaneAddresses = paypalFastlaneCustomer.addresses || [];\n\n    const shouldShowPayPalFastlaneLabel =\n        paypalFastlaneAddresses.length > 0 && isPayPalFastlaneEnabled;\n\n    const shouldShowPayPalFastlaneShippingForm =\n        paypalFastlaneAddresses.length > 0 &&\n        customerAuthenticationState &&\n        customerAuthenticationState !== 'CANCELED' &&\n        customerAuthenticationState !== 'unrecognized';\n\n    return {\n        isPayPalFastlaneEnabled,\n        paypalFastlaneAddresses,\n        shouldShowPayPalFastlaneLabel,\n        shouldShowPayPalFastlaneShippingForm,\n    };\n};\n\nexport default usePayPalFastlaneAddress;\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import { type CheckoutSelectors, type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import React, { type FunctionComponent, memo } from 'react';\nimport Media, { type MediaQueryObject, type MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","import React, { type FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\ninterface QueryResults {\n    [key: string]: boolean;\n}\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: QueryResults) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","/* istanbul ignore file */\n\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, memo, type MouseEvent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './MultiCheckboxControl.scss';\n\nexport interface MultiCheckboxControlProps {\n    testId?: string;\n    themeV2?: boolean;\n    onSelectedAll(): void;\n    onSelectedNone(): void;\n}\n\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\n    testId,\n    onSelectedAll,\n    onSelectedNone,\n    themeV2 = false,\n}) => {\n    const handleSelectAllClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedAll();\n        },\n        [onSelectedAll],\n    );\n\n    const handleSelectNoneClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedNone();\n        },\n        [onSelectedNone],\n    );\n\n    return (\n        <ul className={classNames('multiCheckbox--controls', { 'body-regular': themeV2 })}>\n            <li className=\"multiCheckbox--control\">\n                <TranslatedString id=\"address.select\" />\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-all-button`}\n                    href=\"#\"\n                    onClick={handleSelectAllClick}\n                >\n                    <TranslatedString id=\"address.select_all\" />\n                </a>\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-none-button`}\n                    href=\"#\"\n                    onClick={handleSelectNoneClick}\n                >\n                    <TranslatedString id=\"address.select_none\" />\n                </a>\n            </li>\n        </ul>\n    );\n};\n\nexport default memo(MultiCheckboxControl);\n","import { type FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport { FieldArray, type FieldArrayRenderProps, getIn } from 'formik';\nimport { difference, kebabCase, noop, pick } from 'lodash';\nimport React, {\n    type ChangeEvent,\n    type FunctionComponent,\n    memo,\n    type ReactNode,\n    useCallback,\n} from 'react';\n\nimport { FormFieldContainer } from '../FormFieldContainer';\nimport { FormFieldError } from '../FormFieldError';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport MultiCheckboxControl from './MultiCheckboxControl';\n\nexport interface CheckboxGroupFormFieldProps {\n    id: string;\n    label: ReactNode;\n    name: string;\n    options: FormFieldItem[];\n    themeV2?: boolean;\n    onChange?(values: string[]): void;\n}\n\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\n\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\n    form: { values, errors },\n    id,\n    label,\n    name,\n    onChange = noop,\n    options,\n    push,\n    remove,\n    themeV2,\n}) => {\n    const handleSelectAll = useCallback(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        difference(\n            options.map(({ value }) => value),\n            checkedValues,\n        ).forEach((val) => push(val));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, options, push, values]);\n\n    const handleSelectNone = useCallback(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        checkedValues.forEach(() => remove(0));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, remove, values]);\n\n    const handleInputChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const checkedValues: string[] = getIn(values, name) || [];\n            const { value, checked } = event.target;\n\n            if (checked) {\n                push(value);\n            } else {\n                remove(checkedValues.indexOf(value));\n            }\n\n            onChange(getIn(values, name));\n        },\n        [name, onChange, push, remove, values],\n    );\n\n    return (\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\n            {label}\n\n            {options.length > 1 && (\n                <MultiCheckboxControl\n                    onSelectedAll={handleSelectAll}\n                    onSelectedNone={handleSelectNone}\n                    testId={id}\n                    themeV2={themeV2}\n                />\n            )}\n\n            <DynamicInput\n                fieldType={DynamicFormFieldType.CHECKBOX}\n                id={id}\n                name={name}\n                onChange={handleInputChange}\n                options={options}\n                themeV2={themeV2}\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                value={getIn(values, name) || []}\n            />\n\n            <FormFieldError\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                errorId={`${id ?? name}-field-error-message`}\n                name={name}\n                testId={`${kebabCase(name)}-field-error-message`}\n            />\n        </FormFieldContainer>\n    );\n};\n\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\n    id,\n    label,\n    name,\n    onChange,\n    options,\n    themeV2,\n}) => {\n    const renderField = useCallback(\n        (renderProps: FieldArrayRenderProps) => (\n            <MultiCheckboxFormField\n                id={id}\n                label={label}\n                name={name}\n                onChange={onChange}\n                options={options}\n                themeV2={themeV2}\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\n            />\n        ),\n        [id, label, name, onChange, options, themeV2],\n    );\n\n    return <FieldArray name={name} render={renderField} />;\n};\n\nexport default memo(CheckboxGroupFormField);\n","import { type FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { type FieldProps } from 'formik';\nimport { includes } from 'lodash';\nimport React, { type FunctionComponent, memo, type ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField } from '../FormField';\nimport { Label } from '../Label';\n\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\n\nexport interface DynamicFormFieldOption {\n    code: string;\n    name: string;\n}\n\nexport interface DynamicFormFieldProps {\n    field: FormFieldType;\n    inputId?: string;\n    extraClass?: string;\n    autocomplete?: string;\n    parentFieldName?: string;\n    placeholder?: string;\n    label?: ReactNode;\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n    onChange?(value: string | string[]): void;\n}\n\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\n    field: {\n        fieldType,\n        type,\n        secret,\n        name,\n        label: fieldLabel,\n        required,\n        options,\n        max,\n        min,\n        maxLength,\n    },\n    parentFieldName,\n    onChange,\n    placeholder,\n    inputId,\n    autocomplete,\n    label,\n    extraClass,\n    isFloatingLabelEnabled,\n    themeV2 = false,\n}) => {\n    const fieldInputId = inputId || name;\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\n    const isFloatingLabelSupportedFieldType = Boolean(\n        isFloatingLabelEnabled &&\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\n                !fieldType),\n    );\n    const labelComponent = useMemo(() => {\n        let labelClassName = '';\n\n        if (themeV2) {\n            if (isFloatingLabelSupportedFieldType) {\n                labelClassName = 'floating-form-field-label';\n            } else {\n                labelClassName = 'body-medium';\n            }\n        }\n\n        return (\n            <Label\n                additionalClassName={labelClassName}\n                htmlFor={fieldInputId}\n                id={`${fieldInputId}-label`}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n            >\n                {label || fieldLabel}\n                {!required && (\n                    <>\n                        {' '}\n                        <small className=\"optimizedCheckout-contentSecondary\">\n                            <TranslatedString id=\"common.optional_text\" />\n                        </small>\n                    </>\n                )}\n            </Label>\n        );\n    }, [themeV2, fieldInputId, isFloatingLabelSupportedFieldType, label, fieldLabel, required]);\n\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\n        if (fieldType === 'text') {\n            if (type === 'integer') {\n                return DynamicFormFieldType.NUMBER;\n            }\n\n            if (includes(name, 'phone') || includes(name, 'tel')) {\n                return DynamicFormFieldType.TELEPHONE;\n            }\n\n            return secret ? DynamicFormFieldType.PASSWORD : DynamicFormFieldType.TEXT;\n        }\n\n        return fieldType as DynamicFormFieldType;\n    }, [fieldType, type, secret, name]);\n\n    const renderInput = useCallback(\n        ({ field }: FieldProps<string>) => (\n            <DynamicInput\n                {...field}\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\n                autoComplete={autocomplete}\n                fieldType={dynamicFormFieldType}\n                id={fieldInputId}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                max={max}\n                maxLength={maxLength || undefined}\n                min={min}\n                options={options && options.items}\n                placeholder={placeholder || (options && options.helperLabel)}\n                rows={options?.rows}\n                themeV2={themeV2}\n            />\n        ),\n        [\n            fieldInputId,\n            autocomplete,\n            dynamicFormFieldType,\n            isFloatingLabelSupportedFieldType,\n            max,\n            maxLength,\n            min,\n            options,\n            placeholder,\n            themeV2,\n        ],\n    );\n\n    return (\n        <div\n            className={classNames(\n                'dynamic-form-field',\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\n                extraClass,\n            )}\n        >\n            {fieldType === DynamicFormFieldType.CHECKBOX ? (\n                <CheckboxGroupFormField\n                    id={fieldInputId}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                    options={(options && options.items) || []}\n                    themeV2={themeV2}\n                />\n            ) : (\n                <FormField\n                    id={fieldInputId}\n                    input={renderInput}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default memo(DynamicFormField);\n","import classNames from 'classnames';\nimport React, { type FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n    themeV2?: boolean;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    themeV2 = false,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n            { 'sub-header': themeV2 && !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import classNames from 'classnames';\nimport React, { type ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, {\n    type ComponentType,\n    type Context,\n    type FunctionComponent,\n    memo,\n    useContext,\n    useMemo,\n} from 'react';\nimport { type Omit } from 'utility-types';\n\nimport { type MatchedProps } from './InjectHoc';\nimport type { MappableInjectHoc, MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","import { type ReactNode, useState } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children: (props: { toggle: any; isOpen: boolean }) => ReactNode;\n}\n\nconst Toggle = ({ openByDefault, children }: ToggleProps): ReactNode => {\n    const [isOpen, setIsOpen] = useState(Boolean(openByDefault));\n\n    const toggle = (event: Event) => {\n        event.preventDefault();\n        setIsOpen(!isOpen);\n    };\n\n    return children({ isOpen, toggle });\n};\n\nexport default Toggle;\n","import classNames from 'classnames';\nimport React, { type ButtonHTMLAttributes, type FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import {\n    type Address,\n    type AddressRequestBody,\n    type BillingAddress,\n    type CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalFastlaneAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalFastlaneAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalFastlaneAddress));\n\nconst isPayPalFastlaneAddress = (address: Address, addresses?: Address[]): boolean => {\n    if (!addresses || addresses.length === 0) {\n        return false;\n    }\n\n    return addresses.some((paypalFastlaneAddress) =>\n        isEqualToPayPalFastlaneAddress(address, paypalFastlaneAddress),\n    );\n};\n\nexport default isPayPalFastlaneAddress;\n","export default function getNestedValue(obj: any, path: string): any {\n  return path.split('.').reduce((acc, key) => acc && acc[key], obj);\n}\n","import { ErrorMessage, useFormikContext } from 'formik';\nimport React, { type FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nimport { getNestedValue } from '../../common/utility';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const formikContext = useFormikContext<{ [key: string]: any }>();\n\n    const hasError = getNestedValue(formikContext?.errors, name) && getNestedValue(formikContext?.touched, name);\n\n    const renderMessage = useCallback(\n        (message: string) => (\n            <label\n                aria-live=\"polite\"\n                className=\"form-inlineMessage\"\n                htmlFor={name}\n                id={errorId}\n                role=\"alert\"\n            >\n                {message}\n            </label>\n        ),\n        [errorId, name],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) => (\n                <ul className=\"form-field-errors\" data-test={testId}>\n                    <li className=\"form-field-error\">\n                        {(hasError && isSubmitted) ? <ErrorMessage name={name} render={renderMessage} /> :\n                            <span\n                                aria-hidden=\"true\"\n                                className=\"is-srOnly\"\n                                id={errorId}\n                            />\n                        }\n                    </li>\n                </ul>\n            )}\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import DOMPurify from 'dompurify';\nimport React, { type FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import React, { type FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { type EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { type EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport type EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","import { type ComponentType } from 'react';\n\ninterface ResolveResult {\n    name: string;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveLazyComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n    registry: Record<string, readonly TResolveId[]>,\n): ComponentType<TProps> | undefined {\n    const results: ResolveResult[] = [];\n\n    for (const [name, resolveIds] of Object.entries(registry)) {\n        for (const resolverId of resolveIds) {\n            const result = { name, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .find((result) => result.matches > 0);\n\n    const matchedName = matched?.name ?? results.find((result) => result.default)?.name;\n\n    if (matchedName) {\n        return components[matchedName];\n    }\n}\n","import { type Cart, type Consignment } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport findLineItems from './findLineItems';\nimport getLineItemsCount from './getLineItemsCount';\n\nexport interface StaticConsignmentItemListProps {\n    consignment: Consignment;\n    cart: Cart;\n}\n\nconst StaticConsignmentItemList: FunctionComponent<StaticConsignmentItemListProps> = ({\n    cart,\n    consignment,\n}) => {\n    const lineItems = findLineItems(cart, consignment);\n\n    return (\n        <div className=\"staticConsignment-items\">\n            <strong>\n                <TranslatedString\n                    data={{ count: getLineItemsCount(lineItems) }}\n                    id=\"cart.item_count_text\"\n                />\n            </strong>\n\n            <ul>\n                {lineItems.map((item) => (\n                    <li key={item.id}>{`${item.quantity} x ${item.name}`}</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(StaticConsignmentItemList);\n","import React, { type FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    type BodlEventsPayload,\n    type BodlService,\n    type BraintreeAnalyticTrackerService,\n    type CheckoutService,\n    createBodlService,\n    createBraintreeAnalyticTracker,\n    createPayPalCommerceAnalyticTracker,\n    createStepTracker,\n    type PayPalCommerceAnalyticTrackerService,\n    type StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { type ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { type AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n    const getBraintreeAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<BraintreeAnalyticTrackerService>(\n                createBraintreeAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n    const getPayPalCommerceAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<PayPalCommerceAnalyticTrackerService>(\n                createPayPalCommerceAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n        getBraintreeAnalyticTracker().customerPaymentMethodExecuted();\n        getPayPalCommerceAnalyticTracker().customerPaymentMethodExecuted();\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n        getBraintreeAnalyticTracker().selectedPaymentMethod(methodId);\n        getPayPalCommerceAnalyticTracker().selectedPaymentMethod(methodId);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n        getBraintreeAnalyticTracker().paymentComplete();\n        getPayPalCommerceAnalyticTracker().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const walletButtonClick = (methodId: string) => {\n        getBraintreeAnalyticTracker().walletButtonClick(methodId);\n        getPayPalCommerceAnalyticTracker().walletButtonClick(methodId);\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n        walletButtonClick,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","import { type CustomerInitializeOptions, type CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { type ReactElement, useEffect } from 'react';\n\nconst WALLET_BUTTON_HEIGHT = 36;\n\nexport interface CheckoutButtonProps {\n    containerId: string;\n    methodId: string;\n    isShowingWalletButtonsOnTop?: boolean;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nconst CheckoutButton = ({\n    containerId,\n    methodId,\n    isShowingWalletButtonsOnTop,\n    deinitialize,\n    initialize,\n    onError,\n    onClick = noop,\n}: CheckoutButtonProps): ReactElement => {\n    useEffect(() => {\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\n            : {};\n\n        initialize({\n            methodId,\n            [methodId]: {\n                ...heightOption,\n                container: containerId,\n                onError,\n                onClick: () => onClick(methodId),\n            },\n        });\n\n        return () => {\n            deinitialize({ methodId });\n        };\n    }, []);\n\n    return <div data-test={containerId} id={containerId} />;\n};\n\nexport default CheckoutButton;\n","import {\n    type ExtensionAction,\n    ExtensionActionType,\n    type ExtensionState,\n} from './ExtensionProvider';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            if (typeof action.payload === 'boolean') {\n                return { ...state, isShowingLoadingIndicator: action.payload };\n            }\n\n            break;\n\n        case ExtensionActionType.RE_RENDER_SHIPPING_FORM:\n            if (typeof action.payload === 'number') {\n                return { ...state, shippingFormRenderTimestamp: action.payload };\n            }\n\n            break;\n\n        default:\n            return state;\n    }\n\n    return state;\n};\n","import { type CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { type ReactNode, useReducer } from 'react';\n\nimport { type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n    shippingFormRenderTimestamp: undefined | number;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean | number;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n    RE_RENDER_SHIPPING_FORM,\n}\n\nexport interface ExtensionProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n    errorLogger: ErrorLogger;\n}\n\nexport const ExtensionProvider = ({\n    checkoutService,\n    children,\n    errorLogger,\n}: ExtensionProviderProps) => {\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n        shippingFormRenderTimestamp: undefined,\n    });\n    const extensionService = new ExtensionService(checkoutService, dispatch, errorLogger);\n\n    const extensionValues = {\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingFormHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingForm> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingForm,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { type CommandHandler, type CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingStepHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingStep> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingStep,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionMessageType, ExtensionQueryType } from '@bigcommerce/checkout-sdk';\n\nimport { type QueryHandler, type QueryHandlerProps } from './QueryHandler';\n\nexport function createGetConsignmentHandler({\n    checkoutService,\n    extension,\n}: QueryHandlerProps): QueryHandler<ExtensionQueryType.GetConsignments> {\n    return {\n        queryType: ExtensionQueryType.GetConsignments,\n        handler: async (data) => {\n            if (!data.payload?.useCache) {\n                await checkoutService.loadCheckout();\n            }\n\n            const consignments = checkoutService.getState().data.getCheckout()?.consignments || [];\n\n            checkoutService.postMessageToExtension(extension.id, {\n                type: ExtensionMessageType.GetConsignments,\n                payload: {\n                    consignments,\n                },\n            });\n        },\n    };\n}\n","import {\n    type CheckoutService,\n    type Extension,\n    type ExtensionCommandMap,\n    type ExtensionQueryMap,\n    type ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport type React from 'react';\n\nimport { ErrorLevelType, type ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { type ExtensionAction } from './ExtensionProvider';\nimport { type CommandHandler, type QueryHandler } from './handler';\nimport * as commandHandlerFactories from './handler/commandHandlers';\nimport * as queryHandlerFactories from './handler/queryHandlers';\n\nexport class ExtensionService {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private dispatch: React.Dispatch<ExtensionAction>,\n        private errorLogger: ErrorLogger,\n    ) {}\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    preloadExtensions(): void {\n        const state = this.checkoutService.getState();\n        const extensions = state.data.getExtensions();\n        const cartId = state.data.getCart()?.id;\n        const parentOrigin = state.data.getConfig()?.links.siteLink;\n\n        if (!cartId || !parentOrigin) {\n            return;\n        }\n\n        extensions?.forEach((extension) => {\n            const url = new URL(extension.url);\n\n            url.searchParams.set('extensionId', extension.id);\n            url.searchParams.set('cartId', cartId);\n            url.searchParams.set('parentOrigin', parentOrigin);\n\n            const link = document.createElement('link');\n\n            link.rel = 'preload';\n            link.as = 'document';\n            link.href = url.toString();\n\n            const head = document.head;\n\n            head.appendChild(link);\n        });\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        try {\n            await this.checkoutService.renderExtension(container, region);\n\n            this.registerHandlers(extension);\n        } catch (error: unknown) {\n            if (error instanceof Error) {\n                this.errorLogger.log(\n                    error,\n                    { errorCode: 'checkoutExtension' },\n                    ErrorLevelType.Error,\n                    { extensionId: extension.id, region },\n                );\n            }\n        }\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        this.checkoutService.clearExtensionCache(region);\n\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(commandHandlerFactories).forEach((createCommandHandlerFactory) => {\n            const handlerFactory = createCommandHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n\n        Object.values(queryHandlerFactories).forEach((createQueryHandlerFactory) => {\n            const handlerFactory = createQueryHandlerFactory(handlerProps);\n\n            if (this.isQueryHandler(handlerFactory.queryType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionQuery(\n                        extension.id,\n                        handlerFactory.queryType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n\n    private isQueryHandler<T extends keyof ExtensionQueryMap>(\n        type: T,\n        handler: QueryHandler<any>,\n    ): handler is QueryHandler<T> {\n        return handler.queryType === type;\n    }\n}\n","import classNames from 'classnames';\nimport React, { forwardRef, type Ref } from 'react';\n\nimport Input, { type InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n    themeV2?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            themeV2 = false,\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n                { 'floating-form-field-input': themeV2 && isFloatingLabelEnabled },\n                { 'body-regular': themeV2 && !isFloatingLabelEnabled },\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import {\n    type CardInstrument,\n    type CustomerAddress,\n    type PaymentProviderCustomer,\n} from '@bigcommerce/checkout-sdk';\n\ninterface PayPalFastlaneCustomer {\n    authenticationState?: string;\n    addresses?: CustomerAddress[];\n    instruments?: CardInstrument[];\n}\n\nexport default function isPayPalFastlaneCustomer(\n    customer?: PaymentProviderCustomer,\n): customer is PayPalFastlaneCustomer {\n    if (!customer) {\n        return false;\n    }\n\n    return (\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\n    );\n}\n","import React, { type FunctionComponent, type ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n    <ErrorBoundary\n        fallback={\n            <div className=\"lazyContainer-error\">\n                <TranslatedString id=\"common.unstable_network_error\" />\n            </div>\n        }\n        filter={filterError}\n    >\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n    </ErrorBoundary>\n);\n\nexport default LazyContainer;\n","import {\n    type CheckoutPayment,\n    type GiftCertificateOrderPayment,\n    type OrderPayment,\n} from '@bigcommerce/checkout-sdk';\n\nexport default function isGiftCertificatePayment(\n    payment: OrderPayment | CheckoutPayment,\n): payment is GiftCertificateOrderPayment {\n    return payment.providerId === 'giftcertificate';\n}\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, type ReactNode } from 'react';\n\ninterface ModalHeaderProps {\n    children?: ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import { kebabCase } from 'lodash';\n\nexport default function getAppliedStyles(\n    element: HTMLElement,\n    properties: string[],\n    pseudoElementSelector?: string,\n): { [key: string]: string } {\n    const declaration = window.getComputedStyle(element, pseudoElementSelector);\n\n    return properties.reduce(\n        (result, propertyName) => ({\n            ...result,\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\n        }),\n        {},\n    );\n}\n","import { type CheckoutPayment, type OrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\n    return payment.providerId === 'storecredit';\n}\n","import { useContext } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const useExtensions = () => {\n    const extensionContext = useContext(ExtensionContext);\n\n    if (!extensionContext) {\n        throw new Error('useExtensions must be used within an <ExtensionProvider>');\n    }\n\n    return extensionContext;\n};\n","import classNames from 'classnames';\nimport React, { type FieldsetHTMLAttributes, forwardRef, type ReactNode, type Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBigCommercePaymentsFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.BigCommercePaymentsCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BigCommercePaymentsFastLane\n    );\n};\n\nexport default isBigCommercePaymentsFastlaneMethod;\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","import classNames from 'classnames';\nimport React, { forwardRef, type ReactNode, type Ref } from 'react';\n\nimport { Input, type InputProps } from '../Input';\nimport { Label } from '../Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n    themeV2?: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, themeV2, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    { 'floating-form-field-input': themeV2 },\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"checkbox\"\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import classNames from 'classnames';\nimport React, { type ButtonHTMLAttributes, type FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import React, { type FunctionComponent } from 'react';\n\nimport { isMobileView } from '../../utils';\n\nimport { CartSummarySkeleton } from './CartSummarySkeleton';\n\nconst OrderConfirmationPageSkeletonDesktop: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\">\n        <div className=\"layout-main\" data-test=\"order-confirmation-page-skeleton\">\n            <div className=\"order-confirmation-page-skeleton\">\n                <div className=\"thankyou\" />\n                <div className=\"line-1\" />\n                <div className=\"line-2\" />\n                <div className=\"continue\" />\n            </div>\n        </div>\n        <CartSummarySkeleton />\n    </div>\n);\n\nconst OrderConfirmationPageSkeletonMobile: FunctionComponent = () => (\n    <div className=\"layout optimizedCheckout-contentPrimary\">\n        <div className=\"layout-main\" data-test=\"order-confirmation-page-skeleton-mobile\">\n            <div className=\"order-confirmation-page-skeleton\">\n                <div className=\"thankyou\" />\n                <div className=\"text\">\n                    <div className=\"line\">\n                        <div className=\"animated-grey-box t1\" />\n                        <div className=\"animated-grey-box t2\" />\n                    </div>\n                    <div className=\"animated-grey-box first-line\" />\n                    <div className=\"animated-grey-box\" />\n                    <div className=\"line\">\n                        <div className=\"animated-grey-box t3\" />\n                        <div className=\"animated-grey-box t4\" />\n                    </div>\n                </div>\n                <div className=\"continue\" />\n            </div>\n        </div>\n        <div className=\"cartDrawer optimizedCheckout-orderSummary\">\n            <div className=\"checkout-page-skeleton--cartdrawer\">\n                <div className=\"product\">\n                    <div className=\"animated-grey-box figure\" />\n                    <div className=\"details\">\n                        <div className=\"animated-grey-box name\" />\n                        <div className=\"animated-grey-box description\" />\n                    </div>\n                </div>\n                <div className=\"animated-grey-box more\" />\n            </div>\n        </div>\n    </div>\n);\n\nconst OrderConfirmationPageSkeleton: FunctionComponent = () => {\n    return isMobileView() ? (\n        <OrderConfirmationPageSkeletonMobile />\n    ) : (\n        <OrderConfirmationPageSkeletonDesktop />\n    );\n};\n\nexport default OrderConfirmationPageSkeleton;\n","// copied from core package\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n\nlet query: MediaQueryList;\n\nexport function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","import { type Address, type Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\ninterface LocalizedGeography {\n    localizedCountry: string;\n    localizedProvince: string;\n}\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import { type LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, type InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","import React, { type FunctionComponent, type ReactNode } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LoadingOverlayProps {\n    isLoading: boolean;\n    hideContentWhenLoading?: boolean;\n    unmountContentWhenLoading?: boolean;\n    children?: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n    children,\n    hideContentWhenLoading,\n    loadingSkeleton,\n    unmountContentWhenLoading,\n    isLoading,\n}) => {\n    const loadingUI = loadingSkeleton || <LoadingSpinner isLoading={true} />;\n\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\n        return (\n            <>\n                {isLoading ? loadingUI : null}\n                {unmountContentWhenLoading && isLoading ? null : (\n                    <div\n                        style={{\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n                        }}\n                    >\n                        {children}\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"loadingOverlay-container\">\n            {children}\n            {isLoading && (\n                <div\n                    className=\"loadingOverlay optimizedCheckout-overlay\"\n                    data-test=\"loading-overlay\"\n                />\n            )}\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import { createContext, useContext } from 'react';\n\nexport interface ThemeContextProps {\n    themeV2: boolean;\n}\n\nconst ThemeContext = createContext<ThemeContextProps | undefined>(undefined);\n\nexport const useThemeContext = () => {\n    const themeContext = useContext(ThemeContext);\n\n    if (!themeContext) {\n        throw new Error('useThemeContext must be used within an <ThemeContextProvider>');\n    }\n\n    return themeContext;\n};\n\nexport default ThemeContext;\n","import { type RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { type SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import { type Address, type CheckoutPayment, type FormField } from '@bigcommerce/checkout-sdk';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nexport interface StaticBillingAddressProps {\n    address: Address;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n    fields: FormField[];\n    payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY }) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n        return (\n            <p>\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\n            </p>\n        );\n    }\n\n    return (\n        <>\n            <StaticAddress address={address} type={AddressType.Billing} />\n\n            {showPayPalFastlaneLabel && <PoweredByPayPalFastlaneLabel />}\n        </>\n    );\n};\n\nexport function mapToStaticBillingAddressProps(\n    { checkoutState }: CheckoutContextProps,\n    { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n    const {\n        data: { getBillingAddressFields, getCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n\n    return {\n        fields: getBillingAddressFields(address.countryCode),\n        payments: checkout && checkout.payments,\n    };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import {\n    type Address,\n    type CheckoutSelectors,\n    type Country,\n    type ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isEmpty } from 'lodash';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { localizeAddress } from '@bigcommerce/checkout/locale';\nimport { type CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n    address: Address;\n    type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n    countries?: Country[];\n}\n\nconst StaticAddress: FunctionComponent<\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\n    > = ({\n        countries,\n        address: addressWithoutLocalization,\n    }) => {\n\n    const { themeV2 } = useThemeContext();\n\n    const address = localizeAddress(addressWithoutLocalization, countries);\n    const isValid = !isEmpty(address);\n\n    return !isValid ? null : (\n        <div className=\"vcard checkout-address--static\" data-test=\"static-address\">\n            {(address.firstName || address.lastName) && (\n                <p className={classNames('fn address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n            )}\n\n            {(address.phone || address.company) && (\n                <p className={classNames('address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"company-name\">{`${address.company} `}</span>\n                    <span className=\"tel\">{address.phone}</span>\n                </p>\n            )}\n\n            <div className=\"adr\">\n                <p className={classNames('street-address address-entry',\n                    { 'body-regular': themeV2 })}>\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\n                    {address.address2 && (\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\n                    )}\n                </p>\n\n                <p className={classNames('address-entry',\n                    { 'body-regular': themeV2 })}>\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n                    {address.localizedProvince && (\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\n                    )}\n                    {address.postalCode && (\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\n                    )}\n                    {address.localizedCountry && (\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport function mapToStaticAddressProps(\n    context: CheckoutContextProps,\n    { type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n    const {\n        checkoutState: {\n            data: { getBillingCountries, getShippingCountries },\n        },\n    } = context;\n\n    return {\n        countries: type === AddressType.Billing\n            ? getBillingCountries()\n            : getShippingCountries(),\n    };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","import { type CurrencyService, type LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","import { type Cart } from '@bigcommerce/checkout-sdk';\n\n/**\n * Minimum charge amounts due to the Stripe documentation\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\n */\nenum stripeLinkMinAmount {\n    'USD' = 0.5,\n    'AED' = 2,\n    'AUD' = 0.5,\n    'BGN' = 1,\n    'BRL' = 0.5,\n    'CAD' = 0.5,\n    'CHF' = 0.5,\n    'CZK' = 15,\n    'DKK' = 2.5,\n    'EUR' = 0.5,\n    'GBP' = 0.3,\n    'HKD' = 4,\n    'HUF' = 175,\n    'INR' = 0.5,\n    'JPY' = 50,\n    'MXN' = 10,\n    'MYR' = 2,\n    'NOK' = 3,\n    'NZD' = 0.5,\n    'PLN' = 2,\n    'RON' = 2,\n    'SEK' = 3,\n    'SGD' = 0.5,\n    'THB' = 10,\n}\n\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\n    return code in stripeLinkMinAmount;\n};\n\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\n    const {\n        currency: { code },\n        cartAmount,\n    } = cart;\n\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default shouldUseStripeLinkByMinimumAmount;\n","export default function parseAnchor(text: string): string[] {\n    const div = document.createElement('div');\n\n    div.innerHTML = text;\n\n    const anchor = div.querySelector('a');\n\n    if (!anchor) {\n        return [];\n    }\n\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\n\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\n}\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","import { type LineItem } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\n}\n","import { type PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { type FunctionComponent, memo } from 'react';\n\nimport { useThemeContext } from '@bigcommerce/checkout/ui';\n\nimport { type MultiShippingTableItemWithType } from './MultishippingType';\n\nexport interface ConsignmentLineItemDetailProps {\n    lineItems: MultiShippingTableItemWithType[] | PhysicalItem[];\n    isMultiShippingSummary?: boolean;\n}\n\nconst renderProductOptionDetails = (item: MultiShippingTableItemWithType | PhysicalItem) => {\n    if (!item.options || !item.options.length) {\n        return null;\n    }\n\n    return (<span className=\"line-item-options\">{` - ${item.options.map(option => option.value).join(' / ')}`}</span>);\n}\n\nexport const renderItemContent = (item: MultiShippingTableItemWithType | PhysicalItem, themeV2 = false, isMultiShippingSummary = false) => {\n    return <span\n        className={classNames(\n            { 'body-regular': themeV2 && !isMultiShippingSummary },\n            { 'sub-text': themeV2 && isMultiShippingSummary },)\n        }>\n        <span className={classNames(\n            { 'body-bold': themeV2 && !isMultiShippingSummary },\n            { 'sub-text-bold': themeV2 && isMultiShippingSummary },)\n        }>\n            {`${item.quantity} x `}\n        </span>\n        {item.name}\n        {renderProductOptionDetails(item)}\n    </span>;\n};\n\nconst ConsignmentLineItemDetail: FunctionComponent<ConsignmentLineItemDetailProps> = ({\n    lineItems,\n    isMultiShippingSummary = false,\n}) => {\n    const { themeV2 } = useThemeContext();\n\n    return (\n        <ul className=\"consignment-line-item-list\">\n        {lineItems.map((item) => (\n            <li key={item.id}>\n                {renderItemContent(item, themeV2, isMultiShippingSummary)}\n            </li>\n        ))}\n    </ul>\n    );\n};\n\nexport default memo(ConsignmentLineItemDetail);\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { type CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { type OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import isBigCommercePaymentsFastlaneMethod from './is-bigcommerce-payments-fastlane-method';\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\n\nconst isPaypalFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        isBraintreeFastlaneMethod(methodId) ||\n        isPayPalCommerceFastlaneMethod(methodId) ||\n        isBigCommercePaymentsFastlaneMethod(methodId)\n    );\n};\n\nexport default isPaypalFastlaneMethod;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPayPalCommerceFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.PaypalCommerceCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\n    );\n};\n\nexport default isPayPalCommerceFastlaneMethod;\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import {\n    createLanguageService,\n    type LanguageConfig,\n    type LanguageService,\n} from '@bigcommerce/checkout-sdk';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import { type CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { FormContext } from '../contexts';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children?: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import React, { type FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n    isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div\n            aria-busy=\"true\"\n            className=\"loadingSpinner loadingOverlay-container\"\n            role=\"status\"\n            style={{ height: 100 }}\n        >\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n        </div>\n    );\n};\n\nexport default memo(LoadingSpinner);\n","import React, { type ReactNode } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport ThemeContext from './ThemeContext';\n\nexport interface ThemeProviderProps {\n    children?: ReactNode;\n}\n\nexport const ThemeProvider = ({ children }: ThemeProviderProps) => {\n    const {\n        checkoutState: {\n            data: { getConfig },\n        },\n    } = useCheckout();\n\n    const config = getConfig();\n\n    let useNewTheme = false;\n\n    if (config) {\n        useNewTheme = Boolean(\n            config.checkoutSettings.features['CHECKOUT-7962.update_font_style_on_checkout_page'] ??\n                true,\n        );\n    }\n\n    const themeV2 =\n        (window.location.search && window.location.search.includes('v2')) || useNewTheme;\n\n    return <ThemeContext.Provider value={{ themeV2 }}>{children}</ThemeContext.Provider>;\n};\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBraintreeFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isBraintreeFastlaneMethod;\n","import { type CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isExperimentEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n    experimentName: string,\n    fallbackValue = true\n): boolean {\n    return Boolean(checkoutSettings?.features[experimentName] ?? fallbackValue);\n}\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import { type RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import { createContext } from 'react';\n\nimport { type ExtensionState } from './ExtensionProvider';\nimport { type ExtensionService } from './ExtensionService';\n\nexport interface ExtensionContextProps {\n    extensionService: ExtensionService;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\n\nexport enum ExtensionRegionContainer {\n    ShippingShippingAddressFormBefore = 'extension-region-shipping-shippingaddressform-before',\n    ShippingShippingAddressFormAfter = 'extension-region-shipping-shippingaddressform-after',\n    ShippingSelectedShippingMethod = 'extension-region-shipping-selectedshippingmethod',\n    PaymentPaymentMethodListBefore = 'extension-region-payment-paymentmethodlist-before',\n    SummaryAfter = 'extension-region-summary-after',\n    SummaryLastItemAfter = 'extension-region-summary-lastitem-after',\n}\n\nexport const extensionRegionToContainerMap: Record<ExtensionRegion, ExtensionRegionContainer | ''> =\n    {\n        [ExtensionRegion.ShippingShippingAddressFormBefore]:\n            ExtensionRegionContainer.ShippingShippingAddressFormBefore,\n        [ExtensionRegion.ShippingShippingAddressFormAfter]:\n            ExtensionRegionContainer.ShippingShippingAddressFormAfter,\n        [ExtensionRegion.ShippingSelectedShippingMethod]:\n            ExtensionRegionContainer.ShippingSelectedShippingMethod,\n        [ExtensionRegion.PaymentPaymentMethodListBefore]:\n            ExtensionRegionContainer.PaymentPaymentMethodListBefore,\n        [ExtensionRegion.SummaryAfter]: ExtensionRegionContainer.SummaryAfter,\n        [ExtensionRegion.SummaryLastItemAfter]: ExtensionRegionContainer.SummaryLastItemAfter,\n        [ExtensionRegion.GlobalWebWorker]: '',\n    };\n","import { type ExtensionRegion } from '@bigcommerce/checkout-sdk';\nimport React, { type ReactNode, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { extensionRegionToContainerMap } from './ExtensionRegionContainer';\nimport { useExtensions } from './useExtensions';\n\ninterface ExtensionProps {\n    region: ExtensionRegion;\n}\n\nexport const Extension = ({ region }: ExtensionProps): ReactNode | null => {\n    const {\n        checkoutState: {\n            data: { getExtensions, getConfig, getCheckout },\n        },\n    } = useCheckout();\n    const extensions = getExtensions();\n    const config = getConfig();\n    const checkout = getCheckout();\n    const { extensionService } = useExtensions();\n    const isRegionEnabled =\n        extensions && config && checkout && extensionService.isRegionEnabled(region);\n    const containerId = extensionRegionToContainerMap[region];\n\n    useEffect(() => {\n        if (isRegionEnabled) {\n            void extensionService.renderExtension(containerId, region);\n\n            return () => {\n                extensionService.removeListeners(region);\n            };\n        }\n    }, [containerId, isRegionEnabled, region]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (isRegionEnabled && containerId !== '') {\n        return <div id={containerId} />;\n    }\n\n    return null;\n};\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { type FunctionComponent, type KeyboardEvent, type MouseEvent, type ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { type Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children?: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { type FunctionComponent, memo, type ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children?: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import {\n    type CheckoutService,\n    createCurrencyService,\n    type StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { type ReactNode, useEffect, useMemo, useState } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n    children?: ReactNode;\n}\n\nconst LocaleProvider: React.FC<LocaleProviderProps> = ({ checkoutService, children }) => {\n    const [config, setConfig] = useState<StoreConfig | undefined>();\n    const languageService = useMemo(() => getLanguageService(), []);\n\n    const getContextValue = memoizeOne((storeConfig?: StoreConfig) => {\n        return {\n            currency: storeConfig ? createCurrencyService(storeConfig) : undefined,\n            date: storeConfig\n                ? {\n                      inputFormat: storeConfig.inputDateFormat,\n                  }\n                : undefined,\n            language: languageService,\n        };\n    });\n\n    useEffect(() => {\n        const unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                setConfig(data.getConfig());\n            },\n            ({ data }) => data.getConfig(),\n        );\n\n        return () => {\n            unsubscribe();\n        };\n    }, [checkoutService]);\n\n    const contextValue = useMemo(() => getContextValue(config), [config, getContextValue]);\n\n    return <LocaleContext.Provider value={contextValue}>{children}</LocaleContext.Provider>;\n};\n\nexport default LocaleProvider;\n","import { type Consignment, type LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { Field, type FieldConfig, type FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    createElement,\n    type FunctionComponent,\n    memo,\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport { FormFieldContainer } from '../FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: unknown): void;\n}\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerFieldInput: FunctionComponent<InnerFieldInputProps> = ({\n    field,\n    onChange = noop,\n    component = 'input',\n    render,\n    ...props\n}) => {\n    const prevValueRef = useRef<unknown>(field.value);\n\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const comparableValue = isDate(field.value) ? field.value.getTime() : field.value;\n        const comparablePrevValue = isDate(prevValueRef.current)\n            ? prevValueRef.current.getTime()\n            : prevValueRef.current;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(field.value);\n        }\n\n        prevValueRef.current = field.value;\n    }, [field.value, onChange]);\n\n    if (render) {\n        return render({ field, ...props });\n    }\n\n    if (typeof component === 'string') {\n        return createElement(component, field);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return createElement(component as any, { field, ...props });\n};\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    meta={form.getFieldMeta(field.name)}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest}>{renderInnerField}</Field>;\n};\n\nexport default memo(BasicFormField);\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nexport default PaymentMethodId;\n","import React, { type FunctionComponent } from 'react';\n\nexport const CartSummarySkeleton: FunctionComponent = () => (\n    <aside className=\"layout-cart\">\n        <article className=\"cart optimizedCheckout-orderSummary checkout-page-skeleton checkout-page-skeleton--cart\">\n            <div className=\"item--first\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n            </div>\n            <div className=\"item--product\">\n                <div className=\"figure\" />\n                <div className=\"name\" />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item--coupon\">\n                <div />\n            </div>\n            <div className=\"item--total\">\n                <div />\n                <div />\n            </div>\n            <div className=\"item--tax\">\n                <div />\n            </div>\n            <div className=\"item--last\">\n                <div />\n                <div />\n            </div>\n        </article>\n    </aside>\n);\n"],"names":["children","className","hidden","testId","isFloatingLabelEnabled","additionalClassName","rest","IconSize","withIconContainer","OriginalComponent","memo","size","Small","Large","Medium","hasSelectedShippingOptions","consignments","length","every","consignment","selectedShippingOption","id","type","CustomError","Error","constructor","data","message","title","name","super","captureStackTrace","this","stack","setDefaultValues","defaultError","defaultTitle","ref","useRef","containerRef","createRef","focusOnError","current","erroredFormField","querySelector","join","focus","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","useCallback","setSubmitted","setTimeout","renderContent","noValidate","onSubmitCapture","values","navigateToOrderConfirmation","orderId","url","toString","window","location","pathname","replace","Promise","noop","mapCustomFormFieldsFromFormValues","customFieldsObject","customFields","forIn","value","key","fieldValue","isDate","padMonth","padStart","getMonth","padDay","getDate","getFullYear","push","fieldId","ErrorLevelType","height","role","viewBox","width","xmlns","d","fill","ErrorBoundary","Component","state","getDerivedStateFromError","error","componentDidCatch","filter","logger","props","log","errorCode","render","fallback","FormContext","createContext","isSubmitted","FormProvider","initialIsSubmitted","useState","contextValue","useMemo","Provider","isFunction","hasUnassignedLineItems","lineItems","reduce","total","lineItemIds","physicalItems","item","addedByPromotion","AccountService","requestSender","createRequestSender","create","body","put","then","response","customer","AccountCreationRequirementsError","requirements","getLanguageService","translate","prototype","AccountCreationFailedError","isDefaultOrderPayment","payment","isGiftCertificatePayment","isStoreCreditPayment","order","gatewayPayment","payments","find","detail","instructions","minLength","renderPasswordInput","field","TextInput","renderPasswordConfirmationInput","passwordLabelContent","TranslatedString","passwordConfirmationLabelContent","FormField","input","labelContent","withLanguage","mapPropsToValues","password","confirmPassword","handleSubmit","onSignUp","validationSchema","language","passwordRequirements","description","numeric","alpha","required","matches","min","max","oneOf","isSigningUp","customerCanBeCreated","Fieldset","legend","Legend","Form","Button","isLoading","variant","Primary","Alert","A","Success","MandateTextComponent","mandateText","providerId","methodId","Object","keys","entries","map","index","PaymentsWithMandates","paymentsWithMandates","mandate","href","rel","target","isPaymentWithMandate","OrderStatusMessage","config","orderNumber","orderStatus","supportEmail","supportPhoneNumber","TranslatedHtml","checkoutSettings","features","status","hasDigitalItems","isDownloadable","ContinueButton","siteLink","action","method","Secondary","mapFromPayments","amount","code","remaining","used","balance","purchaseDate","getStoreCreditAmount","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","fees","isShippingDiscountDisplayEnabled","shippingAmount","shipping","discounts","discount","getTotalAutomaticDiscount","getOrderShippingCostAfterAutomaticDiscount","subtotalAmount","shippingAmountBeforeDiscount","undefined","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","handleClick","throttle","print","onClick","preventDefault","OrderSummary","lazy","retry","OrderSummaryDrawer","OrderSummaryContainer","currency","shopperCurrency","MobileView","matched","LazyContainer","loadingSkeleton","headerLink","storeCurrency","orderAmount","CartSummarySkeleton","OrderConfirmationPage","hasSignedUp","onErrorModalClose","paymentInstructions","shopperConfig","shouldShowPasswordForm","isEmbedded","billingAddress","firstName","dangerouslySetInnerHTML","__html","sanitize","getPasswordRequirements","customerId","ErrorModal","onClose","shouldShowErrorCode","OrderConfirmation","containerId","createAccount","createEmbeddedMessenger","embeddedStylesheet","errorLogger","setError","setHasSignedUp","setIsSigningUp","embeddedMessengerRef","checkoutState","getOrder","getConfig","statuses","isLoadingOrder","checkoutService","loadOrder","analyticsTracker","useAnalytics","handleUnhandledError","e","postError","useEffect","links","messenger","parentOrigin","receiveStyles","styles","append","postFrameLoaded","contentId","orderPurchased","catch","OrderConfirmationPageSkeleton","storeProfile","orderEmail","storePhoneNumber","isExperimentEnabled","err","publicPath","sentryConfig","sentrySampleRate","accountService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createErrorLogger","sentry","errorTypes","sampleRate","newsletter","LocaleProvider","CheckoutProvider","AnalyticsProvider","ExtensionProvider","ThemeProvider","forwardRef","appearFocused","themeV2","formFields","custom","schema","label","fieldType","maxValue","minValue","nullable","transform","originalValue","isNaN","CHECKBOX","requiredErrorMessage","query","isMobileView","matchMedia","AlertType","icon","describedBy","useId","Info","Warning","IconError","renderDefaultIcon","placeholder","includes","getProviderWithCustomCheckout","PaypalCommerce","PaypalCommerceCreditCards","PayPalCommerceAcceleratedCheckout","Braintree","BraintreeAcceleratedCheckout","Toggle","openByDefault","isOpen","toggle","displayAdditionalInformation","shippingCostAfterDiscount","imageUrl","alt","src","transitTime","additionalDescription","cost","ShopperCurrency","isBuyNowCart","cart","lastPathName","split","pop","params","URLSearchParams","search","source","get","toCustomerCurrency","rows","content","i","skeleton","findLineItems","compact","itemId","isNil","parentId","renderWhileLoading","createInjectHoc","LocaleContext","displayNamePrefix","pickProps","ReactDatePicker","onChange","options","date","inputDateFormat","inputFormat","handleDateChange","dateValue","event","DynamicFormFieldType","DROPDOWM","optionValue","RADIO","RadioInput","checked","CheckboxInput","Array","isArray","DATE","Suspense","autoComplete","calendarClassName","dateFormat","maxDate","Date","minDate","placeholderText","toUpperCase","popperClassName","selected","MULTILINE","PASSWORD","ContextComponent","InnerDecoratedComponent","DecoratedComponent","context","useContext","injectedProps","pickBy","isEmpty","mergedProps","displayName","isCustomError","customError","mapAddressToFormValues","fields","address","addressFormValues","default","defaultValue","fieldName","getValue","shouldSaveAddress","stateOrProvince","stateOrProvinceCode","getDefaultValue","year","month","day","Number","footer","renderField","htmlFor","errorId","kebabCase","ConsoleErrorLogger","console","customConsole","tags","level","meta","info","warn","NoopErrorLogger","FILENAME_PREFIX","SeverityLevelEnum","SentryErrorLogger","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","RegExp","consoleLogger","dsn","sentryOnLoad","Sentry","init","beforeSend","bind","denyUrls","integrations","globalHandlersIntegration","onerror","onunhandledrejection","rewriteFramesIntegration","lazyLoadIntegration","addIntegration","iteratee","payload","loadSentry","computeErrorCode","captureException","mapToSentryLevel","extra","fingerprint","loaderPromise","exec","loadScript","attributes","crossorigin","async","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","startsWith","serviceConfig","setCheckoutState","getState","unsubscribeRef","subscribe","newCheckoutState","getPasswordRequirementsFromConfig","minlength","allSlashes","LoadingSkeleton","shouldShowChildren","Boolean","style","position","left","top","getShippingCostAfterAutomaticDiscount","discountTotal","DEFAULT_OPTIONS","count","interval","fn","resolve","NoopCheckoutSupport","isSupported","EmbeddedCheckoutUnsupportedError","EmbeddedCheckoutSupport","unsupportedMethods","langService","ids","methods","UNSUPPORTED_METHODS","CheckoutPageSkeletonDesktop","CheckoutPageSkeletonMobile","AnalyticsContext","waitInterval","loginUrl","isWaiting","setIsWaiting","waitToken","clearTimeout","LoadingOverlay","hideContentWhenLoading","CustomerViewType","buttonsCount","_v","SUPPORTED_METHODS","getSupportedMethodIds","methodIds","AmazonPayV2Button","module","BigCommercePaymentsButton","BigcommercePaymentsPayLaterButton","CheckoutButton","GooglePayButton","PayPalCommerceCreditButton","PayPalCommerceButton","StripeLinkV2Button","ComponentRegistry","resolveCheckoutButton","resolveId","components","resolveLazyComponent","ApplePayButton","isShowingWalletButtonsOnTop","onError","paypalCommerceIds","withCheckout","getCustomer","isPaymentDataRequired","isInitializedCustomer","errors","getInitializeCustomerError","providers","remoteCheckoutProviders","availableMethodIds","isGuest","checkEmbeddedSupport","isPaymentStepActive","onUnhandledError","onWalletButtonClick","isPayPalCommerce","ResolvedCheckoutButton","deinitialize","deinitializeCustomer","initialize","initializeCustomer","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","showSuggestion","setShowSuggestion","bolt","onInit","hasBoltAccount","email","customerSuggestionInit","stopPropagation","provider","providerFlow","IconBolt","getCheckout","checkout","providerWithCustomCheckout","handleExecutePaymentMethodCheckout","customerSuggestionExecute","PaymentMethodId","Bolt","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","getBillingAddress","isSigningOut","checkoutLink","logoutLink","isSignedIn","shouldRedirectToStorefrontForAuth","signOut","signOutCustomer","onSignOut","onSignOutError","assign","isCartEmpty","reload","isErrorWithType","Tiny","hideText","isInitializing","supportedMethodIds","EMAIL_REGEXP","getEmailValidationSchema","getTranslateCreateCustomerError","lastName","concat","getCustomFormFieldsValidationSchema","getAcceptsMarketingEmailsDefault","defaultShouldSubscribe","requiresMarketingConsent","onSubmit","acceptsMarketingEmails","getCreateCustomerValidationSchema","createAccountError","isCreatingAccount","onCancel","createAccountErrorMessage","isRequestError","splitMessage","trim","updatedItems","items","transformFormFieldsData","DynamicFormField","autocomplete","extraClass","parentFieldName","disabled","translatedString","parsedString","parseAnchor","renderInput","onSendLoginEmail","isSendingEmail","emailHasBeenRequested","onRequestClose","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","LoadingSpinner","sent_email","form","expiry","minutes","Math","round","Modal","additionalBodyClassName","additionalModalClassName","header","ModalHeader","shouldShowCloseButton","isFastlaneHostWindow","hasOwnProperty","getPaymentMethod","paymentMethod","shouldRenderFastlaneWatermark","initializationData","isFastlanePrivacySettingEnabled","braintreeFastlane","paypalFastlane","FastlaneWatermarkComponent","includeAdditionalInfo","result","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","isExpressPrivacyPolicy","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","Input","String","Label","SubscribeSessionStorage","setSubscribeStatus","shouldSubscribe","sessionStorage","setItem","getSubscribeStatus","getItem","removeSubscribeStatus","removeItem","getShouldSubscribeValue","onContinueAsGuest","privacyPolicyUrl","baseSchema","canSubscribe","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","shouldShowEmailWatermark","setFieldValue","fieldProps","loginLink","BasicFormField","tabIndex","RedirectToStorefrontLogin","isDisabled","onSignIn","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","Login","changeEmailLink","mapErrorMessage","SuggestedLogin","CancellableEnforcedLogin","EnforcedLogin","setStatus","valSuccess","step","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","container","onEmailChange","getStyles","getStripeStyles","gatewayId","getStylesFromElement","properties","parentContainer","document","getElementById","getAppliedStyles","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","buttonText","display","Customer","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","setState","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","paymentProviderCustomer","getPaymentProviderCustomer","shouldEncourageSignIn","stripeLinkAuthenticationState","executePaymentMethodCheckoutOrContinue","handleSignIn","credentials","signIn","onSignInError","handleCreateAccount","onAccountCreated","mapCreateAccountFromFormValues","showCreateAccount","CreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","Guest","handleChangeEmail","customerEmailEntry","handleShowLogin","StripeUPE","continueWithCheckoutCallback","checkoutPaymentMethodExecuted","componentDidMount","onReady","componentWillUnmount","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","checkoutButtonIds","isContinuingAsGuest","isSubscribed","isWalletButtonsOnTop","shouldRenderStripeForm","isLoadingGuestForm","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isGuestEnabled","isAccountCreationEnabled","customerPaymentMethodExecuted","getCustomerAccountFields","getCart","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","forgotPasswordLink","guestCheckoutEnabled","signInCustomer","shouldUseStripeLinkByMinimumAmount","promotions","banners","promotion","banner","text","compactView","paypalFastlaneAddresses","usePayPalFastlaneAddress","shippingAddress","showPayPalFastlaneAddressLabel","StaticAddress","AddressType","Shipping","PoweredByPayPalFastlaneLabel","StaticConsignmentItemList","StaticShippingOption","consignmentNumber","getShippingCountries","addressWithoutLocalization","localizeAddress","address1","address2","city","localizedProvince","localizedCountry","postalCode","getLineItemsCount","ConsignmentLineItemDetail","isMultiShippingSummary","isMultiShippingMode","ShippingOptionExpiredError","heading","isActive","isEditable","onEdit","summary","isBusy","suggestion","onExpanded","isClosed","setIsClosed","contentRef","timeoutRef","timeoutDelay","getParentContainer","parentElement","classList","contains","focusStep","delay","parseFloat","getComputedStyle","transitionDuration","getChildInput","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","getScrollPosition","scrollTo","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","CheckoutStepType","some","lineItem","isShippingRequired","customItems","getCustomerStepStatus","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","getStripeLinkAndCheckoutPageIsReloaded","getBillingStepStatus","getBillingAddressFields","countryCode","billingAddressFields","hasAddress","isValidAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","Billing","getShippingStepStatus","getShippingAddress","getConsignments","getShippingAddressFields","shippingAddressFields","hasOptions","hasUnassignedItems","isCustomShippingSelected","getPaymentStepStatus","Payment","getOrderSubmitStatus","isSubmittingOrder","customerStep","shippingStep","billingStep","paymentStep","steps","defaultActiveStep","isPrevStepComplete","slice","prevStep","CartSummary","CartSummaryDrawer","Checkout","isBillingSameAsShipping","isRedirecting","buttonConfigs","handleToggleMultiShipping","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","trackStepCompleted","navigateToStep","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","trackStepViewed","handleError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","handleShippingNextStep","handleShippingSignIn","handleShippingCreateAccount","customerViewType","createAccountUrl","handleBeforeExit","exitCheckout","handleWalletButtonClick","methodName","walletButtonClick","reloadWindow","unsubscribeFromConsignments","removeEventListener","extensionService","loadPaymentMethodByIds","subscribeToConsignments","supportedProviders","configs","getPaymentMethods","preloadExtensions","errorFlashMessages","getFlashMessages","postLoaded","prerendering","checkoutBegin","once","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","defaultNewsletterSignupOption","isUsingMultiShipping","errorModal","mapCheckoutComponentErrorMessage","isPending","extensionState","isShowingLoadingIndicator","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","hasCartChanged","AddressFormSkeleton","cartHasChanged","navigateNextStep","onToggleMultiShipping","setIsMultishippingMode","StaticBillingAddress","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","Extension","region","withExtension","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscriber","walletButtonsOnTopFlag","isLoadingCheckout","loadCheckout","useLoadCheckout","checkoutId","setIsLoadingCheckout","useExtensions","fetchDataWithRetry","maxRetries","attemptFetch","attemptSequence","all","include","loadExtensions","CheckoutPage","createEmbeddedCheckoutSupport","InnerField","component","InnerFieldInput","hasError","prevForm","prevField","prevProps","nextForm","nextField","nextProps","prevValueRef","getTime","createElement","renderInnerField","renderMessage","Consumer","handleOnRequestClose","nativeEvent","renderErrorCode","headers","aria","labelledby","shouldBeTranslatedAsHtml","isHtmlError","translationKey","isValidSync","WHITELIST_REGEXP","maxLength","getTranslateAddressError","requiredFieldErrorTranslationIds","company","phone","memoize","getFormFieldsValidationSchema","paymentWithCustomCheckout","isPayPalFastlaneEnabled","paypalFastlaneCustomer","customerAuthenticationState","authenticationState","addresses","shouldShowPayPalFastlaneLabel","shouldShowPayPalFastlaneShippingForm","analyticsContext","CheckoutContext","useCheckout","queries","mobile","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","remove","handleSelectAll","checkedValues","difference","forEach","val","handleSelectNone","handleInputChange","indexOf","FormFieldContainer","DynamicInput","FormFieldError","renderProps","pick","secret","fieldLabel","inputId","fieldInputId","isFloatingLabelSupportedFieldType","labelComponent","labelClassName","dynamicFormFieldType","NUMBER","TELEPHONE","TEXT","helperLabel","mapToPropsOrFactory","mapToProps","isMapToPropsFactory","mappedProps","setIsOpen","ButtonVariant","ButtonSize","getClassName","isFullWidth","Action","normalizeAddress","omit","paypalFastlaneAddress","bcAddress","isEqual","isEqualToPayPalFastlaneAddress","getNestedValue","obj","path","acc","formikContext","touched","ADD_ATTR","toCSSRule","selector","mergedStyles","EmbeddedCheckoutStyleParser","parse","rules","secondaryText","secondaryHeading","link","hover","button","active","secondaryButton","select","checkbox","radio","checklist","discountBanner","loadingBanner","orderSummary","EmbeddedCheckoutStylesheet","embeddedCheckoutStyleParser","_parser","head","appendChild","sheet","CSSStyleSheet","rule","insertRule","appendStylesheet","registry","results","resolveIds","resolverId","sort","a","b","matchedName","quantity","createAnalyticsService","createFn","createArguments","getStepTracker","getBodlService","getBraintreeAnalyticTracker","getPayPalCommerceAnalyticTracker","trackCheckoutStarted","currentStep","stepCompleted","trackOrderComplete","showShippingMethods","selectedPaymentMethod","clickPayButton","paymentRejected","paymentComplete","heightOption","buttonHeight","extensionReducer","ExtensionActionType","SHOW_LOADING_INDICATOR","RE_RENDER_SHIPPING_FORM","shippingFormRenderTimestamp","createReloadCheckoutHandler","commandType","ReloadCheckout","handler","createSetIframeStyleHandler","extension","SetIframeStyle","extensionContainer","iframe","createShowLoadingIndicatorHandler","dispatch","ShowLoadingIndicator","show","createReRenderShippingFormHandler","ReRenderShippingForm","now","createReRenderShippingStepHandler","ReRenderShippingStep","createGetConsignmentHandler","queryType","GetConsignments","useCache","postMessageToExtension","ExtensionService","handlers","extensions","getExtensions","cartId","URL","searchParams","set","as","renderExtension","getExtensionByRegion","registerHandlers","extensionId","removeListeners","clearExtensionCache","removers","remover","isRegionEnabled","handlerProps","createCommandHandlerFactory","handlerFactory","isCommandHandler","handleExtensionCommand","createQueryHandlerFactory","isQueryHandler","handleExtensionQuery","useReducer","extensionValues","ExtensionContext","isPayPalFastlaneCustomer","filterError","element","pseudoElementSelector","declaration","propertyName","getPropertyValue","extensionContext","BigCommercePaymentsCreditCards","BigCommercePaymentsFastLane","OrderConfirmationPageSkeletonDesktop","OrderConfirmationPageSkeletonMobile","MOBILE_MAX_WIDTH","countries","country","states","subdivisions","unmountContentWhenLoading","loadingUI","ThemeContext","useThemeContext","themeContext","showPayPalFastlaneLabel","getBillingCountries","useLocale","stripeLinkMinAmount","cartAmount","isStripeLinkMinAmount","div","innerHTML","anchor","anchorSiblings","outerHTML","EMPTY_ARRAY","freeze","renderItemContent","option","renderProductOptionDetails","SMALL_SCREEN_MAX_WIDTH","currentScript","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","renderOrderConfirmation","OrderConfirmationApp","FALLBACK_LOCALE","languageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","setPrototypeOf","object","__proto__","useNewTheme","experimentName","fallbackValue","call","ExtensionRegionContainer","extensionRegionToContainerMap","ShippingShippingAddressFormBefore","ShippingShippingAddressFormAfter","ShippingSelectedShippingMethod","PaymentPaymentMethodListBefore","SummaryAfter","SummaryLastItemAfter","closeButtonLabel","additionalHeaderClassName","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","setConfig","getContextValue","storeConfig","unsubscribe","getFieldMeta"],"sourceRoot":""}